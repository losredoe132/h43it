
GccApplication3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803f00  00803f00  00000c34  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a3a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000166  00008a3a  00000a3a  00000ace  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000013  00803f00  00803f00  00000c34  2**0
                  ALLOC
  4 .comment      0000005c  00000000  00000000  00000c34  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000c90  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000080  00000000  00000000  00000ccc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000029ac  00000000  00000000  00000d4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000017ad  00000000  00000000  000036f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000604  00000000  00000000  00004ea5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001b8  00000000  00000000  000054ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000141a  00000000  00000000  00005664  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000041b  00000000  00000000  00006a7e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000070  00000000  00000000  00006e99  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	33 c0       	rjmp	.+102    	; 0x6a <__bad_interrupt>
   4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
   6:	7b c1       	rjmp	.+758    	; 0x2fe <__vector_3>
   8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
   a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
   c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
   e:	8e c1       	rjmp	.+796    	; 0x32c <__vector_7>
  10:	9e c1       	rjmp	.+828    	; 0x34e <__vector_8>
  12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
  14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
  16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
  18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
  1a:	db c1       	rjmp	.+950    	; 0x3d2 <__vector_13>
  1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
  1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
  20:	24 c0       	rjmp	.+72     	; 0x6a <__bad_interrupt>
  22:	23 c0       	rjmp	.+70     	; 0x6a <__bad_interrupt>
  24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
  26:	21 c0       	rjmp	.+66     	; 0x6a <__bad_interrupt>
  28:	20 c0       	rjmp	.+64     	; 0x6a <__bad_interrupt>
  2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
  2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
  2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
  30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
  32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	cd bf       	out	0x3d, r28	; 61
  3c:	df e3       	ldi	r29, 0x3F	; 63
  3e:	de bf       	out	0x3e, r29	; 62

00000040 <__do_copy_data>:
  40:	1f e3       	ldi	r17, 0x3F	; 63
  42:	a0 e0       	ldi	r26, 0x00	; 0
  44:	bf e3       	ldi	r27, 0x3F	; 63
  46:	e0 ea       	ldi	r30, 0xA0	; 160
  48:	fb e0       	ldi	r31, 0x0B	; 11
  4a:	02 c0       	rjmp	.+4      	; 0x50 <__do_copy_data+0x10>
  4c:	05 90       	lpm	r0, Z+
  4e:	0d 92       	st	X+, r0
  50:	a0 30       	cpi	r26, 0x00	; 0
  52:	b1 07       	cpc	r27, r17
  54:	d9 f7       	brne	.-10     	; 0x4c <__do_copy_data+0xc>

00000056 <__do_clear_bss>:
  56:	2f e3       	ldi	r18, 0x3F	; 63
  58:	a0 e0       	ldi	r26, 0x00	; 0
  5a:	bf e3       	ldi	r27, 0x3F	; 63
  5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
  5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
  60:	a3 31       	cpi	r26, 0x13	; 19
  62:	b2 07       	cpc	r27, r18
  64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
  66:	6a d0       	rcall	.+212    	; 0x13c <main>
  68:	e6 c4       	rjmp	.+2508   	; 0xa36 <_exit>

0000006a <__bad_interrupt>:
  6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <RTCA_init>:
volatile uint16_t consecutive_counts_released ;
volatile uint16_t pit_interrupts_since_last_increase;


void RTCA_init(){
	RTC.CLKSEL = RTC_CLKSEL_INT1K_gc;				// 1024 Hz from OSCULP32K
  6c:	e0 e4       	ldi	r30, 0x40	; 64
  6e:	f1 e0       	ldi	r31, 0x01	; 1
  70:	81 e0       	ldi	r24, 0x01	; 1
  72:	87 83       	std	Z+7, r24	; 0x07
	RTC.CTRLA = RTC_RTCEN_bm;					// enable RTC
  74:	80 83       	st	Z, r24
	RTC.PITINTCTRL = RTC_PI_bm;					// enable periodic interrupt
  76:	82 8b       	std	Z+18, r24	; 0x12
	RTC.PITCTRLA = RTC_PERIOD_CYC8192_gc | RTC_PITEN_bm;		// set period; enable PIT
  78:	81 e6       	ldi	r24, 0x61	; 97
  7a:	80 8b       	std	Z+16, r24	; 0x10
  7c:	08 95       	ret

0000007e <TCA0_init>:
}

void TCA0_init()
{
	// enable overflow interrupt
	TCA0.SINGLE.INTCTRL = TCA_SINGLE_OVF_bm;
  7e:	e0 e0       	ldi	r30, 0x00	; 0
  80:	fa e0       	ldi	r31, 0x0A	; 10
  82:	81 e0       	ldi	r24, 0x01	; 1
  84:	82 87       	std	Z+10, r24	; 0x0a

	// set Normal mode
	TCA0.SINGLE.CTRLB = TCA_SINGLE_WGMODE_NORMAL_gc;
  86:	11 82       	std	Z+1, r1	; 0x01

	// disable event counting
	TCA0.SINGLE.EVCTRL &= ~(TCA_SINGLE_CNTEI_bm);
  88:	81 85       	ldd	r24, Z+9	; 0x09
  8a:	8e 7f       	andi	r24, 0xFE	; 254
  8c:	81 87       	std	Z+9, r24	; 0x09

	// set the period
	TCA0.SINGLE.PER = TCAdelay;
  8e:	81 e0       	ldi	r24, 0x01	; 1
  90:	90 e0       	ldi	r25, 0x00	; 0
  92:	86 a3       	std	Z+38, r24	; 0x26
  94:	97 a3       	std	Z+39, r25	; 0x27

	// set clock
	TCA0.SINGLE.CTRLA = TCA_SINGLE_CLKSEL_DIV1024_gc | TCA_SINGLE_ENABLE_bm;    /* source (sys_clk/8) +  start timer */
  96:	8f e0       	ldi	r24, 0x0F	; 15
  98:	80 83       	st	Z, r24
  9a:	08 95       	ret

0000009c <TCB0_init>:
}

void TCB0_init (void)
{
	/* Load the Compare or Capture register with the timeout value*/
	TCB0.CCMP = TCB_CMP_EXAMPLE_VALUE;
  9c:	e0 e4       	ldi	r30, 0x40	; 64
  9e:	fa e0       	ldi	r31, 0x0A	; 10
  a0:	8f ef       	ldi	r24, 0xFF	; 255
  a2:	9f ef       	ldi	r25, 0xFF	; 255
  a4:	84 87       	std	Z+12, r24	; 0x0c
  a6:	95 87       	std	Z+13, r25	; 0x0d
	
	/* Enable TCB and set CLK_PER divider to 1 (No Prescaling) */
	TCB0.CTRLA = TCB_CLKSEL_CLKDIV2_gc | TCB_ENABLE_bm ;
  a8:	83 e0       	ldi	r24, 0x03	; 3
  aa:	80 83       	st	Z, r24
	
	/* Enable Capture or Timeout interrupt */
	TCB0.INTCTRL = TCB_CAPT_bm;
  ac:	81 e0       	ldi	r24, 0x01	; 1
  ae:	85 83       	std	Z+5, r24	; 0x05
  b0:	08 95       	ret

000000b2 <LEDOnById>:
}


void LEDOnById(int i){
	PORTA.OUT = port_a_b_outs[i][0];
  b2:	88 0f       	add	r24, r24
  b4:	99 1f       	adc	r25, r25
  b6:	fc 01       	movw	r30, r24
  b8:	e2 58       	subi	r30, 0x82	; 130
  ba:	f4 47       	sbci	r31, 0x74	; 116
  bc:	80 81       	ld	r24, Z
  be:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <port_a_b_outs+0x7f7886>
	PORTB.OUT= port_a_b_outs[i][1];
  c2:	81 81       	ldd	r24, Z+1	; 0x01
  c4:	80 93 24 04 	sts	0x0424, r24	; 0x800424 <port_a_b_outs+0x7f78a6>
  c8:	08 95       	ret

000000ca <allLEDoff>:
}

void allLEDoff(){
	PORTA.OUT = port_a_b_outs[0][0];
  ca:	8f ef       	ldi	r24, 0xFF	; 255
  cc:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <port_a_b_outs+0x7f7886>
	PORTB.OUT= port_a_b_outs[0][1];
  d0:	10 92 24 04 	sts	0x0424, r1	; 0x800424 <port_a_b_outs+0x7f78a6>
  d4:	08 95       	ret

000000d6 <wait_until_button_released>:
}

void wait_until_button_released()
{
  d6:	cf 93       	push	r28
  d8:	df 93       	push	r29
	while(consecutive_counts_released<6){printf("Waiting for release with consecutive_counts_pressed:%d, consecutive_counts_released:%d\n",consecutive_counts_pressed, consecutive_counts_released );}
  da:	80 91 04 3f 	lds	r24, 0x3F04	; 0x803f04 <consecutive_counts_released>
  de:	90 91 05 3f 	lds	r25, 0x3F05	; 0x803f05 <consecutive_counts_released+0x1>
  e2:	06 97       	sbiw	r24, 0x06	; 6
  e4:	e8 f4       	brcc	.+58     	; 0x120 <__DATA_REGION_LENGTH__+0x20>
  e6:	ca e3       	ldi	r28, 0x3A	; 58
  e8:	da e8       	ldi	r29, 0x8A	; 138
  ea:	20 91 04 3f 	lds	r18, 0x3F04	; 0x803f04 <consecutive_counts_released>
  ee:	30 91 05 3f 	lds	r19, 0x3F05	; 0x803f05 <consecutive_counts_released+0x1>
  f2:	80 91 09 3f 	lds	r24, 0x3F09	; 0x803f09 <consecutive_counts_pressed>
  f6:	90 91 0a 3f 	lds	r25, 0x3F0A	; 0x803f0a <consecutive_counts_pressed+0x1>
  fa:	3f 93       	push	r19
  fc:	2f 93       	push	r18
  fe:	9f 93       	push	r25
 100:	8f 93       	push	r24
 102:	df 93       	push	r29
 104:	cf 93       	push	r28
 106:	a1 d1       	rcall	.+834    	; 0x44a <printf>
 108:	80 91 04 3f 	lds	r24, 0x3F04	; 0x803f04 <consecutive_counts_released>
 10c:	90 91 05 3f 	lds	r25, 0x3F05	; 0x803f05 <consecutive_counts_released+0x1>
 110:	0f 90       	pop	r0
 112:	0f 90       	pop	r0
 114:	0f 90       	pop	r0
 116:	0f 90       	pop	r0
 118:	0f 90       	pop	r0
 11a:	0f 90       	pop	r0
 11c:	06 97       	sbiw	r24, 0x06	; 6
 11e:	28 f3       	brcs	.-54     	; 0xea <wait_until_button_released+0x14>
	consecutive_counts_pressed=0;
 120:	10 92 09 3f 	sts	0x3F09, r1	; 0x803f09 <consecutive_counts_pressed>
 124:	10 92 0a 3f 	sts	0x3F0A, r1	; 0x803f0a <consecutive_counts_pressed+0x1>
	consecutive_counts_released=0;
 128:	10 92 04 3f 	sts	0x3F04, r1	; 0x803f04 <consecutive_counts_released>
 12c:	10 92 05 3f 	sts	0x3F05, r1	; 0x803f05 <consecutive_counts_released+0x1>
	printf("Released\n");
 130:	82 e9       	ldi	r24, 0x92	; 146
 132:	9a e8       	ldi	r25, 0x8A	; 138
 134:	9d d1       	rcall	.+826    	; 0x470 <puts>
}
 136:	df 91       	pop	r29
 138:	cf 91       	pop	r28
 13a:	08 95       	ret

0000013c <main>:

int main() {


	RTCA_init(10); // set periodic RTC triggering "awakening" delay in seconds
 13c:	8a e0       	ldi	r24, 0x0A	; 10
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	95 df       	rcall	.-214    	; 0x6c <RTCA_init>
	TCA0_init();
 142:	9d df       	rcall	.-198    	; 0x7e <TCA0_init>
	TCB0_init();
 144:	ab df       	rcall	.-170    	; 0x9c <TCB0_init>
	//USART0_init();

	PORTA.DIRSET = 0b10111111;
 146:	e0 e0       	ldi	r30, 0x00	; 0
 148:	f4 e0       	ldi	r31, 0x04	; 4
 14a:	8f eb       	ldi	r24, 0xBF	; 191
 14c:	81 83       	std	Z+1, r24	; 0x01
	PORTB.DIRSET = 0b11111111;
 14e:	8f ef       	ldi	r24, 0xFF	; 255
 150:	80 93 21 04 	sts	0x0421, r24	; 0x800421 <port_a_b_outs+0x7f78a3>

	// Button setup
	PORTA.PIN6CTRL = PORT_ISC_FALLING_gc | PORT_PULLUPEN_bm; // Enable pull-up resistor
 154:	8b e0       	ldi	r24, 0x0B	; 11
 156:	86 8b       	std	Z+22, r24	; 0x16

	
	// Initialize variables
	consecutive_counts_pressed=0;
 158:	10 92 09 3f 	sts	0x3F09, r1	; 0x803f09 <consecutive_counts_pressed>
 15c:	10 92 0a 3f 	sts	0x3F0A, r1	; 0x803f0a <consecutive_counts_pressed+0x1>
	consecutive_counts_released=0;
 160:	10 92 04 3f 	sts	0x3F04, r1	; 0x803f04 <consecutive_counts_released>
 164:	10 92 05 3f 	sts	0x3F05, r1	; 0x803f05 <consecutive_counts_released+0x1>
	pit_interrupts_since_last_increase=0; // TODO read this from EEPROM
 168:	10 92 0b 3f 	sts	0x3F0B, r1	; 0x803f0b <pit_interrupts_since_last_increase>
 16c:	10 92 0c 3f 	sts	0x3F0C, r1	; 0x803f0c <pit_interrupts_since_last_increase+0x1>
	x=5;
 170:	85 e0       	ldi	r24, 0x05	; 5
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	80 93 02 3f 	sts	0x3F02, r24	; 0x803f02 <x>
 178:	90 93 03 3f 	sts	0x3F03, r25	; 0x803f03 <x+0x1>
	i=0;
 17c:	10 92 06 3f 	sts	0x3F06, r1	; 0x803f06 <i>
 180:	10 92 07 3f 	sts	0x3F07, r1	; 0x803f07 <i+0x1>
	pit_interrupt=0;
 184:	10 92 08 3f 	sts	0x3F08, r1	; 0x803f08 <pit_interrupt>
	
	sei();
 188:	78 94       	sei
	SLPCTRL.CTRLA |= SLPCTRL_SMODE_STDBY_gc; // set POWER DOWN as sleep mode
 18a:	e0 e5       	ldi	r30, 0x50	; 80
 18c:	f0 e0       	ldi	r31, 0x00	; 0
 18e:	80 81       	ld	r24, Z
 190:	82 60       	ori	r24, 0x02	; 2
 192:	80 83       	st	Z, r24
	SLPCTRL.CTRLA |= SLPCTRL_SEN_bm; // enable sleep mode
 194:	80 81       	ld	r24, Z
 196:	81 60       	ori	r24, 0x01	; 1
 198:	80 83       	st	Z, r24
	
	printf("booting finished\n");
 19a:	8b e9       	ldi	r24, 0x9B	; 155
 19c:	9a e8       	ldi	r25, 0x8A	; 138
 19e:	68 d1       	rcall	.+720    	; 0x470 <puts>
	wait_until_button_released();
 1a0:	9a df       	rcall	.-204    	; 0xd6 <wait_until_button_released>
				printf("Increase not possible because not enough time has passed since the last time.\n");
				allLEDoff();
				_delay_ms(250);
			}
			else{
				printf("Increasing x to %d \n", x);
 1a2:	ca ef       	ldi	r28, 0xFA	; 250
 1a4:	da e8       	ldi	r29, 0x8A	; 138
			
			pit_interrupt=0;
			pit_interrupts_since_last_increase++;
			if (pit_interrupts_since_last_increase > 3){
				printf("Reseting x due to long inactivity\n");
				x= 1;
 1a6:	cc 24       	eor	r12, r12
 1a8:	c3 94       	inc	r12
 1aa:	d1 2c       	mov	r13, r1
			}
			printf("again just PIT with %d \n", pit_interrupts_since_last_increase);
 1ac:	03 e4       	ldi	r16, 0x43	; 67
 1ae:	1b e8       	ldi	r17, 0x8B	; 139

			allLEDoff();
			
			if (pit_interrupts_since_last_increase%5){
				printf("every nth PIT should be visible\n ");
 1b0:	0f 2e       	mov	r0, r31
 1b2:	fc e5       	ldi	r31, 0x5C	; 92
 1b4:	ef 2e       	mov	r14, r31
 1b6:	fb e8       	ldi	r31, 0x8B	; 139
 1b8:	ff 2e       	mov	r15, r31
 1ba:	f0 2d       	mov	r31, r0
	
	printf("booting finished\n");
	wait_until_button_released();

	while(1){
		if (consecutive_counts_pressed> 25){
 1bc:	80 91 09 3f 	lds	r24, 0x3F09	; 0x803f09 <consecutive_counts_pressed>
 1c0:	90 91 0a 3f 	lds	r25, 0x3F0A	; 0x803f0a <consecutive_counts_pressed+0x1>
 1c4:	4a 97       	sbiw	r24, 0x1a	; 26
 1c6:	70 f1       	brcs	.+92     	; 0x224 <main+0xe8>
			
			if (pit_interrupts_since_last_increase< 2){
 1c8:	80 91 0b 3f 	lds	r24, 0x3F0B	; 0x803f0b <pit_interrupts_since_last_increase>
 1cc:	90 91 0c 3f 	lds	r25, 0x3F0C	; 0x803f0c <pit_interrupts_since_last_increase+0x1>
 1d0:	02 97       	sbiw	r24, 0x02	; 2
 1d2:	68 f4       	brcc	.+26     	; 0x1ee <main+0xb2>
				printf("Increase not possible because not enough time has passed since the last time.\n");
 1d4:	8c ea       	ldi	r24, 0xAC	; 172
 1d6:	9a e8       	ldi	r25, 0x8A	; 138
 1d8:	4b d1       	rcall	.+662    	; 0x470 <puts>
				allLEDoff();
 1da:	77 df       	rcall	.-274    	; 0xca <allLEDoff>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1dc:	2a e0       	ldi	r18, 0x0A	; 10
 1de:	8b e8       	ldi	r24, 0x8B	; 139
 1e0:	92 e0       	ldi	r25, 0x02	; 2
 1e2:	21 50       	subi	r18, 0x01	; 1
 1e4:	80 40       	sbci	r24, 0x00	; 0
 1e6:	90 40       	sbci	r25, 0x00	; 0
 1e8:	e1 f7       	brne	.-8      	; 0x1e2 <main+0xa6>
 1ea:	00 c0       	rjmp	.+0      	; 0x1ec <main+0xb0>
 1ec:	1a c0       	rjmp	.+52     	; 0x222 <main+0xe6>
				_delay_ms(250);
			}
			else{
				printf("Increasing x to %d \n", x);
 1ee:	80 91 02 3f 	lds	r24, 0x3F02	; 0x803f02 <x>
 1f2:	90 91 03 3f 	lds	r25, 0x3F03	; 0x803f03 <x+0x1>
 1f6:	9f 93       	push	r25
 1f8:	8f 93       	push	r24
 1fa:	df 93       	push	r29
 1fc:	cf 93       	push	r28
 1fe:	25 d1       	rcall	.+586    	; 0x44a <printf>
				
				x++;
 200:	80 91 02 3f 	lds	r24, 0x3F02	; 0x803f02 <x>
 204:	90 91 03 3f 	lds	r25, 0x3F03	; 0x803f03 <x+0x1>
 208:	01 96       	adiw	r24, 0x01	; 1
 20a:	80 93 02 3f 	sts	0x3F02, r24	; 0x803f02 <x>
 20e:	90 93 03 3f 	sts	0x3F03, r25	; 0x803f03 <x+0x1>
				pit_interrupts_since_last_increase =0 ;
 212:	10 92 0b 3f 	sts	0x3F0B, r1	; 0x803f0b <pit_interrupts_since_last_increase>
 216:	10 92 0c 3f 	sts	0x3F0C, r1	; 0x803f0c <pit_interrupts_since_last_increase+0x1>
 21a:	0f 90       	pop	r0
 21c:	0f 90       	pop	r0
 21e:	0f 90       	pop	r0
 220:	0f 90       	pop	r0
				
			}

			wait_until_button_released();
 222:	59 df       	rcall	.-334    	; 0xd6 <wait_until_button_released>
		}
		
		if (consecutive_counts_released>200){
 224:	80 91 04 3f 	lds	r24, 0x3F04	; 0x803f04 <consecutive_counts_released>
 228:	90 91 05 3f 	lds	r25, 0x3F05	; 0x803f05 <consecutive_counts_released+0x1>
 22c:	89 3c       	cpi	r24, 0xC9	; 201
 22e:	91 05       	cpc	r25, r1
 230:	b8 f0       	brcs	.+46     	; 0x260 <main+0x124>
			printf("going to sleep...\n");
 232:	8f e0       	ldi	r24, 0x0F	; 15
 234:	9b e8       	ldi	r25, 0x8B	; 139
 236:	1c d1       	rcall	.+568    	; 0x470 <puts>
			allLEDoff();
 238:	48 df       	rcall	.-368    	; 0xca <allLEDoff>
			sleep_cpu();
 23a:	88 95       	sleep
			
			
			if (pit_interrupt==0){
 23c:	80 91 08 3f 	lds	r24, 0x3F08	; 0x803f08 <pit_interrupt>
 240:	81 11       	cpse	r24, r1
 242:	0e c0       	rjmp	.+28     	; 0x260 <main+0x124>
				consecutive_counts_pressed=0;
 244:	10 92 09 3f 	sts	0x3F09, r1	; 0x803f09 <consecutive_counts_pressed>
 248:	10 92 0a 3f 	sts	0x3F0A, r1	; 0x803f0a <consecutive_counts_pressed+0x1>
				consecutive_counts_released=0;
 24c:	10 92 04 3f 	sts	0x3F04, r1	; 0x803f04 <consecutive_counts_released>
 250:	10 92 05 3f 	sts	0x3F05, r1	; 0x803f05 <consecutive_counts_released+0x1>
 254:	8d e8       	ldi	r24, 0x8D	; 141
 256:	90 e2       	ldi	r25, 0x20	; 32
 258:	01 97       	sbiw	r24, 0x01	; 1
 25a:	f1 f7       	brne	.-4      	; 0x258 <main+0x11c>
 25c:	00 00       	nop
				_delay_ms(10);
				wait_until_button_released();
 25e:	3b df       	rcall	.-394    	; 0xd6 <wait_until_button_released>
			}


		}
		
		if (pit_interrupt==1){
 260:	80 91 08 3f 	lds	r24, 0x3F08	; 0x803f08 <pit_interrupt>
 264:	81 30       	cpi	r24, 0x01	; 1
 266:	09 f0       	breq	.+2      	; 0x26a <main+0x12e>
 268:	a9 cf       	rjmp	.-174    	; 0x1bc <main+0x80>
			allLEDoff();
 26a:	2f df       	rcall	.-418    	; 0xca <allLEDoff>
 26c:	8d e8       	ldi	r24, 0x8D	; 141
 26e:	90 e2       	ldi	r25, 0x20	; 32
 270:	01 97       	sbiw	r24, 0x01	; 1
 272:	f1 f7       	brne	.-4      	; 0x270 <main+0x134>
 274:	00 00       	nop
			_delay_ms(10);
			
			pit_interrupt=0;
 276:	10 92 08 3f 	sts	0x3F08, r1	; 0x803f08 <pit_interrupt>
			pit_interrupts_since_last_increase++;
 27a:	80 91 0b 3f 	lds	r24, 0x3F0B	; 0x803f0b <pit_interrupts_since_last_increase>
 27e:	90 91 0c 3f 	lds	r25, 0x3F0C	; 0x803f0c <pit_interrupts_since_last_increase+0x1>
 282:	01 96       	adiw	r24, 0x01	; 1
 284:	80 93 0b 3f 	sts	0x3F0B, r24	; 0x803f0b <pit_interrupts_since_last_increase>
 288:	90 93 0c 3f 	sts	0x3F0C, r25	; 0x803f0c <pit_interrupts_since_last_increase+0x1>
			if (pit_interrupts_since_last_increase > 3){
 28c:	80 91 0b 3f 	lds	r24, 0x3F0B	; 0x803f0b <pit_interrupts_since_last_increase>
 290:	90 91 0c 3f 	lds	r25, 0x3F0C	; 0x803f0c <pit_interrupts_since_last_increase+0x1>
 294:	04 97       	sbiw	r24, 0x04	; 4
 296:	38 f0       	brcs	.+14     	; 0x2a6 <main+0x16a>
				printf("Reseting x due to long inactivity\n");
 298:	81 e2       	ldi	r24, 0x21	; 33
 29a:	9b e8       	ldi	r25, 0x8B	; 139
 29c:	e9 d0       	rcall	.+466    	; 0x470 <puts>
				x= 1;
 29e:	c0 92 02 3f 	sts	0x3F02, r12	; 0x803f02 <x>
 2a2:	d0 92 03 3f 	sts	0x3F03, r13	; 0x803f03 <x+0x1>
			}
			printf("again just PIT with %d \n", pit_interrupts_since_last_increase);
 2a6:	80 91 0b 3f 	lds	r24, 0x3F0B	; 0x803f0b <pit_interrupts_since_last_increase>
 2aa:	90 91 0c 3f 	lds	r25, 0x3F0C	; 0x803f0c <pit_interrupts_since_last_increase+0x1>
 2ae:	9f 93       	push	r25
 2b0:	8f 93       	push	r24
 2b2:	1f 93       	push	r17
 2b4:	0f 93       	push	r16
 2b6:	c9 d0       	rcall	.+402    	; 0x44a <printf>

			allLEDoff();
 2b8:	08 df       	rcall	.-496    	; 0xca <allLEDoff>
			
			if (pit_interrupts_since_last_increase%5){
 2ba:	40 91 0b 3f 	lds	r20, 0x3F0B	; 0x803f0b <pit_interrupts_since_last_increase>
 2be:	50 91 0c 3f 	lds	r21, 0x3F0C	; 0x803f0c <pit_interrupts_since_last_increase+0x1>
 2c2:	9a 01       	movw	r18, r20
 2c4:	ad ec       	ldi	r26, 0xCD	; 205
 2c6:	bc ec       	ldi	r27, 0xCC	; 204
 2c8:	b4 d0       	rcall	.+360    	; 0x432 <__umulhisi3>
 2ca:	96 95       	lsr	r25
 2cc:	87 95       	ror	r24
 2ce:	96 95       	lsr	r25
 2d0:	87 95       	ror	r24
 2d2:	9c 01       	movw	r18, r24
 2d4:	22 0f       	add	r18, r18
 2d6:	33 1f       	adc	r19, r19
 2d8:	22 0f       	add	r18, r18
 2da:	33 1f       	adc	r19, r19
 2dc:	82 0f       	add	r24, r18
 2de:	93 1f       	adc	r25, r19
 2e0:	0f 90       	pop	r0
 2e2:	0f 90       	pop	r0
 2e4:	0f 90       	pop	r0
 2e6:	0f 90       	pop	r0
 2e8:	48 17       	cp	r20, r24
 2ea:	59 07       	cpc	r21, r25
 2ec:	31 f0       	breq	.+12     	; 0x2fa <main+0x1be>
				printf("every nth PIT should be visible\n ");
 2ee:	ff 92       	push	r15
 2f0:	ef 92       	push	r14
 2f2:	ab d0       	rcall	.+342    	; 0x44a <printf>
 2f4:	0f 90       	pop	r0
 2f6:	0f 90       	pop	r0
 2f8:	61 cf       	rjmp	.-318    	; 0x1bc <main+0x80>
			}
			else{
				sleep_cpu();
 2fa:	88 95       	sleep
 2fc:	5f cf       	rjmp	.-322    	; 0x1bc <main+0x80>

000002fe <__vector_3>:
		
	}


}
ISR(PORTA_PORT_vect) {
 2fe:	1f 92       	push	r1
 300:	0f 92       	push	r0
 302:	0f b6       	in	r0, 0x3f	; 63
 304:	0f 92       	push	r0
 306:	11 24       	eor	r1, r1
 308:	8f 93       	push	r24
 30a:	ef 93       	push	r30
 30c:	ff 93       	push	r31
	pit_interrupt = 0 ;
 30e:	10 92 08 3f 	sts	0x3F08, r1	; 0x803f08 <pit_interrupt>
	PORTA.INTFLAGS |= btn_pin; // Clear interrupt flag
 312:	e0 e0       	ldi	r30, 0x00	; 0
 314:	f4 e0       	ldi	r31, 0x04	; 4
 316:	81 85       	ldd	r24, Z+9	; 0x09
 318:	80 64       	ori	r24, 0x40	; 64
 31a:	81 87       	std	Z+9, r24	; 0x09
}
 31c:	ff 91       	pop	r31
 31e:	ef 91       	pop	r30
 320:	8f 91       	pop	r24
 322:	0f 90       	pop	r0
 324:	0f be       	out	0x3f, r0	; 63
 326:	0f 90       	pop	r0
 328:	1f 90       	pop	r1
 32a:	18 95       	reti

0000032c <__vector_7>:

ISR(RTC_PIT_vect)
{
 32c:	1f 92       	push	r1
 32e:	0f 92       	push	r0
 330:	0f b6       	in	r0, 0x3f	; 63
 332:	0f 92       	push	r0
 334:	11 24       	eor	r1, r1
 336:	8f 93       	push	r24
	pit_interrupt = 1;
 338:	81 e0       	ldi	r24, 0x01	; 1
 33a:	80 93 08 3f 	sts	0x3F08, r24	; 0x803f08 <pit_interrupt>
	RTC.PITINTFLAGS = RTC_PI_bm;// Clear interrupt flag
 33e:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <port_a_b_outs+0x7f75d5>
}
 342:	8f 91       	pop	r24
 344:	0f 90       	pop	r0
 346:	0f be       	out	0x3f, r0	; 63
 348:	0f 90       	pop	r0
 34a:	1f 90       	pop	r1
 34c:	18 95       	reti

0000034e <__vector_8>:

ISR(TCA0_OVF_vect)
{
 34e:	1f 92       	push	r1
 350:	0f 92       	push	r0
 352:	0f b6       	in	r0, 0x3f	; 63
 354:	0f 92       	push	r0
 356:	11 24       	eor	r1, r1
 358:	2f 93       	push	r18
 35a:	3f 93       	push	r19
 35c:	4f 93       	push	r20
 35e:	5f 93       	push	r21
 360:	6f 93       	push	r22
 362:	7f 93       	push	r23
 364:	8f 93       	push	r24
 366:	9f 93       	push	r25
 368:	af 93       	push	r26
 36a:	bf 93       	push	r27
 36c:	ef 93       	push	r30
 36e:	ff 93       	push	r31
	// "Running" trough the LED table defined above and switch LEDs on & off according to the x value
	i++;
 370:	80 91 06 3f 	lds	r24, 0x3F06	; 0x803f06 <i>
 374:	90 91 07 3f 	lds	r25, 0x3F07	; 0x803f07 <i+0x1>
 378:	01 96       	adiw	r24, 0x01	; 1
 37a:	80 93 06 3f 	sts	0x3F06, r24	; 0x803f06 <i>
 37e:	90 93 07 3f 	sts	0x3F07, r25	; 0x803f07 <i+0x1>

	if (i<=x){LEDOnById(i);}
 382:	20 91 02 3f 	lds	r18, 0x3F02	; 0x803f02 <x>
 386:	30 91 03 3f 	lds	r19, 0x3F03	; 0x803f03 <x+0x1>
 38a:	28 17       	cp	r18, r24
 38c:	39 07       	cpc	r19, r25
 38e:	14 f0       	brlt	.+4      	; 0x394 <__vector_8+0x46>
 390:	90 de       	rcall	.-736    	; 0xb2 <LEDOnById>
 392:	01 c0       	rjmp	.+2      	; 0x396 <__vector_8+0x48>
	else{allLEDoff();}
 394:	9a de       	rcall	.-716    	; 0xca <allLEDoff>

	if (i>16){i=0;} // i overflow carrying
 396:	80 91 06 3f 	lds	r24, 0x3F06	; 0x803f06 <i>
 39a:	90 91 07 3f 	lds	r25, 0x3F07	; 0x803f07 <i+0x1>
 39e:	41 97       	sbiw	r24, 0x11	; 17
 3a0:	24 f0       	brlt	.+8      	; 0x3aa <__vector_8+0x5c>
 3a2:	10 92 06 3f 	sts	0x3F06, r1	; 0x803f06 <i>
 3a6:	10 92 07 3f 	sts	0x3F07, r1	; 0x803f07 <i+0x1>

	// The interrupt flag has to be cleared manually
	TCA0.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;
 3aa:	81 e0       	ldi	r24, 0x01	; 1
 3ac:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <port_a_b_outs+0x7f7e8d>
	
}
 3b0:	ff 91       	pop	r31
 3b2:	ef 91       	pop	r30
 3b4:	bf 91       	pop	r27
 3b6:	af 91       	pop	r26
 3b8:	9f 91       	pop	r25
 3ba:	8f 91       	pop	r24
 3bc:	7f 91       	pop	r23
 3be:	6f 91       	pop	r22
 3c0:	5f 91       	pop	r21
 3c2:	4f 91       	pop	r20
 3c4:	3f 91       	pop	r19
 3c6:	2f 91       	pop	r18
 3c8:	0f 90       	pop	r0
 3ca:	0f be       	out	0x3f, r0	; 63
 3cc:	0f 90       	pop	r0
 3ce:	1f 90       	pop	r1
 3d0:	18 95       	reti

000003d2 <__vector_13>:


ISR(TCB0_INT_vect)
{
 3d2:	1f 92       	push	r1
 3d4:	0f 92       	push	r0
 3d6:	0f b6       	in	r0, 0x3f	; 63
 3d8:	0f 92       	push	r0
 3da:	11 24       	eor	r1, r1
 3dc:	8f 93       	push	r24
 3de:	9f 93       	push	r25
	// Counting consecutive ticks of pressed or released button. Use case: Debouncing and short and long press detection.
	if (~PORTA.IN & btn_pin){
 3e0:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <port_a_b_outs+0x7f788a>
 3e4:	86 fd       	sbrc	r24, 6
 3e6:	0e c0       	rjmp	.+28     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
		consecutive_counts_pressed++;
 3e8:	80 91 09 3f 	lds	r24, 0x3F09	; 0x803f09 <consecutive_counts_pressed>
 3ec:	90 91 0a 3f 	lds	r25, 0x3F0A	; 0x803f0a <consecutive_counts_pressed+0x1>
 3f0:	01 96       	adiw	r24, 0x01	; 1
 3f2:	80 93 09 3f 	sts	0x3F09, r24	; 0x803f09 <consecutive_counts_pressed>
 3f6:	90 93 0a 3f 	sts	0x3F0A, r25	; 0x803f0a <consecutive_counts_pressed+0x1>
		consecutive_counts_released=0;
 3fa:	10 92 04 3f 	sts	0x3F04, r1	; 0x803f04 <consecutive_counts_released>
 3fe:	10 92 05 3f 	sts	0x3F05, r1	; 0x803f05 <consecutive_counts_released+0x1>
 402:	0d c0       	rjmp	.+26     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
	}
	else{
		consecutive_counts_pressed=0;
 404:	10 92 09 3f 	sts	0x3F09, r1	; 0x803f09 <consecutive_counts_pressed>
 408:	10 92 0a 3f 	sts	0x3F0A, r1	; 0x803f0a <consecutive_counts_pressed+0x1>
		consecutive_counts_released++;
 40c:	80 91 04 3f 	lds	r24, 0x3F04	; 0x803f04 <consecutive_counts_released>
 410:	90 91 05 3f 	lds	r25, 0x3F05	; 0x803f05 <consecutive_counts_released+0x1>
 414:	01 96       	adiw	r24, 0x01	; 1
 416:	80 93 04 3f 	sts	0x3F04, r24	; 0x803f04 <consecutive_counts_released>
 41a:	90 93 05 3f 	sts	0x3F05, r25	; 0x803f05 <consecutive_counts_released+0x1>
	}
	TCB0.INTFLAGS = TCB_CAPT_bm; /* Clear the interrupt flag */
 41e:	81 e0       	ldi	r24, 0x01	; 1
 420:	80 93 46 0a 	sts	0x0A46, r24	; 0x800a46 <port_a_b_outs+0x7f7ec8>
 424:	9f 91       	pop	r25
 426:	8f 91       	pop	r24
 428:	0f 90       	pop	r0
 42a:	0f be       	out	0x3f, r0	; 63
 42c:	0f 90       	pop	r0
 42e:	1f 90       	pop	r1
 430:	18 95       	reti

00000432 <__umulhisi3>:
 432:	a2 9f       	mul	r26, r18
 434:	b0 01       	movw	r22, r0
 436:	b3 9f       	mul	r27, r19
 438:	c0 01       	movw	r24, r0
 43a:	a3 9f       	mul	r26, r19
 43c:	01 d0       	rcall	.+2      	; 0x440 <__umulhisi3+0xe>
 43e:	b2 9f       	mul	r27, r18
 440:	70 0d       	add	r23, r0
 442:	81 1d       	adc	r24, r1
 444:	11 24       	eor	r1, r1
 446:	91 1d       	adc	r25, r1
 448:	08 95       	ret

0000044a <printf>:
 44a:	a0 e0       	ldi	r26, 0x00	; 0
 44c:	b0 e0       	ldi	r27, 0x00	; 0
 44e:	ea e2       	ldi	r30, 0x2A	; 42
 450:	f2 e0       	ldi	r31, 0x02	; 2
 452:	d0 c2       	rjmp	.+1440   	; 0x9f4 <__prologue_saves__+0x20>
 454:	ae 01       	movw	r20, r28
 456:	4b 5f       	subi	r20, 0xFB	; 251
 458:	5f 4f       	sbci	r21, 0xFF	; 255
 45a:	fa 01       	movw	r30, r20
 45c:	61 91       	ld	r22, Z+
 45e:	71 91       	ld	r23, Z+
 460:	af 01       	movw	r20, r30
 462:	80 91 0f 3f 	lds	r24, 0x3F0F	; 0x803f0f <__iob+0x2>
 466:	90 91 10 3f 	lds	r25, 0x3F10	; 0x803f10 <__iob+0x3>
 46a:	32 d0       	rcall	.+100    	; 0x4d0 <vfprintf>
 46c:	e2 e0       	ldi	r30, 0x02	; 2
 46e:	db c2       	rjmp	.+1462   	; 0xa26 <__epilogue_restores__+0x20>

00000470 <puts>:
 470:	0f 93       	push	r16
 472:	1f 93       	push	r17
 474:	cf 93       	push	r28
 476:	df 93       	push	r29
 478:	e0 91 0f 3f 	lds	r30, 0x3F0F	; 0x803f0f <__iob+0x2>
 47c:	f0 91 10 3f 	lds	r31, 0x3F10	; 0x803f10 <__iob+0x3>
 480:	23 81       	ldd	r18, Z+3	; 0x03
 482:	21 ff       	sbrs	r18, 1
 484:	1b c0       	rjmp	.+54     	; 0x4bc <puts+0x4c>
 486:	8c 01       	movw	r16, r24
 488:	d0 e0       	ldi	r29, 0x00	; 0
 48a:	c0 e0       	ldi	r28, 0x00	; 0
 48c:	f8 01       	movw	r30, r16
 48e:	81 91       	ld	r24, Z+
 490:	8f 01       	movw	r16, r30
 492:	60 91 0f 3f 	lds	r22, 0x3F0F	; 0x803f0f <__iob+0x2>
 496:	70 91 10 3f 	lds	r23, 0x3F10	; 0x803f10 <__iob+0x3>
 49a:	db 01       	movw	r26, r22
 49c:	18 96       	adiw	r26, 0x08	; 8
 49e:	ed 91       	ld	r30, X+
 4a0:	fc 91       	ld	r31, X
 4a2:	19 97       	sbiw	r26, 0x09	; 9
 4a4:	88 23       	and	r24, r24
 4a6:	31 f0       	breq	.+12     	; 0x4b4 <puts+0x44>
 4a8:	09 95       	icall
 4aa:	89 2b       	or	r24, r25
 4ac:	79 f3       	breq	.-34     	; 0x48c <puts+0x1c>
 4ae:	df ef       	ldi	r29, 0xFF	; 255
 4b0:	cf ef       	ldi	r28, 0xFF	; 255
 4b2:	ec cf       	rjmp	.-40     	; 0x48c <puts+0x1c>
 4b4:	8a e0       	ldi	r24, 0x0A	; 10
 4b6:	09 95       	icall
 4b8:	89 2b       	or	r24, r25
 4ba:	19 f0       	breq	.+6      	; 0x4c2 <puts+0x52>
 4bc:	8f ef       	ldi	r24, 0xFF	; 255
 4be:	9f ef       	ldi	r25, 0xFF	; 255
 4c0:	02 c0       	rjmp	.+4      	; 0x4c6 <puts+0x56>
 4c2:	8d 2f       	mov	r24, r29
 4c4:	9c 2f       	mov	r25, r28
 4c6:	df 91       	pop	r29
 4c8:	cf 91       	pop	r28
 4ca:	1f 91       	pop	r17
 4cc:	0f 91       	pop	r16
 4ce:	08 95       	ret

000004d0 <vfprintf>:
 4d0:	ab e0       	ldi	r26, 0x0B	; 11
 4d2:	b0 e0       	ldi	r27, 0x00	; 0
 4d4:	ed e6       	ldi	r30, 0x6D	; 109
 4d6:	f2 e0       	ldi	r31, 0x02	; 2
 4d8:	7d c2       	rjmp	.+1274   	; 0x9d4 <__prologue_saves__>
 4da:	6c 01       	movw	r12, r24
 4dc:	7b 01       	movw	r14, r22
 4de:	8a 01       	movw	r16, r20
 4e0:	fc 01       	movw	r30, r24
 4e2:	16 82       	std	Z+6, r1	; 0x06
 4e4:	17 82       	std	Z+7, r1	; 0x07
 4e6:	83 81       	ldd	r24, Z+3	; 0x03
 4e8:	81 ff       	sbrs	r24, 1
 4ea:	bf c1       	rjmp	.+894    	; 0x86a <vfprintf+0x39a>
 4ec:	ce 01       	movw	r24, r28
 4ee:	01 96       	adiw	r24, 0x01	; 1
 4f0:	3c 01       	movw	r6, r24
 4f2:	f6 01       	movw	r30, r12
 4f4:	93 81       	ldd	r25, Z+3	; 0x03
 4f6:	f7 01       	movw	r30, r14
 4f8:	93 fd       	sbrc	r25, 3
 4fa:	85 91       	lpm	r24, Z+
 4fc:	93 ff       	sbrs	r25, 3
 4fe:	81 91       	ld	r24, Z+
 500:	7f 01       	movw	r14, r30
 502:	88 23       	and	r24, r24
 504:	09 f4       	brne	.+2      	; 0x508 <vfprintf+0x38>
 506:	ad c1       	rjmp	.+858    	; 0x862 <vfprintf+0x392>
 508:	85 32       	cpi	r24, 0x25	; 37
 50a:	39 f4       	brne	.+14     	; 0x51a <vfprintf+0x4a>
 50c:	93 fd       	sbrc	r25, 3
 50e:	85 91       	lpm	r24, Z+
 510:	93 ff       	sbrs	r25, 3
 512:	81 91       	ld	r24, Z+
 514:	7f 01       	movw	r14, r30
 516:	85 32       	cpi	r24, 0x25	; 37
 518:	21 f4       	brne	.+8      	; 0x522 <vfprintf+0x52>
 51a:	b6 01       	movw	r22, r12
 51c:	90 e0       	ldi	r25, 0x00	; 0
 51e:	c0 d1       	rcall	.+896    	; 0x8a0 <fputc>
 520:	e8 cf       	rjmp	.-48     	; 0x4f2 <vfprintf+0x22>
 522:	91 2c       	mov	r9, r1
 524:	21 2c       	mov	r2, r1
 526:	31 2c       	mov	r3, r1
 528:	ff e1       	ldi	r31, 0x1F	; 31
 52a:	f3 15       	cp	r31, r3
 52c:	d8 f0       	brcs	.+54     	; 0x564 <vfprintf+0x94>
 52e:	8b 32       	cpi	r24, 0x2B	; 43
 530:	79 f0       	breq	.+30     	; 0x550 <vfprintf+0x80>
 532:	38 f4       	brcc	.+14     	; 0x542 <vfprintf+0x72>
 534:	80 32       	cpi	r24, 0x20	; 32
 536:	79 f0       	breq	.+30     	; 0x556 <vfprintf+0x86>
 538:	83 32       	cpi	r24, 0x23	; 35
 53a:	a1 f4       	brne	.+40     	; 0x564 <vfprintf+0x94>
 53c:	23 2d       	mov	r18, r3
 53e:	20 61       	ori	r18, 0x10	; 16
 540:	1d c0       	rjmp	.+58     	; 0x57c <vfprintf+0xac>
 542:	8d 32       	cpi	r24, 0x2D	; 45
 544:	61 f0       	breq	.+24     	; 0x55e <vfprintf+0x8e>
 546:	80 33       	cpi	r24, 0x30	; 48
 548:	69 f4       	brne	.+26     	; 0x564 <vfprintf+0x94>
 54a:	23 2d       	mov	r18, r3
 54c:	21 60       	ori	r18, 0x01	; 1
 54e:	16 c0       	rjmp	.+44     	; 0x57c <vfprintf+0xac>
 550:	83 2d       	mov	r24, r3
 552:	82 60       	ori	r24, 0x02	; 2
 554:	38 2e       	mov	r3, r24
 556:	e3 2d       	mov	r30, r3
 558:	e4 60       	ori	r30, 0x04	; 4
 55a:	3e 2e       	mov	r3, r30
 55c:	2a c0       	rjmp	.+84     	; 0x5b2 <vfprintf+0xe2>
 55e:	f3 2d       	mov	r31, r3
 560:	f8 60       	ori	r31, 0x08	; 8
 562:	1d c0       	rjmp	.+58     	; 0x59e <vfprintf+0xce>
 564:	37 fc       	sbrc	r3, 7
 566:	2d c0       	rjmp	.+90     	; 0x5c2 <vfprintf+0xf2>
 568:	20 ed       	ldi	r18, 0xD0	; 208
 56a:	28 0f       	add	r18, r24
 56c:	2a 30       	cpi	r18, 0x0A	; 10
 56e:	40 f0       	brcs	.+16     	; 0x580 <vfprintf+0xb0>
 570:	8e 32       	cpi	r24, 0x2E	; 46
 572:	b9 f4       	brne	.+46     	; 0x5a2 <vfprintf+0xd2>
 574:	36 fc       	sbrc	r3, 6
 576:	75 c1       	rjmp	.+746    	; 0x862 <vfprintf+0x392>
 578:	23 2d       	mov	r18, r3
 57a:	20 64       	ori	r18, 0x40	; 64
 57c:	32 2e       	mov	r3, r18
 57e:	19 c0       	rjmp	.+50     	; 0x5b2 <vfprintf+0xe2>
 580:	36 fe       	sbrs	r3, 6
 582:	06 c0       	rjmp	.+12     	; 0x590 <vfprintf+0xc0>
 584:	8a e0       	ldi	r24, 0x0A	; 10
 586:	98 9e       	mul	r9, r24
 588:	20 0d       	add	r18, r0
 58a:	11 24       	eor	r1, r1
 58c:	92 2e       	mov	r9, r18
 58e:	11 c0       	rjmp	.+34     	; 0x5b2 <vfprintf+0xe2>
 590:	ea e0       	ldi	r30, 0x0A	; 10
 592:	2e 9e       	mul	r2, r30
 594:	20 0d       	add	r18, r0
 596:	11 24       	eor	r1, r1
 598:	22 2e       	mov	r2, r18
 59a:	f3 2d       	mov	r31, r3
 59c:	f0 62       	ori	r31, 0x20	; 32
 59e:	3f 2e       	mov	r3, r31
 5a0:	08 c0       	rjmp	.+16     	; 0x5b2 <vfprintf+0xe2>
 5a2:	8c 36       	cpi	r24, 0x6C	; 108
 5a4:	21 f4       	brne	.+8      	; 0x5ae <vfprintf+0xde>
 5a6:	83 2d       	mov	r24, r3
 5a8:	80 68       	ori	r24, 0x80	; 128
 5aa:	38 2e       	mov	r3, r24
 5ac:	02 c0       	rjmp	.+4      	; 0x5b2 <vfprintf+0xe2>
 5ae:	88 36       	cpi	r24, 0x68	; 104
 5b0:	41 f4       	brne	.+16     	; 0x5c2 <vfprintf+0xf2>
 5b2:	f7 01       	movw	r30, r14
 5b4:	93 fd       	sbrc	r25, 3
 5b6:	85 91       	lpm	r24, Z+
 5b8:	93 ff       	sbrs	r25, 3
 5ba:	81 91       	ld	r24, Z+
 5bc:	7f 01       	movw	r14, r30
 5be:	81 11       	cpse	r24, r1
 5c0:	b3 cf       	rjmp	.-154    	; 0x528 <vfprintf+0x58>
 5c2:	98 2f       	mov	r25, r24
 5c4:	9f 7d       	andi	r25, 0xDF	; 223
 5c6:	95 54       	subi	r25, 0x45	; 69
 5c8:	93 30       	cpi	r25, 0x03	; 3
 5ca:	28 f4       	brcc	.+10     	; 0x5d6 <vfprintf+0x106>
 5cc:	0c 5f       	subi	r16, 0xFC	; 252
 5ce:	1f 4f       	sbci	r17, 0xFF	; 255
 5d0:	9f e3       	ldi	r25, 0x3F	; 63
 5d2:	99 83       	std	Y+1, r25	; 0x01
 5d4:	0d c0       	rjmp	.+26     	; 0x5f0 <vfprintf+0x120>
 5d6:	83 36       	cpi	r24, 0x63	; 99
 5d8:	31 f0       	breq	.+12     	; 0x5e6 <vfprintf+0x116>
 5da:	83 37       	cpi	r24, 0x73	; 115
 5dc:	71 f0       	breq	.+28     	; 0x5fa <vfprintf+0x12a>
 5de:	83 35       	cpi	r24, 0x53	; 83
 5e0:	09 f0       	breq	.+2      	; 0x5e4 <vfprintf+0x114>
 5e2:	55 c0       	rjmp	.+170    	; 0x68e <vfprintf+0x1be>
 5e4:	20 c0       	rjmp	.+64     	; 0x626 <vfprintf+0x156>
 5e6:	f8 01       	movw	r30, r16
 5e8:	80 81       	ld	r24, Z
 5ea:	89 83       	std	Y+1, r24	; 0x01
 5ec:	0e 5f       	subi	r16, 0xFE	; 254
 5ee:	1f 4f       	sbci	r17, 0xFF	; 255
 5f0:	88 24       	eor	r8, r8
 5f2:	83 94       	inc	r8
 5f4:	91 2c       	mov	r9, r1
 5f6:	53 01       	movw	r10, r6
 5f8:	12 c0       	rjmp	.+36     	; 0x61e <vfprintf+0x14e>
 5fa:	28 01       	movw	r4, r16
 5fc:	f2 e0       	ldi	r31, 0x02	; 2
 5fe:	4f 0e       	add	r4, r31
 600:	51 1c       	adc	r5, r1
 602:	f8 01       	movw	r30, r16
 604:	a0 80       	ld	r10, Z
 606:	b1 80       	ldd	r11, Z+1	; 0x01
 608:	36 fe       	sbrs	r3, 6
 60a:	03 c0       	rjmp	.+6      	; 0x612 <vfprintf+0x142>
 60c:	69 2d       	mov	r22, r9
 60e:	70 e0       	ldi	r23, 0x00	; 0
 610:	02 c0       	rjmp	.+4      	; 0x616 <vfprintf+0x146>
 612:	6f ef       	ldi	r22, 0xFF	; 255
 614:	7f ef       	ldi	r23, 0xFF	; 255
 616:	c5 01       	movw	r24, r10
 618:	38 d1       	rcall	.+624    	; 0x88a <strnlen>
 61a:	4c 01       	movw	r8, r24
 61c:	82 01       	movw	r16, r4
 61e:	f3 2d       	mov	r31, r3
 620:	ff 77       	andi	r31, 0x7F	; 127
 622:	3f 2e       	mov	r3, r31
 624:	15 c0       	rjmp	.+42     	; 0x650 <vfprintf+0x180>
 626:	28 01       	movw	r4, r16
 628:	22 e0       	ldi	r18, 0x02	; 2
 62a:	42 0e       	add	r4, r18
 62c:	51 1c       	adc	r5, r1
 62e:	f8 01       	movw	r30, r16
 630:	a0 80       	ld	r10, Z
 632:	b1 80       	ldd	r11, Z+1	; 0x01
 634:	36 fe       	sbrs	r3, 6
 636:	03 c0       	rjmp	.+6      	; 0x63e <vfprintf+0x16e>
 638:	69 2d       	mov	r22, r9
 63a:	70 e0       	ldi	r23, 0x00	; 0
 63c:	02 c0       	rjmp	.+4      	; 0x642 <vfprintf+0x172>
 63e:	6f ef       	ldi	r22, 0xFF	; 255
 640:	7f ef       	ldi	r23, 0xFF	; 255
 642:	c5 01       	movw	r24, r10
 644:	17 d1       	rcall	.+558    	; 0x874 <strnlen_P>
 646:	4c 01       	movw	r8, r24
 648:	f3 2d       	mov	r31, r3
 64a:	f0 68       	ori	r31, 0x80	; 128
 64c:	3f 2e       	mov	r3, r31
 64e:	82 01       	movw	r16, r4
 650:	33 fc       	sbrc	r3, 3
 652:	19 c0       	rjmp	.+50     	; 0x686 <vfprintf+0x1b6>
 654:	82 2d       	mov	r24, r2
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	88 16       	cp	r8, r24
 65a:	99 06       	cpc	r9, r25
 65c:	a0 f4       	brcc	.+40     	; 0x686 <vfprintf+0x1b6>
 65e:	b6 01       	movw	r22, r12
 660:	80 e2       	ldi	r24, 0x20	; 32
 662:	90 e0       	ldi	r25, 0x00	; 0
 664:	1d d1       	rcall	.+570    	; 0x8a0 <fputc>
 666:	2a 94       	dec	r2
 668:	f5 cf       	rjmp	.-22     	; 0x654 <vfprintf+0x184>
 66a:	f5 01       	movw	r30, r10
 66c:	37 fc       	sbrc	r3, 7
 66e:	85 91       	lpm	r24, Z+
 670:	37 fe       	sbrs	r3, 7
 672:	81 91       	ld	r24, Z+
 674:	5f 01       	movw	r10, r30
 676:	b6 01       	movw	r22, r12
 678:	90 e0       	ldi	r25, 0x00	; 0
 67a:	12 d1       	rcall	.+548    	; 0x8a0 <fputc>
 67c:	21 10       	cpse	r2, r1
 67e:	2a 94       	dec	r2
 680:	21 e0       	ldi	r18, 0x01	; 1
 682:	82 1a       	sub	r8, r18
 684:	91 08       	sbc	r9, r1
 686:	81 14       	cp	r8, r1
 688:	91 04       	cpc	r9, r1
 68a:	79 f7       	brne	.-34     	; 0x66a <vfprintf+0x19a>
 68c:	e1 c0       	rjmp	.+450    	; 0x850 <vfprintf+0x380>
 68e:	84 36       	cpi	r24, 0x64	; 100
 690:	11 f0       	breq	.+4      	; 0x696 <vfprintf+0x1c6>
 692:	89 36       	cpi	r24, 0x69	; 105
 694:	39 f5       	brne	.+78     	; 0x6e4 <vfprintf+0x214>
 696:	f8 01       	movw	r30, r16
 698:	37 fe       	sbrs	r3, 7
 69a:	07 c0       	rjmp	.+14     	; 0x6aa <vfprintf+0x1da>
 69c:	60 81       	ld	r22, Z
 69e:	71 81       	ldd	r23, Z+1	; 0x01
 6a0:	82 81       	ldd	r24, Z+2	; 0x02
 6a2:	93 81       	ldd	r25, Z+3	; 0x03
 6a4:	0c 5f       	subi	r16, 0xFC	; 252
 6a6:	1f 4f       	sbci	r17, 0xFF	; 255
 6a8:	08 c0       	rjmp	.+16     	; 0x6ba <vfprintf+0x1ea>
 6aa:	60 81       	ld	r22, Z
 6ac:	71 81       	ldd	r23, Z+1	; 0x01
 6ae:	07 2e       	mov	r0, r23
 6b0:	00 0c       	add	r0, r0
 6b2:	88 0b       	sbc	r24, r24
 6b4:	99 0b       	sbc	r25, r25
 6b6:	0e 5f       	subi	r16, 0xFE	; 254
 6b8:	1f 4f       	sbci	r17, 0xFF	; 255
 6ba:	f3 2d       	mov	r31, r3
 6bc:	ff 76       	andi	r31, 0x6F	; 111
 6be:	3f 2e       	mov	r3, r31
 6c0:	97 ff       	sbrs	r25, 7
 6c2:	09 c0       	rjmp	.+18     	; 0x6d6 <vfprintf+0x206>
 6c4:	90 95       	com	r25
 6c6:	80 95       	com	r24
 6c8:	70 95       	com	r23
 6ca:	61 95       	neg	r22
 6cc:	7f 4f       	sbci	r23, 0xFF	; 255
 6ce:	8f 4f       	sbci	r24, 0xFF	; 255
 6d0:	9f 4f       	sbci	r25, 0xFF	; 255
 6d2:	f0 68       	ori	r31, 0x80	; 128
 6d4:	3f 2e       	mov	r3, r31
 6d6:	2a e0       	ldi	r18, 0x0A	; 10
 6d8:	30 e0       	ldi	r19, 0x00	; 0
 6da:	a3 01       	movw	r20, r6
 6dc:	1d d1       	rcall	.+570    	; 0x918 <__ultoa_invert>
 6de:	88 2e       	mov	r8, r24
 6e0:	86 18       	sub	r8, r6
 6e2:	44 c0       	rjmp	.+136    	; 0x76c <vfprintf+0x29c>
 6e4:	85 37       	cpi	r24, 0x75	; 117
 6e6:	31 f4       	brne	.+12     	; 0x6f4 <vfprintf+0x224>
 6e8:	23 2d       	mov	r18, r3
 6ea:	2f 7e       	andi	r18, 0xEF	; 239
 6ec:	b2 2e       	mov	r11, r18
 6ee:	2a e0       	ldi	r18, 0x0A	; 10
 6f0:	30 e0       	ldi	r19, 0x00	; 0
 6f2:	25 c0       	rjmp	.+74     	; 0x73e <vfprintf+0x26e>
 6f4:	93 2d       	mov	r25, r3
 6f6:	99 7f       	andi	r25, 0xF9	; 249
 6f8:	b9 2e       	mov	r11, r25
 6fa:	8f 36       	cpi	r24, 0x6F	; 111
 6fc:	c1 f0       	breq	.+48     	; 0x72e <vfprintf+0x25e>
 6fe:	18 f4       	brcc	.+6      	; 0x706 <vfprintf+0x236>
 700:	88 35       	cpi	r24, 0x58	; 88
 702:	79 f0       	breq	.+30     	; 0x722 <vfprintf+0x252>
 704:	ae c0       	rjmp	.+348    	; 0x862 <vfprintf+0x392>
 706:	80 37       	cpi	r24, 0x70	; 112
 708:	19 f0       	breq	.+6      	; 0x710 <vfprintf+0x240>
 70a:	88 37       	cpi	r24, 0x78	; 120
 70c:	21 f0       	breq	.+8      	; 0x716 <vfprintf+0x246>
 70e:	a9 c0       	rjmp	.+338    	; 0x862 <vfprintf+0x392>
 710:	e9 2f       	mov	r30, r25
 712:	e0 61       	ori	r30, 0x10	; 16
 714:	be 2e       	mov	r11, r30
 716:	b4 fe       	sbrs	r11, 4
 718:	0d c0       	rjmp	.+26     	; 0x734 <vfprintf+0x264>
 71a:	fb 2d       	mov	r31, r11
 71c:	f4 60       	ori	r31, 0x04	; 4
 71e:	bf 2e       	mov	r11, r31
 720:	09 c0       	rjmp	.+18     	; 0x734 <vfprintf+0x264>
 722:	34 fe       	sbrs	r3, 4
 724:	0a c0       	rjmp	.+20     	; 0x73a <vfprintf+0x26a>
 726:	29 2f       	mov	r18, r25
 728:	26 60       	ori	r18, 0x06	; 6
 72a:	b2 2e       	mov	r11, r18
 72c:	06 c0       	rjmp	.+12     	; 0x73a <vfprintf+0x26a>
 72e:	28 e0       	ldi	r18, 0x08	; 8
 730:	30 e0       	ldi	r19, 0x00	; 0
 732:	05 c0       	rjmp	.+10     	; 0x73e <vfprintf+0x26e>
 734:	20 e1       	ldi	r18, 0x10	; 16
 736:	30 e0       	ldi	r19, 0x00	; 0
 738:	02 c0       	rjmp	.+4      	; 0x73e <vfprintf+0x26e>
 73a:	20 e1       	ldi	r18, 0x10	; 16
 73c:	32 e0       	ldi	r19, 0x02	; 2
 73e:	f8 01       	movw	r30, r16
 740:	b7 fe       	sbrs	r11, 7
 742:	07 c0       	rjmp	.+14     	; 0x752 <vfprintf+0x282>
 744:	60 81       	ld	r22, Z
 746:	71 81       	ldd	r23, Z+1	; 0x01
 748:	82 81       	ldd	r24, Z+2	; 0x02
 74a:	93 81       	ldd	r25, Z+3	; 0x03
 74c:	0c 5f       	subi	r16, 0xFC	; 252
 74e:	1f 4f       	sbci	r17, 0xFF	; 255
 750:	06 c0       	rjmp	.+12     	; 0x75e <vfprintf+0x28e>
 752:	60 81       	ld	r22, Z
 754:	71 81       	ldd	r23, Z+1	; 0x01
 756:	80 e0       	ldi	r24, 0x00	; 0
 758:	90 e0       	ldi	r25, 0x00	; 0
 75a:	0e 5f       	subi	r16, 0xFE	; 254
 75c:	1f 4f       	sbci	r17, 0xFF	; 255
 75e:	a3 01       	movw	r20, r6
 760:	db d0       	rcall	.+438    	; 0x918 <__ultoa_invert>
 762:	88 2e       	mov	r8, r24
 764:	86 18       	sub	r8, r6
 766:	fb 2d       	mov	r31, r11
 768:	ff 77       	andi	r31, 0x7F	; 127
 76a:	3f 2e       	mov	r3, r31
 76c:	36 fe       	sbrs	r3, 6
 76e:	0d c0       	rjmp	.+26     	; 0x78a <vfprintf+0x2ba>
 770:	23 2d       	mov	r18, r3
 772:	2e 7f       	andi	r18, 0xFE	; 254
 774:	a2 2e       	mov	r10, r18
 776:	89 14       	cp	r8, r9
 778:	58 f4       	brcc	.+22     	; 0x790 <vfprintf+0x2c0>
 77a:	34 fe       	sbrs	r3, 4
 77c:	0b c0       	rjmp	.+22     	; 0x794 <vfprintf+0x2c4>
 77e:	32 fc       	sbrc	r3, 2
 780:	09 c0       	rjmp	.+18     	; 0x794 <vfprintf+0x2c4>
 782:	83 2d       	mov	r24, r3
 784:	8e 7e       	andi	r24, 0xEE	; 238
 786:	a8 2e       	mov	r10, r24
 788:	05 c0       	rjmp	.+10     	; 0x794 <vfprintf+0x2c4>
 78a:	b8 2c       	mov	r11, r8
 78c:	a3 2c       	mov	r10, r3
 78e:	03 c0       	rjmp	.+6      	; 0x796 <vfprintf+0x2c6>
 790:	b8 2c       	mov	r11, r8
 792:	01 c0       	rjmp	.+2      	; 0x796 <vfprintf+0x2c6>
 794:	b9 2c       	mov	r11, r9
 796:	a4 fe       	sbrs	r10, 4
 798:	0f c0       	rjmp	.+30     	; 0x7b8 <vfprintf+0x2e8>
 79a:	fe 01       	movw	r30, r28
 79c:	e8 0d       	add	r30, r8
 79e:	f1 1d       	adc	r31, r1
 7a0:	80 81       	ld	r24, Z
 7a2:	80 33       	cpi	r24, 0x30	; 48
 7a4:	21 f4       	brne	.+8      	; 0x7ae <vfprintf+0x2de>
 7a6:	9a 2d       	mov	r25, r10
 7a8:	99 7e       	andi	r25, 0xE9	; 233
 7aa:	a9 2e       	mov	r10, r25
 7ac:	09 c0       	rjmp	.+18     	; 0x7c0 <vfprintf+0x2f0>
 7ae:	a2 fe       	sbrs	r10, 2
 7b0:	06 c0       	rjmp	.+12     	; 0x7be <vfprintf+0x2ee>
 7b2:	b3 94       	inc	r11
 7b4:	b3 94       	inc	r11
 7b6:	04 c0       	rjmp	.+8      	; 0x7c0 <vfprintf+0x2f0>
 7b8:	8a 2d       	mov	r24, r10
 7ba:	86 78       	andi	r24, 0x86	; 134
 7bc:	09 f0       	breq	.+2      	; 0x7c0 <vfprintf+0x2f0>
 7be:	b3 94       	inc	r11
 7c0:	a3 fc       	sbrc	r10, 3
 7c2:	10 c0       	rjmp	.+32     	; 0x7e4 <vfprintf+0x314>
 7c4:	a0 fe       	sbrs	r10, 0
 7c6:	06 c0       	rjmp	.+12     	; 0x7d4 <vfprintf+0x304>
 7c8:	b2 14       	cp	r11, r2
 7ca:	80 f4       	brcc	.+32     	; 0x7ec <vfprintf+0x31c>
 7cc:	28 0c       	add	r2, r8
 7ce:	92 2c       	mov	r9, r2
 7d0:	9b 18       	sub	r9, r11
 7d2:	0d c0       	rjmp	.+26     	; 0x7ee <vfprintf+0x31e>
 7d4:	b2 14       	cp	r11, r2
 7d6:	58 f4       	brcc	.+22     	; 0x7ee <vfprintf+0x31e>
 7d8:	b6 01       	movw	r22, r12
 7da:	80 e2       	ldi	r24, 0x20	; 32
 7dc:	90 e0       	ldi	r25, 0x00	; 0
 7de:	60 d0       	rcall	.+192    	; 0x8a0 <fputc>
 7e0:	b3 94       	inc	r11
 7e2:	f8 cf       	rjmp	.-16     	; 0x7d4 <vfprintf+0x304>
 7e4:	b2 14       	cp	r11, r2
 7e6:	18 f4       	brcc	.+6      	; 0x7ee <vfprintf+0x31e>
 7e8:	2b 18       	sub	r2, r11
 7ea:	02 c0       	rjmp	.+4      	; 0x7f0 <vfprintf+0x320>
 7ec:	98 2c       	mov	r9, r8
 7ee:	21 2c       	mov	r2, r1
 7f0:	a4 fe       	sbrs	r10, 4
 7f2:	0f c0       	rjmp	.+30     	; 0x812 <vfprintf+0x342>
 7f4:	b6 01       	movw	r22, r12
 7f6:	80 e3       	ldi	r24, 0x30	; 48
 7f8:	90 e0       	ldi	r25, 0x00	; 0
 7fa:	52 d0       	rcall	.+164    	; 0x8a0 <fputc>
 7fc:	a2 fe       	sbrs	r10, 2
 7fe:	16 c0       	rjmp	.+44     	; 0x82c <vfprintf+0x35c>
 800:	a1 fc       	sbrc	r10, 1
 802:	03 c0       	rjmp	.+6      	; 0x80a <vfprintf+0x33a>
 804:	88 e7       	ldi	r24, 0x78	; 120
 806:	90 e0       	ldi	r25, 0x00	; 0
 808:	02 c0       	rjmp	.+4      	; 0x80e <vfprintf+0x33e>
 80a:	88 e5       	ldi	r24, 0x58	; 88
 80c:	90 e0       	ldi	r25, 0x00	; 0
 80e:	b6 01       	movw	r22, r12
 810:	0c c0       	rjmp	.+24     	; 0x82a <vfprintf+0x35a>
 812:	8a 2d       	mov	r24, r10
 814:	86 78       	andi	r24, 0x86	; 134
 816:	51 f0       	breq	.+20     	; 0x82c <vfprintf+0x35c>
 818:	a1 fe       	sbrs	r10, 1
 81a:	02 c0       	rjmp	.+4      	; 0x820 <vfprintf+0x350>
 81c:	8b e2       	ldi	r24, 0x2B	; 43
 81e:	01 c0       	rjmp	.+2      	; 0x822 <vfprintf+0x352>
 820:	80 e2       	ldi	r24, 0x20	; 32
 822:	a7 fc       	sbrc	r10, 7
 824:	8d e2       	ldi	r24, 0x2D	; 45
 826:	b6 01       	movw	r22, r12
 828:	90 e0       	ldi	r25, 0x00	; 0
 82a:	3a d0       	rcall	.+116    	; 0x8a0 <fputc>
 82c:	89 14       	cp	r8, r9
 82e:	30 f4       	brcc	.+12     	; 0x83c <vfprintf+0x36c>
 830:	b6 01       	movw	r22, r12
 832:	80 e3       	ldi	r24, 0x30	; 48
 834:	90 e0       	ldi	r25, 0x00	; 0
 836:	34 d0       	rcall	.+104    	; 0x8a0 <fputc>
 838:	9a 94       	dec	r9
 83a:	f8 cf       	rjmp	.-16     	; 0x82c <vfprintf+0x35c>
 83c:	8a 94       	dec	r8
 83e:	f3 01       	movw	r30, r6
 840:	e8 0d       	add	r30, r8
 842:	f1 1d       	adc	r31, r1
 844:	80 81       	ld	r24, Z
 846:	b6 01       	movw	r22, r12
 848:	90 e0       	ldi	r25, 0x00	; 0
 84a:	2a d0       	rcall	.+84     	; 0x8a0 <fputc>
 84c:	81 10       	cpse	r8, r1
 84e:	f6 cf       	rjmp	.-20     	; 0x83c <vfprintf+0x36c>
 850:	22 20       	and	r2, r2
 852:	09 f4       	brne	.+2      	; 0x856 <vfprintf+0x386>
 854:	4e ce       	rjmp	.-868    	; 0x4f2 <vfprintf+0x22>
 856:	b6 01       	movw	r22, r12
 858:	80 e2       	ldi	r24, 0x20	; 32
 85a:	90 e0       	ldi	r25, 0x00	; 0
 85c:	21 d0       	rcall	.+66     	; 0x8a0 <fputc>
 85e:	2a 94       	dec	r2
 860:	f7 cf       	rjmp	.-18     	; 0x850 <vfprintf+0x380>
 862:	f6 01       	movw	r30, r12
 864:	86 81       	ldd	r24, Z+6	; 0x06
 866:	97 81       	ldd	r25, Z+7	; 0x07
 868:	02 c0       	rjmp	.+4      	; 0x86e <vfprintf+0x39e>
 86a:	8f ef       	ldi	r24, 0xFF	; 255
 86c:	9f ef       	ldi	r25, 0xFF	; 255
 86e:	2b 96       	adiw	r28, 0x0b	; 11
 870:	e2 e1       	ldi	r30, 0x12	; 18
 872:	c9 c0       	rjmp	.+402    	; 0xa06 <__epilogue_restores__>

00000874 <strnlen_P>:
 874:	fc 01       	movw	r30, r24
 876:	05 90       	lpm	r0, Z+
 878:	61 50       	subi	r22, 0x01	; 1
 87a:	70 40       	sbci	r23, 0x00	; 0
 87c:	01 10       	cpse	r0, r1
 87e:	d8 f7       	brcc	.-10     	; 0x876 <strnlen_P+0x2>
 880:	80 95       	com	r24
 882:	90 95       	com	r25
 884:	8e 0f       	add	r24, r30
 886:	9f 1f       	adc	r25, r31
 888:	08 95       	ret

0000088a <strnlen>:
 88a:	fc 01       	movw	r30, r24
 88c:	61 50       	subi	r22, 0x01	; 1
 88e:	70 40       	sbci	r23, 0x00	; 0
 890:	01 90       	ld	r0, Z+
 892:	01 10       	cpse	r0, r1
 894:	d8 f7       	brcc	.-10     	; 0x88c <strnlen+0x2>
 896:	80 95       	com	r24
 898:	90 95       	com	r25
 89a:	8e 0f       	add	r24, r30
 89c:	9f 1f       	adc	r25, r31
 89e:	08 95       	ret

000008a0 <fputc>:
 8a0:	0f 93       	push	r16
 8a2:	1f 93       	push	r17
 8a4:	cf 93       	push	r28
 8a6:	df 93       	push	r29
 8a8:	fb 01       	movw	r30, r22
 8aa:	23 81       	ldd	r18, Z+3	; 0x03
 8ac:	21 fd       	sbrc	r18, 1
 8ae:	03 c0       	rjmp	.+6      	; 0x8b6 <fputc+0x16>
 8b0:	8f ef       	ldi	r24, 0xFF	; 255
 8b2:	9f ef       	ldi	r25, 0xFF	; 255
 8b4:	2c c0       	rjmp	.+88     	; 0x90e <fputc+0x6e>
 8b6:	22 ff       	sbrs	r18, 2
 8b8:	16 c0       	rjmp	.+44     	; 0x8e6 <fputc+0x46>
 8ba:	46 81       	ldd	r20, Z+6	; 0x06
 8bc:	57 81       	ldd	r21, Z+7	; 0x07
 8be:	24 81       	ldd	r18, Z+4	; 0x04
 8c0:	35 81       	ldd	r19, Z+5	; 0x05
 8c2:	42 17       	cp	r20, r18
 8c4:	53 07       	cpc	r21, r19
 8c6:	44 f4       	brge	.+16     	; 0x8d8 <fputc+0x38>
 8c8:	a0 81       	ld	r26, Z
 8ca:	b1 81       	ldd	r27, Z+1	; 0x01
 8cc:	9d 01       	movw	r18, r26
 8ce:	2f 5f       	subi	r18, 0xFF	; 255
 8d0:	3f 4f       	sbci	r19, 0xFF	; 255
 8d2:	20 83       	st	Z, r18
 8d4:	31 83       	std	Z+1, r19	; 0x01
 8d6:	8c 93       	st	X, r24
 8d8:	26 81       	ldd	r18, Z+6	; 0x06
 8da:	37 81       	ldd	r19, Z+7	; 0x07
 8dc:	2f 5f       	subi	r18, 0xFF	; 255
 8de:	3f 4f       	sbci	r19, 0xFF	; 255
 8e0:	26 83       	std	Z+6, r18	; 0x06
 8e2:	37 83       	std	Z+7, r19	; 0x07
 8e4:	14 c0       	rjmp	.+40     	; 0x90e <fputc+0x6e>
 8e6:	8b 01       	movw	r16, r22
 8e8:	ec 01       	movw	r28, r24
 8ea:	fb 01       	movw	r30, r22
 8ec:	00 84       	ldd	r0, Z+8	; 0x08
 8ee:	f1 85       	ldd	r31, Z+9	; 0x09
 8f0:	e0 2d       	mov	r30, r0
 8f2:	09 95       	icall
 8f4:	89 2b       	or	r24, r25
 8f6:	e1 f6       	brne	.-72     	; 0x8b0 <fputc+0x10>
 8f8:	d8 01       	movw	r26, r16
 8fa:	16 96       	adiw	r26, 0x06	; 6
 8fc:	8d 91       	ld	r24, X+
 8fe:	9c 91       	ld	r25, X
 900:	17 97       	sbiw	r26, 0x07	; 7
 902:	01 96       	adiw	r24, 0x01	; 1
 904:	16 96       	adiw	r26, 0x06	; 6
 906:	8d 93       	st	X+, r24
 908:	9c 93       	st	X, r25
 90a:	17 97       	sbiw	r26, 0x07	; 7
 90c:	ce 01       	movw	r24, r28
 90e:	df 91       	pop	r29
 910:	cf 91       	pop	r28
 912:	1f 91       	pop	r17
 914:	0f 91       	pop	r16
 916:	08 95       	ret

00000918 <__ultoa_invert>:
 918:	fa 01       	movw	r30, r20
 91a:	aa 27       	eor	r26, r26
 91c:	28 30       	cpi	r18, 0x08	; 8
 91e:	51 f1       	breq	.+84     	; 0x974 <__ultoa_invert+0x5c>
 920:	20 31       	cpi	r18, 0x10	; 16
 922:	81 f1       	breq	.+96     	; 0x984 <__ultoa_invert+0x6c>
 924:	e8 94       	clt
 926:	6f 93       	push	r22
 928:	6e 7f       	andi	r22, 0xFE	; 254
 92a:	6e 5f       	subi	r22, 0xFE	; 254
 92c:	7f 4f       	sbci	r23, 0xFF	; 255
 92e:	8f 4f       	sbci	r24, 0xFF	; 255
 930:	9f 4f       	sbci	r25, 0xFF	; 255
 932:	af 4f       	sbci	r26, 0xFF	; 255
 934:	b1 e0       	ldi	r27, 0x01	; 1
 936:	3e d0       	rcall	.+124    	; 0x9b4 <__ultoa_invert+0x9c>
 938:	b4 e0       	ldi	r27, 0x04	; 4
 93a:	3c d0       	rcall	.+120    	; 0x9b4 <__ultoa_invert+0x9c>
 93c:	67 0f       	add	r22, r23
 93e:	78 1f       	adc	r23, r24
 940:	89 1f       	adc	r24, r25
 942:	9a 1f       	adc	r25, r26
 944:	a1 1d       	adc	r26, r1
 946:	68 0f       	add	r22, r24
 948:	79 1f       	adc	r23, r25
 94a:	8a 1f       	adc	r24, r26
 94c:	91 1d       	adc	r25, r1
 94e:	a1 1d       	adc	r26, r1
 950:	6a 0f       	add	r22, r26
 952:	71 1d       	adc	r23, r1
 954:	81 1d       	adc	r24, r1
 956:	91 1d       	adc	r25, r1
 958:	a1 1d       	adc	r26, r1
 95a:	20 d0       	rcall	.+64     	; 0x99c <__ultoa_invert+0x84>
 95c:	09 f4       	brne	.+2      	; 0x960 <__ultoa_invert+0x48>
 95e:	68 94       	set
 960:	3f 91       	pop	r19
 962:	2a e0       	ldi	r18, 0x0A	; 10
 964:	26 9f       	mul	r18, r22
 966:	11 24       	eor	r1, r1
 968:	30 19       	sub	r19, r0
 96a:	30 5d       	subi	r19, 0xD0	; 208
 96c:	31 93       	st	Z+, r19
 96e:	de f6       	brtc	.-74     	; 0x926 <__ultoa_invert+0xe>
 970:	cf 01       	movw	r24, r30
 972:	08 95       	ret
 974:	46 2f       	mov	r20, r22
 976:	47 70       	andi	r20, 0x07	; 7
 978:	40 5d       	subi	r20, 0xD0	; 208
 97a:	41 93       	st	Z+, r20
 97c:	b3 e0       	ldi	r27, 0x03	; 3
 97e:	0f d0       	rcall	.+30     	; 0x99e <__ultoa_invert+0x86>
 980:	c9 f7       	brne	.-14     	; 0x974 <__ultoa_invert+0x5c>
 982:	f6 cf       	rjmp	.-20     	; 0x970 <__ultoa_invert+0x58>
 984:	46 2f       	mov	r20, r22
 986:	4f 70       	andi	r20, 0x0F	; 15
 988:	40 5d       	subi	r20, 0xD0	; 208
 98a:	4a 33       	cpi	r20, 0x3A	; 58
 98c:	18 f0       	brcs	.+6      	; 0x994 <__ultoa_invert+0x7c>
 98e:	49 5d       	subi	r20, 0xD9	; 217
 990:	31 fd       	sbrc	r19, 1
 992:	40 52       	subi	r20, 0x20	; 32
 994:	41 93       	st	Z+, r20
 996:	02 d0       	rcall	.+4      	; 0x99c <__ultoa_invert+0x84>
 998:	a9 f7       	brne	.-22     	; 0x984 <__ultoa_invert+0x6c>
 99a:	ea cf       	rjmp	.-44     	; 0x970 <__ultoa_invert+0x58>
 99c:	b4 e0       	ldi	r27, 0x04	; 4
 99e:	a6 95       	lsr	r26
 9a0:	97 95       	ror	r25
 9a2:	87 95       	ror	r24
 9a4:	77 95       	ror	r23
 9a6:	67 95       	ror	r22
 9a8:	ba 95       	dec	r27
 9aa:	c9 f7       	brne	.-14     	; 0x99e <__ultoa_invert+0x86>
 9ac:	00 97       	sbiw	r24, 0x00	; 0
 9ae:	61 05       	cpc	r22, r1
 9b0:	71 05       	cpc	r23, r1
 9b2:	08 95       	ret
 9b4:	9b 01       	movw	r18, r22
 9b6:	ac 01       	movw	r20, r24
 9b8:	0a 2e       	mov	r0, r26
 9ba:	06 94       	lsr	r0
 9bc:	57 95       	ror	r21
 9be:	47 95       	ror	r20
 9c0:	37 95       	ror	r19
 9c2:	27 95       	ror	r18
 9c4:	ba 95       	dec	r27
 9c6:	c9 f7       	brne	.-14     	; 0x9ba <__ultoa_invert+0xa2>
 9c8:	62 0f       	add	r22, r18
 9ca:	73 1f       	adc	r23, r19
 9cc:	84 1f       	adc	r24, r20
 9ce:	95 1f       	adc	r25, r21
 9d0:	a0 1d       	adc	r26, r0
 9d2:	08 95       	ret

000009d4 <__prologue_saves__>:
 9d4:	2f 92       	push	r2
 9d6:	3f 92       	push	r3
 9d8:	4f 92       	push	r4
 9da:	5f 92       	push	r5
 9dc:	6f 92       	push	r6
 9de:	7f 92       	push	r7
 9e0:	8f 92       	push	r8
 9e2:	9f 92       	push	r9
 9e4:	af 92       	push	r10
 9e6:	bf 92       	push	r11
 9e8:	cf 92       	push	r12
 9ea:	df 92       	push	r13
 9ec:	ef 92       	push	r14
 9ee:	ff 92       	push	r15
 9f0:	0f 93       	push	r16
 9f2:	1f 93       	push	r17
 9f4:	cf 93       	push	r28
 9f6:	df 93       	push	r29
 9f8:	cd b7       	in	r28, 0x3d	; 61
 9fa:	de b7       	in	r29, 0x3e	; 62
 9fc:	ca 1b       	sub	r28, r26
 9fe:	db 0b       	sbc	r29, r27
 a00:	cd bf       	out	0x3d, r28	; 61
 a02:	de bf       	out	0x3e, r29	; 62
 a04:	09 94       	ijmp

00000a06 <__epilogue_restores__>:
 a06:	2a 88       	ldd	r2, Y+18	; 0x12
 a08:	39 88       	ldd	r3, Y+17	; 0x11
 a0a:	48 88       	ldd	r4, Y+16	; 0x10
 a0c:	5f 84       	ldd	r5, Y+15	; 0x0f
 a0e:	6e 84       	ldd	r6, Y+14	; 0x0e
 a10:	7d 84       	ldd	r7, Y+13	; 0x0d
 a12:	8c 84       	ldd	r8, Y+12	; 0x0c
 a14:	9b 84       	ldd	r9, Y+11	; 0x0b
 a16:	aa 84       	ldd	r10, Y+10	; 0x0a
 a18:	b9 84       	ldd	r11, Y+9	; 0x09
 a1a:	c8 84       	ldd	r12, Y+8	; 0x08
 a1c:	df 80       	ldd	r13, Y+7	; 0x07
 a1e:	ee 80       	ldd	r14, Y+6	; 0x06
 a20:	fd 80       	ldd	r15, Y+5	; 0x05
 a22:	0c 81       	ldd	r16, Y+4	; 0x04
 a24:	1b 81       	ldd	r17, Y+3	; 0x03
 a26:	aa 81       	ldd	r26, Y+2	; 0x02
 a28:	b9 81       	ldd	r27, Y+1	; 0x01
 a2a:	ce 0f       	add	r28, r30
 a2c:	d1 1d       	adc	r29, r1
 a2e:	cd bf       	out	0x3d, r28	; 61
 a30:	de bf       	out	0x3e, r29	; 62
 a32:	ed 01       	movw	r28, r26
 a34:	08 95       	ret

00000a36 <_exit>:
 a36:	f8 94       	cli

00000a38 <__stop_program>:
 a38:	ff cf       	rjmp	.-2      	; 0xa38 <__stop_program>
