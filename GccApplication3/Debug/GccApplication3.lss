
GccApplication3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803f00  00803f00  00000a5e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000910  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000ba  00008910  00000910  000009a4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000010  00803f00  00803f00  00000a5e  2**0
                  ALLOC
  4 .comment      0000005c  00000000  00000000  00000a5e  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000abc  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000078  00000000  00000000  00000af8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002811  00000000  00000000  00000b70  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000017a4  00000000  00000000  00003381  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000531  00000000  00000000  00004b25  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  0000018c  00000000  00000000  00005058  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000123b  00000000  00000000  000051e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000034d  00000000  00000000  0000641f  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000068  00000000  00000000  0000676c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	33 c0       	rjmp	.+102    	; 0x6a <__bad_interrupt>
   4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
   6:	f6 c0       	rjmp	.+492    	; 0x1f4 <__vector_3>
   8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
   a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
   c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
   e:	07 c1       	rjmp	.+526    	; 0x21e <__vector_7>
  10:	15 c1       	rjmp	.+554    	; 0x23c <__vector_8>
  12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
  14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
  16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
  18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
  1a:	52 c1       	rjmp	.+676    	; 0x2c0 <__vector_13>
  1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
  1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
  20:	24 c0       	rjmp	.+72     	; 0x6a <__bad_interrupt>
  22:	23 c0       	rjmp	.+70     	; 0x6a <__bad_interrupt>
  24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
  26:	21 c0       	rjmp	.+66     	; 0x6a <__bad_interrupt>
  28:	20 c0       	rjmp	.+64     	; 0x6a <__bad_interrupt>
  2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
  2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
  2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
  30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
  32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	cd bf       	out	0x3d, r28	; 61
  3c:	df e3       	ldi	r29, 0x3F	; 63
  3e:	de bf       	out	0x3e, r29	; 62

00000040 <__do_copy_data>:
  40:	1f e3       	ldi	r17, 0x3F	; 63
  42:	a0 e0       	ldi	r26, 0x00	; 0
  44:	bf e3       	ldi	r27, 0x3F	; 63
  46:	ea ec       	ldi	r30, 0xCA	; 202
  48:	f9 e0       	ldi	r31, 0x09	; 9
  4a:	02 c0       	rjmp	.+4      	; 0x50 <__do_copy_data+0x10>
  4c:	05 90       	lpm	r0, Z+
  4e:	0d 92       	st	X+, r0
  50:	a0 30       	cpi	r26, 0x00	; 0
  52:	b1 07       	cpc	r27, r17
  54:	d9 f7       	brne	.-10     	; 0x4c <__do_copy_data+0xc>

00000056 <__do_clear_bss>:
  56:	2f e3       	ldi	r18, 0x3F	; 63
  58:	a0 e0       	ldi	r26, 0x00	; 0
  5a:	bf e3       	ldi	r27, 0x3F	; 63
  5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
  5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
  60:	a0 31       	cpi	r26, 0x10	; 16
  62:	b2 07       	cpc	r27, r18
  64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
  66:	60 d0       	rcall	.+192    	; 0x128 <main>
  68:	51 c4       	rjmp	.+2210   	; 0x90c <_exit>

0000006a <__bad_interrupt>:
  6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <TCA0_init>:
volatile uint16_t consecutive_counts_released ;



void TCA0_init(int TCAdelay)
{
  6c:	9c 01       	movw	r18, r24
	// enable overflow interrupt
	TCA0.SINGLE.INTCTRL = TCA_SINGLE_OVF_bm;
  6e:	e0 e0       	ldi	r30, 0x00	; 0
  70:	fa e0       	ldi	r31, 0x0A	; 10
  72:	81 e0       	ldi	r24, 0x01	; 1
  74:	82 87       	std	Z+10, r24	; 0x0a

	// set Normal mode
	TCA0.SINGLE.CTRLB = TCA_SINGLE_WGMODE_NORMAL_gc;
  76:	11 82       	std	Z+1, r1	; 0x01

	// disable event counting
	TCA0.SINGLE.EVCTRL &= ~(TCA_SINGLE_CNTEI_bm);
  78:	91 85       	ldd	r25, Z+9	; 0x09
  7a:	9e 7f       	andi	r25, 0xFE	; 254
  7c:	91 87       	std	Z+9, r25	; 0x09

	// set the period
	TCA0.SINGLE.PER = TCAdelay;
  7e:	26 a3       	std	Z+38, r18	; 0x26
  80:	37 a3       	std	Z+39, r19	; 0x27

	// set clock
	TCA0.SINGLE.CTRLA = TCA_SINGLE_CLKSEL_DIV1024_gc | TCA_SINGLE_ENABLE_bm;    /* source (sys_clk/8) +  start timer */
  82:	8f e0       	ldi	r24, 0x0F	; 15
  84:	80 83       	st	Z, r24
  86:	08 95       	ret

00000088 <TCB0_init>:
}

void TCB0_init (void)
{
	/* Load the Compare or Capture register with the timeout value*/
	TCB0.CCMP = TCB_CMP_EXAMPLE_VALUE;
  88:	e0 e4       	ldi	r30, 0x40	; 64
  8a:	fa e0       	ldi	r31, 0x0A	; 10
  8c:	8f ef       	ldi	r24, 0xFF	; 255
  8e:	9f ef       	ldi	r25, 0xFF	; 255
  90:	84 87       	std	Z+12, r24	; 0x0c
  92:	95 87       	std	Z+13, r25	; 0x0d
	
	/* Enable TCB and set CLK_PER divider to 1 (No Prescaling) */
	TCB0.CTRLA = TCB_CLKSEL_CLKDIV2_gc | TCB_ENABLE_bm ;
  94:	83 e0       	ldi	r24, 0x03	; 3
  96:	80 83       	st	Z, r24
	
	/* Enable Capture or Timeout interrupt */
	TCB0.INTCTRL = TCB_CAPT_bm;
  98:	81 e0       	ldi	r24, 0x01	; 1
  9a:	85 83       	std	Z+5, r24	; 0x05
  9c:	08 95       	ret

0000009e <LEDOnById>:
}


void LEDOnById(int i){
	PORTA.OUT = port_a_b_outs[i][0];
  9e:	88 0f       	add	r24, r24
  a0:	99 1f       	adc	r25, r25
  a2:	fc 01       	movw	r30, r24
  a4:	e8 55       	subi	r30, 0x58	; 88
  a6:	f6 47       	sbci	r31, 0x76	; 118
  a8:	80 81       	ld	r24, Z
  aa:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <port_a_b_outs+0x7f7a5c>
	PORTB.OUT= port_a_b_outs[i][1];
  ae:	81 81       	ldd	r24, Z+1	; 0x01
  b0:	80 93 24 04 	sts	0x0424, r24	; 0x800424 <port_a_b_outs+0x7f7a7c>
  b4:	08 95       	ret

000000b6 <allLEDoff>:
}

void allLEDoff(){
	PORTA.OUT = port_a_b_outs[0][0];
  b6:	8f ef       	ldi	r24, 0xFF	; 255
  b8:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <port_a_b_outs+0x7f7a5c>
	PORTB.OUT= port_a_b_outs[0][1];
  bc:	10 92 24 04 	sts	0x0424, r1	; 0x800424 <port_a_b_outs+0x7f7a7c>
  c0:	08 95       	ret

000000c2 <wait_until_button_released>:
}

void wait_until_button_released()
{
  c2:	cf 93       	push	r28
  c4:	df 93       	push	r29
	while(consecutive_counts_released<6){printf("Waiting for release with consecutive_counts_pressed:%d, consecutive_counts_released:%d\n",consecutive_counts_pressed, consecutive_counts_released );}
  c6:	80 91 04 3f 	lds	r24, 0x3F04	; 0x803f04 <consecutive_counts_released>
  ca:	90 91 05 3f 	lds	r25, 0x3F05	; 0x803f05 <consecutive_counts_released+0x1>
  ce:	06 97       	sbiw	r24, 0x06	; 6
  d0:	e8 f4       	brcc	.+58     	; 0x10c <__DATA_REGION_LENGTH__+0xc>
  d2:	c0 e1       	ldi	r28, 0x10	; 16
  d4:	d9 e8       	ldi	r29, 0x89	; 137
  d6:	20 91 04 3f 	lds	r18, 0x3F04	; 0x803f04 <consecutive_counts_released>
  da:	30 91 05 3f 	lds	r19, 0x3F05	; 0x803f05 <consecutive_counts_released+0x1>
  de:	80 91 08 3f 	lds	r24, 0x3F08	; 0x803f08 <consecutive_counts_pressed>
  e2:	90 91 09 3f 	lds	r25, 0x3F09	; 0x803f09 <consecutive_counts_pressed+0x1>
  e6:	3f 93       	push	r19
  e8:	2f 93       	push	r18
  ea:	9f 93       	push	r25
  ec:	8f 93       	push	r24
  ee:	df 93       	push	r29
  f0:	cf 93       	push	r28
  f2:	16 d1       	rcall	.+556    	; 0x320 <printf>
  f4:	80 91 04 3f 	lds	r24, 0x3F04	; 0x803f04 <consecutive_counts_released>
  f8:	90 91 05 3f 	lds	r25, 0x3F05	; 0x803f05 <consecutive_counts_released+0x1>
  fc:	0f 90       	pop	r0
  fe:	0f 90       	pop	r0
 100:	0f 90       	pop	r0
 102:	0f 90       	pop	r0
 104:	0f 90       	pop	r0
 106:	0f 90       	pop	r0
 108:	06 97       	sbiw	r24, 0x06	; 6
 10a:	28 f3       	brcs	.-54     	; 0xd6 <wait_until_button_released+0x14>
	consecutive_counts_pressed=0;
 10c:	10 92 08 3f 	sts	0x3F08, r1	; 0x803f08 <consecutive_counts_pressed>
 110:	10 92 09 3f 	sts	0x3F09, r1	; 0x803f09 <consecutive_counts_pressed+0x1>
	consecutive_counts_released=0;
 114:	10 92 04 3f 	sts	0x3F04, r1	; 0x803f04 <consecutive_counts_released>
 118:	10 92 05 3f 	sts	0x3F05, r1	; 0x803f05 <consecutive_counts_released+0x1>
	printf("Released\n");
 11c:	88 e6       	ldi	r24, 0x68	; 104
 11e:	99 e8       	ldi	r25, 0x89	; 137
 120:	12 d1       	rcall	.+548    	; 0x346 <puts>
}
 122:	df 91       	pop	r29
 124:	cf 91       	pop	r28
 126:	08 95       	ret

00000128 <main>:

int main() {


	//RTCA_init(1); // set periodic RTC triggering "awakening" delay in seconds
	TCA0_init(1);
 128:	81 e0       	ldi	r24, 0x01	; 1
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	9f df       	rcall	.-194    	; 0x6c <TCA0_init>
	TCB0_init();
 12e:	ac df       	rcall	.-168    	; 0x88 <TCB0_init>
	PORTA.DIRSET = 0b10111111;
 130:	e0 e0       	ldi	r30, 0x00	; 0
 132:	f4 e0       	ldi	r31, 0x04	; 4
 134:	8f eb       	ldi	r24, 0xBF	; 191
 136:	81 83       	std	Z+1, r24	; 0x01
	PORTB.DIRSET = 0b11111111;
 138:	8f ef       	ldi	r24, 0xFF	; 255
 13a:	80 93 21 04 	sts	0x0421, r24	; 0x800421 <port_a_b_outs+0x7f7a79>
	//USART0_init();

	// Button setup
	PORTA.PIN6CTRL = PORT_ISC_FALLING_gc | PORT_PULLUPEN_bm; // Enable pull-up resistor
 13e:	8b e0       	ldi	r24, 0x0B	; 11
 140:	86 8b       	std	Z+22, r24	; 0x16

	
	// Initialize variables
	consecutive_counts_pressed=0;
 142:	10 92 08 3f 	sts	0x3F08, r1	; 0x803f08 <consecutive_counts_pressed>
 146:	10 92 09 3f 	sts	0x3F09, r1	; 0x803f09 <consecutive_counts_pressed+0x1>
	consecutive_counts_released=0;
 14a:	10 92 04 3f 	sts	0x3F04, r1	; 0x803f04 <consecutive_counts_released>
 14e:	10 92 05 3f 	sts	0x3F05, r1	; 0x803f05 <consecutive_counts_released+0x1>
	x=7;
 152:	87 e0       	ldi	r24, 0x07	; 7
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	80 93 02 3f 	sts	0x3F02, r24	; 0x803f02 <x>
 15a:	90 93 03 3f 	sts	0x3F03, r25	; 0x803f03 <x+0x1>
	i=0;
 15e:	10 92 06 3f 	sts	0x3F06, r1	; 0x803f06 <i>
 162:	10 92 07 3f 	sts	0x3F07, r1	; 0x803f07 <i+0x1>
	
	sei();
 166:	78 94       	sei
	SLPCTRL.CTRLA |= SLPCTRL_SMODE_STDBY_gc; // set POWER DOWN as sleep mode
 168:	e0 e5       	ldi	r30, 0x50	; 80
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	80 81       	ld	r24, Z
 16e:	82 60       	ori	r24, 0x02	; 2
 170:	80 83       	st	Z, r24
	SLPCTRL.CTRLA |= SLPCTRL_SEN_bm; // enable sleep mode
 172:	80 81       	ld	r24, Z
 174:	81 60       	ori	r24, 0x01	; 1
 176:	80 83       	st	Z, r24
	
	printf("booting finished\n");
 178:	81 e7       	ldi	r24, 0x71	; 113
 17a:	99 e8       	ldi	r25, 0x89	; 137
 17c:	e4 d0       	rcall	.+456    	; 0x346 <puts>
	wait_until_button_released();
 17e:	a1 df       	rcall	.-190    	; 0xc2 <wait_until_button_released>

	while(1){
		if (consecutive_counts_pressed> 25){
			x++;
			printf("Increasing x to %d\n", x);
 180:	c2 e8       	ldi	r28, 0x82	; 130
 182:	d9 e8       	ldi	r29, 0x89	; 137
	
	printf("booting finished\n");
	wait_until_button_released();

	while(1){
		if (consecutive_counts_pressed> 25){
 184:	80 91 08 3f 	lds	r24, 0x3F08	; 0x803f08 <consecutive_counts_pressed>
 188:	90 91 09 3f 	lds	r25, 0x3F09	; 0x803f09 <consecutive_counts_pressed+0x1>
 18c:	4a 97       	sbiw	r24, 0x1a	; 26
 18e:	b8 f0       	brcs	.+46     	; 0x1be <main+0x96>
			x++;
 190:	80 91 02 3f 	lds	r24, 0x3F02	; 0x803f02 <x>
 194:	90 91 03 3f 	lds	r25, 0x3F03	; 0x803f03 <x+0x1>
 198:	01 96       	adiw	r24, 0x01	; 1
 19a:	80 93 02 3f 	sts	0x3F02, r24	; 0x803f02 <x>
 19e:	90 93 03 3f 	sts	0x3F03, r25	; 0x803f03 <x+0x1>
			printf("Increasing x to %d\n", x);
 1a2:	80 91 02 3f 	lds	r24, 0x3F02	; 0x803f02 <x>
 1a6:	90 91 03 3f 	lds	r25, 0x3F03	; 0x803f03 <x+0x1>
 1aa:	9f 93       	push	r25
 1ac:	8f 93       	push	r24
 1ae:	df 93       	push	r29
 1b0:	cf 93       	push	r28
 1b2:	b6 d0       	rcall	.+364    	; 0x320 <printf>

			wait_until_button_released();
 1b4:	86 df       	rcall	.-244    	; 0xc2 <wait_until_button_released>
 1b6:	0f 90       	pop	r0
 1b8:	0f 90       	pop	r0
 1ba:	0f 90       	pop	r0
 1bc:	0f 90       	pop	r0
		}
		
		if (consecutive_counts_released>200){
 1be:	80 91 04 3f 	lds	r24, 0x3F04	; 0x803f04 <consecutive_counts_released>
 1c2:	90 91 05 3f 	lds	r25, 0x3F05	; 0x803f05 <consecutive_counts_released+0x1>
 1c6:	89 3c       	cpi	r24, 0xC9	; 201
 1c8:	91 05       	cpc	r25, r1
 1ca:	e0 f2       	brcs	.-72     	; 0x184 <main+0x5c>
			printf("going to sleep...\n");
 1cc:	86 e9       	ldi	r24, 0x96	; 150
 1ce:	99 e8       	ldi	r25, 0x89	; 137
 1d0:	ba d0       	rcall	.+372    	; 0x346 <puts>
			allLEDoff();
 1d2:	71 df       	rcall	.-286    	; 0xb6 <allLEDoff>
			sleep_cpu();
 1d4:	88 95       	sleep
			consecutive_counts_pressed=0;
 1d6:	10 92 08 3f 	sts	0x3F08, r1	; 0x803f08 <consecutive_counts_pressed>
 1da:	10 92 09 3f 	sts	0x3F09, r1	; 0x803f09 <consecutive_counts_pressed+0x1>
			consecutive_counts_released=0;
 1de:	10 92 04 3f 	sts	0x3F04, r1	; 0x803f04 <consecutive_counts_released>
 1e2:	10 92 05 3f 	sts	0x3F05, r1	; 0x803f05 <consecutive_counts_released+0x1>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1e6:	8d e8       	ldi	r24, 0x8D	; 141
 1e8:	90 e2       	ldi	r25, 0x20	; 32
 1ea:	01 97       	sbiw	r24, 0x01	; 1
 1ec:	f1 f7       	brne	.-4      	; 0x1ea <main+0xc2>
 1ee:	00 00       	nop
			_delay_ms(10);
	
			
			wait_until_button_released();
 1f0:	68 df       	rcall	.-304    	; 0xc2 <wait_until_button_released>
 1f2:	c8 cf       	rjmp	.-112    	; 0x184 <main+0x5c>

000001f4 <__vector_3>:
		
	}


}
ISR(PORTA_PORT_vect) {
 1f4:	1f 92       	push	r1
 1f6:	0f 92       	push	r0
 1f8:	0f b6       	in	r0, 0x3f	; 63
 1fa:	0f 92       	push	r0
 1fc:	11 24       	eor	r1, r1
 1fe:	8f 93       	push	r24
 200:	ef 93       	push	r30
 202:	ff 93       	push	r31
	PORTA.INTFLAGS |= btn_pin; // Clear interrupt flag
 204:	e0 e0       	ldi	r30, 0x00	; 0
 206:	f4 e0       	ldi	r31, 0x04	; 4
 208:	81 85       	ldd	r24, Z+9	; 0x09
 20a:	80 64       	ori	r24, 0x40	; 64
 20c:	81 87       	std	Z+9, r24	; 0x09
}
 20e:	ff 91       	pop	r31
 210:	ef 91       	pop	r30
 212:	8f 91       	pop	r24
 214:	0f 90       	pop	r0
 216:	0f be       	out	0x3f, r0	; 63
 218:	0f 90       	pop	r0
 21a:	1f 90       	pop	r1
 21c:	18 95       	reti

0000021e <__vector_7>:

ISR(RTC_PIT_vect)
{
 21e:	1f 92       	push	r1
 220:	0f 92       	push	r0
 222:	0f b6       	in	r0, 0x3f	; 63
 224:	0f 92       	push	r0
 226:	11 24       	eor	r1, r1
 228:	8f 93       	push	r24
	RTC.PITINTFLAGS = RTC_PI_bm;// Clear interrupt flag
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <port_a_b_outs+0x7f77ab>
}
 230:	8f 91       	pop	r24
 232:	0f 90       	pop	r0
 234:	0f be       	out	0x3f, r0	; 63
 236:	0f 90       	pop	r0
 238:	1f 90       	pop	r1
 23a:	18 95       	reti

0000023c <__vector_8>:

ISR(TCA0_OVF_vect)
{
 23c:	1f 92       	push	r1
 23e:	0f 92       	push	r0
 240:	0f b6       	in	r0, 0x3f	; 63
 242:	0f 92       	push	r0
 244:	11 24       	eor	r1, r1
 246:	2f 93       	push	r18
 248:	3f 93       	push	r19
 24a:	4f 93       	push	r20
 24c:	5f 93       	push	r21
 24e:	6f 93       	push	r22
 250:	7f 93       	push	r23
 252:	8f 93       	push	r24
 254:	9f 93       	push	r25
 256:	af 93       	push	r26
 258:	bf 93       	push	r27
 25a:	ef 93       	push	r30
 25c:	ff 93       	push	r31
	i++;
 25e:	80 91 06 3f 	lds	r24, 0x3F06	; 0x803f06 <i>
 262:	90 91 07 3f 	lds	r25, 0x3F07	; 0x803f07 <i+0x1>
 266:	01 96       	adiw	r24, 0x01	; 1
 268:	80 93 06 3f 	sts	0x3F06, r24	; 0x803f06 <i>
 26c:	90 93 07 3f 	sts	0x3F07, r25	; 0x803f07 <i+0x1>

	if (i<=x){LEDOnById(i);}
 270:	20 91 02 3f 	lds	r18, 0x3F02	; 0x803f02 <x>
 274:	30 91 03 3f 	lds	r19, 0x3F03	; 0x803f03 <x+0x1>
 278:	28 17       	cp	r18, r24
 27a:	39 07       	cpc	r19, r25
 27c:	14 f0       	brlt	.+4      	; 0x282 <__vector_8+0x46>
 27e:	0f df       	rcall	.-482    	; 0x9e <LEDOnById>
 280:	01 c0       	rjmp	.+2      	; 0x284 <__vector_8+0x48>
	else{allLEDoff();}
 282:	19 df       	rcall	.-462    	; 0xb6 <allLEDoff>

	if (i>16){i=0;}
 284:	80 91 06 3f 	lds	r24, 0x3F06	; 0x803f06 <i>
 288:	90 91 07 3f 	lds	r25, 0x3F07	; 0x803f07 <i+0x1>
 28c:	41 97       	sbiw	r24, 0x11	; 17
 28e:	24 f0       	brlt	.+8      	; 0x298 <__vector_8+0x5c>
 290:	10 92 06 3f 	sts	0x3F06, r1	; 0x803f06 <i>
 294:	10 92 07 3f 	sts	0x3F07, r1	; 0x803f07 <i+0x1>

	// The interrupt flag has to be cleared manually
	TCA0.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;
 298:	81 e0       	ldi	r24, 0x01	; 1
 29a:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <port_a_b_outs+0x7f8063>
	
}
 29e:	ff 91       	pop	r31
 2a0:	ef 91       	pop	r30
 2a2:	bf 91       	pop	r27
 2a4:	af 91       	pop	r26
 2a6:	9f 91       	pop	r25
 2a8:	8f 91       	pop	r24
 2aa:	7f 91       	pop	r23
 2ac:	6f 91       	pop	r22
 2ae:	5f 91       	pop	r21
 2b0:	4f 91       	pop	r20
 2b2:	3f 91       	pop	r19
 2b4:	2f 91       	pop	r18
 2b6:	0f 90       	pop	r0
 2b8:	0f be       	out	0x3f, r0	; 63
 2ba:	0f 90       	pop	r0
 2bc:	1f 90       	pop	r1
 2be:	18 95       	reti

000002c0 <__vector_13>:


ISR(TCB0_INT_vect)
{
 2c0:	1f 92       	push	r1
 2c2:	0f 92       	push	r0
 2c4:	0f b6       	in	r0, 0x3f	; 63
 2c6:	0f 92       	push	r0
 2c8:	11 24       	eor	r1, r1
 2ca:	8f 93       	push	r24
 2cc:	9f 93       	push	r25
	// Counting consecutive ticks of pressed or released button. Debouncing and short and long press detection.
	if (~PORTA.IN & btn_pin){
 2ce:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <port_a_b_outs+0x7f7a60>
 2d2:	86 fd       	sbrc	r24, 6
 2d4:	0e c0       	rjmp	.+28     	; 0x2f2 <__vector_13+0x32>
		consecutive_counts_pressed++;
 2d6:	80 91 08 3f 	lds	r24, 0x3F08	; 0x803f08 <consecutive_counts_pressed>
 2da:	90 91 09 3f 	lds	r25, 0x3F09	; 0x803f09 <consecutive_counts_pressed+0x1>
 2de:	01 96       	adiw	r24, 0x01	; 1
 2e0:	80 93 08 3f 	sts	0x3F08, r24	; 0x803f08 <consecutive_counts_pressed>
 2e4:	90 93 09 3f 	sts	0x3F09, r25	; 0x803f09 <consecutive_counts_pressed+0x1>
		consecutive_counts_released=0;
 2e8:	10 92 04 3f 	sts	0x3F04, r1	; 0x803f04 <consecutive_counts_released>
 2ec:	10 92 05 3f 	sts	0x3F05, r1	; 0x803f05 <consecutive_counts_released+0x1>
 2f0:	0d c0       	rjmp	.+26     	; 0x30c <__vector_13+0x4c>
	}
	else{
		consecutive_counts_pressed=0;
 2f2:	10 92 08 3f 	sts	0x3F08, r1	; 0x803f08 <consecutive_counts_pressed>
 2f6:	10 92 09 3f 	sts	0x3F09, r1	; 0x803f09 <consecutive_counts_pressed+0x1>
		consecutive_counts_released++;
 2fa:	80 91 04 3f 	lds	r24, 0x3F04	; 0x803f04 <consecutive_counts_released>
 2fe:	90 91 05 3f 	lds	r25, 0x3F05	; 0x803f05 <consecutive_counts_released+0x1>
 302:	01 96       	adiw	r24, 0x01	; 1
 304:	80 93 04 3f 	sts	0x3F04, r24	; 0x803f04 <consecutive_counts_released>
 308:	90 93 05 3f 	sts	0x3F05, r25	; 0x803f05 <consecutive_counts_released+0x1>
	}
	TCB0.INTFLAGS = TCB_CAPT_bm; /* Clear the interrupt flag */
 30c:	81 e0       	ldi	r24, 0x01	; 1
 30e:	80 93 46 0a 	sts	0x0A46, r24	; 0x800a46 <port_a_b_outs+0x7f809e>
 312:	9f 91       	pop	r25
 314:	8f 91       	pop	r24
 316:	0f 90       	pop	r0
 318:	0f be       	out	0x3f, r0	; 63
 31a:	0f 90       	pop	r0
 31c:	1f 90       	pop	r1
 31e:	18 95       	reti

00000320 <printf>:
 320:	a0 e0       	ldi	r26, 0x00	; 0
 322:	b0 e0       	ldi	r27, 0x00	; 0
 324:	e5 e9       	ldi	r30, 0x95	; 149
 326:	f1 e0       	ldi	r31, 0x01	; 1
 328:	d0 c2       	rjmp	.+1440   	; 0x8ca <__prologue_saves__+0x20>
 32a:	ae 01       	movw	r20, r28
 32c:	4b 5f       	subi	r20, 0xFB	; 251
 32e:	5f 4f       	sbci	r21, 0xFF	; 255
 330:	fa 01       	movw	r30, r20
 332:	61 91       	ld	r22, Z+
 334:	71 91       	ld	r23, Z+
 336:	af 01       	movw	r20, r30
 338:	80 91 0c 3f 	lds	r24, 0x3F0C	; 0x803f0c <__iob+0x2>
 33c:	90 91 0d 3f 	lds	r25, 0x3F0D	; 0x803f0d <__iob+0x3>
 340:	32 d0       	rcall	.+100    	; 0x3a6 <vfprintf>
 342:	e2 e0       	ldi	r30, 0x02	; 2
 344:	db c2       	rjmp	.+1462   	; 0x8fc <__epilogue_restores__+0x20>

00000346 <puts>:
 346:	0f 93       	push	r16
 348:	1f 93       	push	r17
 34a:	cf 93       	push	r28
 34c:	df 93       	push	r29
 34e:	e0 91 0c 3f 	lds	r30, 0x3F0C	; 0x803f0c <__iob+0x2>
 352:	f0 91 0d 3f 	lds	r31, 0x3F0D	; 0x803f0d <__iob+0x3>
 356:	23 81       	ldd	r18, Z+3	; 0x03
 358:	21 ff       	sbrs	r18, 1
 35a:	1b c0       	rjmp	.+54     	; 0x392 <puts+0x4c>
 35c:	8c 01       	movw	r16, r24
 35e:	d0 e0       	ldi	r29, 0x00	; 0
 360:	c0 e0       	ldi	r28, 0x00	; 0
 362:	f8 01       	movw	r30, r16
 364:	81 91       	ld	r24, Z+
 366:	8f 01       	movw	r16, r30
 368:	60 91 0c 3f 	lds	r22, 0x3F0C	; 0x803f0c <__iob+0x2>
 36c:	70 91 0d 3f 	lds	r23, 0x3F0D	; 0x803f0d <__iob+0x3>
 370:	db 01       	movw	r26, r22
 372:	18 96       	adiw	r26, 0x08	; 8
 374:	ed 91       	ld	r30, X+
 376:	fc 91       	ld	r31, X
 378:	19 97       	sbiw	r26, 0x09	; 9
 37a:	88 23       	and	r24, r24
 37c:	31 f0       	breq	.+12     	; 0x38a <puts+0x44>
 37e:	09 95       	icall
 380:	89 2b       	or	r24, r25
 382:	79 f3       	breq	.-34     	; 0x362 <puts+0x1c>
 384:	df ef       	ldi	r29, 0xFF	; 255
 386:	cf ef       	ldi	r28, 0xFF	; 255
 388:	ec cf       	rjmp	.-40     	; 0x362 <puts+0x1c>
 38a:	8a e0       	ldi	r24, 0x0A	; 10
 38c:	09 95       	icall
 38e:	89 2b       	or	r24, r25
 390:	19 f0       	breq	.+6      	; 0x398 <puts+0x52>
 392:	8f ef       	ldi	r24, 0xFF	; 255
 394:	9f ef       	ldi	r25, 0xFF	; 255
 396:	02 c0       	rjmp	.+4      	; 0x39c <puts+0x56>
 398:	8d 2f       	mov	r24, r29
 39a:	9c 2f       	mov	r25, r28
 39c:	df 91       	pop	r29
 39e:	cf 91       	pop	r28
 3a0:	1f 91       	pop	r17
 3a2:	0f 91       	pop	r16
 3a4:	08 95       	ret

000003a6 <vfprintf>:
 3a6:	ab e0       	ldi	r26, 0x0B	; 11
 3a8:	b0 e0       	ldi	r27, 0x00	; 0
 3aa:	e8 ed       	ldi	r30, 0xD8	; 216
 3ac:	f1 e0       	ldi	r31, 0x01	; 1
 3ae:	7d c2       	rjmp	.+1274   	; 0x8aa <__prologue_saves__>
 3b0:	6c 01       	movw	r12, r24
 3b2:	7b 01       	movw	r14, r22
 3b4:	8a 01       	movw	r16, r20
 3b6:	fc 01       	movw	r30, r24
 3b8:	16 82       	std	Z+6, r1	; 0x06
 3ba:	17 82       	std	Z+7, r1	; 0x07
 3bc:	83 81       	ldd	r24, Z+3	; 0x03
 3be:	81 ff       	sbrs	r24, 1
 3c0:	bf c1       	rjmp	.+894    	; 0x740 <__LOCK_REGION_LENGTH__+0x340>
 3c2:	ce 01       	movw	r24, r28
 3c4:	01 96       	adiw	r24, 0x01	; 1
 3c6:	3c 01       	movw	r6, r24
 3c8:	f6 01       	movw	r30, r12
 3ca:	93 81       	ldd	r25, Z+3	; 0x03
 3cc:	f7 01       	movw	r30, r14
 3ce:	93 fd       	sbrc	r25, 3
 3d0:	85 91       	lpm	r24, Z+
 3d2:	93 ff       	sbrs	r25, 3
 3d4:	81 91       	ld	r24, Z+
 3d6:	7f 01       	movw	r14, r30
 3d8:	88 23       	and	r24, r24
 3da:	09 f4       	brne	.+2      	; 0x3de <vfprintf+0x38>
 3dc:	ad c1       	rjmp	.+858    	; 0x738 <__LOCK_REGION_LENGTH__+0x338>
 3de:	85 32       	cpi	r24, 0x25	; 37
 3e0:	39 f4       	brne	.+14     	; 0x3f0 <vfprintf+0x4a>
 3e2:	93 fd       	sbrc	r25, 3
 3e4:	85 91       	lpm	r24, Z+
 3e6:	93 ff       	sbrs	r25, 3
 3e8:	81 91       	ld	r24, Z+
 3ea:	7f 01       	movw	r14, r30
 3ec:	85 32       	cpi	r24, 0x25	; 37
 3ee:	21 f4       	brne	.+8      	; 0x3f8 <vfprintf+0x52>
 3f0:	b6 01       	movw	r22, r12
 3f2:	90 e0       	ldi	r25, 0x00	; 0
 3f4:	c0 d1       	rcall	.+896    	; 0x776 <fputc>
 3f6:	e8 cf       	rjmp	.-48     	; 0x3c8 <vfprintf+0x22>
 3f8:	91 2c       	mov	r9, r1
 3fa:	21 2c       	mov	r2, r1
 3fc:	31 2c       	mov	r3, r1
 3fe:	ff e1       	ldi	r31, 0x1F	; 31
 400:	f3 15       	cp	r31, r3
 402:	d8 f0       	brcs	.+54     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 404:	8b 32       	cpi	r24, 0x2B	; 43
 406:	79 f0       	breq	.+30     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 408:	38 f4       	brcc	.+14     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 40a:	80 32       	cpi	r24, 0x20	; 32
 40c:	79 f0       	breq	.+30     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 40e:	83 32       	cpi	r24, 0x23	; 35
 410:	a1 f4       	brne	.+40     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 412:	23 2d       	mov	r18, r3
 414:	20 61       	ori	r18, 0x10	; 16
 416:	1d c0       	rjmp	.+58     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 418:	8d 32       	cpi	r24, 0x2D	; 45
 41a:	61 f0       	breq	.+24     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 41c:	80 33       	cpi	r24, 0x30	; 48
 41e:	69 f4       	brne	.+26     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 420:	23 2d       	mov	r18, r3
 422:	21 60       	ori	r18, 0x01	; 1
 424:	16 c0       	rjmp	.+44     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 426:	83 2d       	mov	r24, r3
 428:	82 60       	ori	r24, 0x02	; 2
 42a:	38 2e       	mov	r3, r24
 42c:	e3 2d       	mov	r30, r3
 42e:	e4 60       	ori	r30, 0x04	; 4
 430:	3e 2e       	mov	r3, r30
 432:	2a c0       	rjmp	.+84     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 434:	f3 2d       	mov	r31, r3
 436:	f8 60       	ori	r31, 0x08	; 8
 438:	1d c0       	rjmp	.+58     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 43a:	37 fc       	sbrc	r3, 7
 43c:	2d c0       	rjmp	.+90     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 43e:	20 ed       	ldi	r18, 0xD0	; 208
 440:	28 0f       	add	r18, r24
 442:	2a 30       	cpi	r18, 0x0A	; 10
 444:	40 f0       	brcs	.+16     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 446:	8e 32       	cpi	r24, 0x2E	; 46
 448:	b9 f4       	brne	.+46     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 44a:	36 fc       	sbrc	r3, 6
 44c:	75 c1       	rjmp	.+746    	; 0x738 <__LOCK_REGION_LENGTH__+0x338>
 44e:	23 2d       	mov	r18, r3
 450:	20 64       	ori	r18, 0x40	; 64
 452:	32 2e       	mov	r3, r18
 454:	19 c0       	rjmp	.+50     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 456:	36 fe       	sbrs	r3, 6
 458:	06 c0       	rjmp	.+12     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 45a:	8a e0       	ldi	r24, 0x0A	; 10
 45c:	98 9e       	mul	r9, r24
 45e:	20 0d       	add	r18, r0
 460:	11 24       	eor	r1, r1
 462:	92 2e       	mov	r9, r18
 464:	11 c0       	rjmp	.+34     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 466:	ea e0       	ldi	r30, 0x0A	; 10
 468:	2e 9e       	mul	r2, r30
 46a:	20 0d       	add	r18, r0
 46c:	11 24       	eor	r1, r1
 46e:	22 2e       	mov	r2, r18
 470:	f3 2d       	mov	r31, r3
 472:	f0 62       	ori	r31, 0x20	; 32
 474:	3f 2e       	mov	r3, r31
 476:	08 c0       	rjmp	.+16     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 478:	8c 36       	cpi	r24, 0x6C	; 108
 47a:	21 f4       	brne	.+8      	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 47c:	83 2d       	mov	r24, r3
 47e:	80 68       	ori	r24, 0x80	; 128
 480:	38 2e       	mov	r3, r24
 482:	02 c0       	rjmp	.+4      	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 484:	88 36       	cpi	r24, 0x68	; 104
 486:	41 f4       	brne	.+16     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 488:	f7 01       	movw	r30, r14
 48a:	93 fd       	sbrc	r25, 3
 48c:	85 91       	lpm	r24, Z+
 48e:	93 ff       	sbrs	r25, 3
 490:	81 91       	ld	r24, Z+
 492:	7f 01       	movw	r14, r30
 494:	81 11       	cpse	r24, r1
 496:	b3 cf       	rjmp	.-154    	; 0x3fe <vfprintf+0x58>
 498:	98 2f       	mov	r25, r24
 49a:	9f 7d       	andi	r25, 0xDF	; 223
 49c:	95 54       	subi	r25, 0x45	; 69
 49e:	93 30       	cpi	r25, 0x03	; 3
 4a0:	28 f4       	brcc	.+10     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 4a2:	0c 5f       	subi	r16, 0xFC	; 252
 4a4:	1f 4f       	sbci	r17, 0xFF	; 255
 4a6:	9f e3       	ldi	r25, 0x3F	; 63
 4a8:	99 83       	std	Y+1, r25	; 0x01
 4aa:	0d c0       	rjmp	.+26     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4ac:	83 36       	cpi	r24, 0x63	; 99
 4ae:	31 f0       	breq	.+12     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4b0:	83 37       	cpi	r24, 0x73	; 115
 4b2:	71 f0       	breq	.+28     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4b4:	83 35       	cpi	r24, 0x53	; 83
 4b6:	09 f0       	breq	.+2      	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 4b8:	55 c0       	rjmp	.+170    	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 4ba:	20 c0       	rjmp	.+64     	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4bc:	f8 01       	movw	r30, r16
 4be:	80 81       	ld	r24, Z
 4c0:	89 83       	std	Y+1, r24	; 0x01
 4c2:	0e 5f       	subi	r16, 0xFE	; 254
 4c4:	1f 4f       	sbci	r17, 0xFF	; 255
 4c6:	88 24       	eor	r8, r8
 4c8:	83 94       	inc	r8
 4ca:	91 2c       	mov	r9, r1
 4cc:	53 01       	movw	r10, r6
 4ce:	12 c0       	rjmp	.+36     	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4d0:	28 01       	movw	r4, r16
 4d2:	f2 e0       	ldi	r31, 0x02	; 2
 4d4:	4f 0e       	add	r4, r31
 4d6:	51 1c       	adc	r5, r1
 4d8:	f8 01       	movw	r30, r16
 4da:	a0 80       	ld	r10, Z
 4dc:	b1 80       	ldd	r11, Z+1	; 0x01
 4de:	36 fe       	sbrs	r3, 6
 4e0:	03 c0       	rjmp	.+6      	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4e2:	69 2d       	mov	r22, r9
 4e4:	70 e0       	ldi	r23, 0x00	; 0
 4e6:	02 c0       	rjmp	.+4      	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
 4e8:	6f ef       	ldi	r22, 0xFF	; 255
 4ea:	7f ef       	ldi	r23, 0xFF	; 255
 4ec:	c5 01       	movw	r24, r10
 4ee:	38 d1       	rcall	.+624    	; 0x760 <strnlen>
 4f0:	4c 01       	movw	r8, r24
 4f2:	82 01       	movw	r16, r4
 4f4:	f3 2d       	mov	r31, r3
 4f6:	ff 77       	andi	r31, 0x7F	; 127
 4f8:	3f 2e       	mov	r3, r31
 4fa:	15 c0       	rjmp	.+42     	; 0x526 <__LOCK_REGION_LENGTH__+0x126>
 4fc:	28 01       	movw	r4, r16
 4fe:	22 e0       	ldi	r18, 0x02	; 2
 500:	42 0e       	add	r4, r18
 502:	51 1c       	adc	r5, r1
 504:	f8 01       	movw	r30, r16
 506:	a0 80       	ld	r10, Z
 508:	b1 80       	ldd	r11, Z+1	; 0x01
 50a:	36 fe       	sbrs	r3, 6
 50c:	03 c0       	rjmp	.+6      	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 50e:	69 2d       	mov	r22, r9
 510:	70 e0       	ldi	r23, 0x00	; 0
 512:	02 c0       	rjmp	.+4      	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 514:	6f ef       	ldi	r22, 0xFF	; 255
 516:	7f ef       	ldi	r23, 0xFF	; 255
 518:	c5 01       	movw	r24, r10
 51a:	17 d1       	rcall	.+558    	; 0x74a <strnlen_P>
 51c:	4c 01       	movw	r8, r24
 51e:	f3 2d       	mov	r31, r3
 520:	f0 68       	ori	r31, 0x80	; 128
 522:	3f 2e       	mov	r3, r31
 524:	82 01       	movw	r16, r4
 526:	33 fc       	sbrc	r3, 3
 528:	19 c0       	rjmp	.+50     	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 52a:	82 2d       	mov	r24, r2
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	88 16       	cp	r8, r24
 530:	99 06       	cpc	r9, r25
 532:	a0 f4       	brcc	.+40     	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 534:	b6 01       	movw	r22, r12
 536:	80 e2       	ldi	r24, 0x20	; 32
 538:	90 e0       	ldi	r25, 0x00	; 0
 53a:	1d d1       	rcall	.+570    	; 0x776 <fputc>
 53c:	2a 94       	dec	r2
 53e:	f5 cf       	rjmp	.-22     	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 540:	f5 01       	movw	r30, r10
 542:	37 fc       	sbrc	r3, 7
 544:	85 91       	lpm	r24, Z+
 546:	37 fe       	sbrs	r3, 7
 548:	81 91       	ld	r24, Z+
 54a:	5f 01       	movw	r10, r30
 54c:	b6 01       	movw	r22, r12
 54e:	90 e0       	ldi	r25, 0x00	; 0
 550:	12 d1       	rcall	.+548    	; 0x776 <fputc>
 552:	21 10       	cpse	r2, r1
 554:	2a 94       	dec	r2
 556:	21 e0       	ldi	r18, 0x01	; 1
 558:	82 1a       	sub	r8, r18
 55a:	91 08       	sbc	r9, r1
 55c:	81 14       	cp	r8, r1
 55e:	91 04       	cpc	r9, r1
 560:	79 f7       	brne	.-34     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 562:	e1 c0       	rjmp	.+450    	; 0x726 <__LOCK_REGION_LENGTH__+0x326>
 564:	84 36       	cpi	r24, 0x64	; 100
 566:	11 f0       	breq	.+4      	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 568:	89 36       	cpi	r24, 0x69	; 105
 56a:	39 f5       	brne	.+78     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 56c:	f8 01       	movw	r30, r16
 56e:	37 fe       	sbrs	r3, 7
 570:	07 c0       	rjmp	.+14     	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
 572:	60 81       	ld	r22, Z
 574:	71 81       	ldd	r23, Z+1	; 0x01
 576:	82 81       	ldd	r24, Z+2	; 0x02
 578:	93 81       	ldd	r25, Z+3	; 0x03
 57a:	0c 5f       	subi	r16, 0xFC	; 252
 57c:	1f 4f       	sbci	r17, 0xFF	; 255
 57e:	08 c0       	rjmp	.+16     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 580:	60 81       	ld	r22, Z
 582:	71 81       	ldd	r23, Z+1	; 0x01
 584:	07 2e       	mov	r0, r23
 586:	00 0c       	add	r0, r0
 588:	88 0b       	sbc	r24, r24
 58a:	99 0b       	sbc	r25, r25
 58c:	0e 5f       	subi	r16, 0xFE	; 254
 58e:	1f 4f       	sbci	r17, 0xFF	; 255
 590:	f3 2d       	mov	r31, r3
 592:	ff 76       	andi	r31, 0x6F	; 111
 594:	3f 2e       	mov	r3, r31
 596:	97 ff       	sbrs	r25, 7
 598:	09 c0       	rjmp	.+18     	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 59a:	90 95       	com	r25
 59c:	80 95       	com	r24
 59e:	70 95       	com	r23
 5a0:	61 95       	neg	r22
 5a2:	7f 4f       	sbci	r23, 0xFF	; 255
 5a4:	8f 4f       	sbci	r24, 0xFF	; 255
 5a6:	9f 4f       	sbci	r25, 0xFF	; 255
 5a8:	f0 68       	ori	r31, 0x80	; 128
 5aa:	3f 2e       	mov	r3, r31
 5ac:	2a e0       	ldi	r18, 0x0A	; 10
 5ae:	30 e0       	ldi	r19, 0x00	; 0
 5b0:	a3 01       	movw	r20, r6
 5b2:	1d d1       	rcall	.+570    	; 0x7ee <__ultoa_invert>
 5b4:	88 2e       	mov	r8, r24
 5b6:	86 18       	sub	r8, r6
 5b8:	44 c0       	rjmp	.+136    	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
 5ba:	85 37       	cpi	r24, 0x75	; 117
 5bc:	31 f4       	brne	.+12     	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5be:	23 2d       	mov	r18, r3
 5c0:	2f 7e       	andi	r18, 0xEF	; 239
 5c2:	b2 2e       	mov	r11, r18
 5c4:	2a e0       	ldi	r18, 0x0A	; 10
 5c6:	30 e0       	ldi	r19, 0x00	; 0
 5c8:	25 c0       	rjmp	.+74     	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 5ca:	93 2d       	mov	r25, r3
 5cc:	99 7f       	andi	r25, 0xF9	; 249
 5ce:	b9 2e       	mov	r11, r25
 5d0:	8f 36       	cpi	r24, 0x6F	; 111
 5d2:	c1 f0       	breq	.+48     	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 5d4:	18 f4       	brcc	.+6      	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
 5d6:	88 35       	cpi	r24, 0x58	; 88
 5d8:	79 f0       	breq	.+30     	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
 5da:	ae c0       	rjmp	.+348    	; 0x738 <__LOCK_REGION_LENGTH__+0x338>
 5dc:	80 37       	cpi	r24, 0x70	; 112
 5de:	19 f0       	breq	.+6      	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
 5e0:	88 37       	cpi	r24, 0x78	; 120
 5e2:	21 f0       	breq	.+8      	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5e4:	a9 c0       	rjmp	.+338    	; 0x738 <__LOCK_REGION_LENGTH__+0x338>
 5e6:	e9 2f       	mov	r30, r25
 5e8:	e0 61       	ori	r30, 0x10	; 16
 5ea:	be 2e       	mov	r11, r30
 5ec:	b4 fe       	sbrs	r11, 4
 5ee:	0d c0       	rjmp	.+26     	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
 5f0:	fb 2d       	mov	r31, r11
 5f2:	f4 60       	ori	r31, 0x04	; 4
 5f4:	bf 2e       	mov	r11, r31
 5f6:	09 c0       	rjmp	.+18     	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
 5f8:	34 fe       	sbrs	r3, 4
 5fa:	0a c0       	rjmp	.+20     	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
 5fc:	29 2f       	mov	r18, r25
 5fe:	26 60       	ori	r18, 0x06	; 6
 600:	b2 2e       	mov	r11, r18
 602:	06 c0       	rjmp	.+12     	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
 604:	28 e0       	ldi	r18, 0x08	; 8
 606:	30 e0       	ldi	r19, 0x00	; 0
 608:	05 c0       	rjmp	.+10     	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 60a:	20 e1       	ldi	r18, 0x10	; 16
 60c:	30 e0       	ldi	r19, 0x00	; 0
 60e:	02 c0       	rjmp	.+4      	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 610:	20 e1       	ldi	r18, 0x10	; 16
 612:	32 e0       	ldi	r19, 0x02	; 2
 614:	f8 01       	movw	r30, r16
 616:	b7 fe       	sbrs	r11, 7
 618:	07 c0       	rjmp	.+14     	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 61a:	60 81       	ld	r22, Z
 61c:	71 81       	ldd	r23, Z+1	; 0x01
 61e:	82 81       	ldd	r24, Z+2	; 0x02
 620:	93 81       	ldd	r25, Z+3	; 0x03
 622:	0c 5f       	subi	r16, 0xFC	; 252
 624:	1f 4f       	sbci	r17, 0xFF	; 255
 626:	06 c0       	rjmp	.+12     	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
 628:	60 81       	ld	r22, Z
 62a:	71 81       	ldd	r23, Z+1	; 0x01
 62c:	80 e0       	ldi	r24, 0x00	; 0
 62e:	90 e0       	ldi	r25, 0x00	; 0
 630:	0e 5f       	subi	r16, 0xFE	; 254
 632:	1f 4f       	sbci	r17, 0xFF	; 255
 634:	a3 01       	movw	r20, r6
 636:	db d0       	rcall	.+438    	; 0x7ee <__ultoa_invert>
 638:	88 2e       	mov	r8, r24
 63a:	86 18       	sub	r8, r6
 63c:	fb 2d       	mov	r31, r11
 63e:	ff 77       	andi	r31, 0x7F	; 127
 640:	3f 2e       	mov	r3, r31
 642:	36 fe       	sbrs	r3, 6
 644:	0d c0       	rjmp	.+26     	; 0x660 <__LOCK_REGION_LENGTH__+0x260>
 646:	23 2d       	mov	r18, r3
 648:	2e 7f       	andi	r18, 0xFE	; 254
 64a:	a2 2e       	mov	r10, r18
 64c:	89 14       	cp	r8, r9
 64e:	58 f4       	brcc	.+22     	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 650:	34 fe       	sbrs	r3, 4
 652:	0b c0       	rjmp	.+22     	; 0x66a <__LOCK_REGION_LENGTH__+0x26a>
 654:	32 fc       	sbrc	r3, 2
 656:	09 c0       	rjmp	.+18     	; 0x66a <__LOCK_REGION_LENGTH__+0x26a>
 658:	83 2d       	mov	r24, r3
 65a:	8e 7e       	andi	r24, 0xEE	; 238
 65c:	a8 2e       	mov	r10, r24
 65e:	05 c0       	rjmp	.+10     	; 0x66a <__LOCK_REGION_LENGTH__+0x26a>
 660:	b8 2c       	mov	r11, r8
 662:	a3 2c       	mov	r10, r3
 664:	03 c0       	rjmp	.+6      	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 666:	b8 2c       	mov	r11, r8
 668:	01 c0       	rjmp	.+2      	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 66a:	b9 2c       	mov	r11, r9
 66c:	a4 fe       	sbrs	r10, 4
 66e:	0f c0       	rjmp	.+30     	; 0x68e <__LOCK_REGION_LENGTH__+0x28e>
 670:	fe 01       	movw	r30, r28
 672:	e8 0d       	add	r30, r8
 674:	f1 1d       	adc	r31, r1
 676:	80 81       	ld	r24, Z
 678:	80 33       	cpi	r24, 0x30	; 48
 67a:	21 f4       	brne	.+8      	; 0x684 <__LOCK_REGION_LENGTH__+0x284>
 67c:	9a 2d       	mov	r25, r10
 67e:	99 7e       	andi	r25, 0xE9	; 233
 680:	a9 2e       	mov	r10, r25
 682:	09 c0       	rjmp	.+18     	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
 684:	a2 fe       	sbrs	r10, 2
 686:	06 c0       	rjmp	.+12     	; 0x694 <__LOCK_REGION_LENGTH__+0x294>
 688:	b3 94       	inc	r11
 68a:	b3 94       	inc	r11
 68c:	04 c0       	rjmp	.+8      	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
 68e:	8a 2d       	mov	r24, r10
 690:	86 78       	andi	r24, 0x86	; 134
 692:	09 f0       	breq	.+2      	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
 694:	b3 94       	inc	r11
 696:	a3 fc       	sbrc	r10, 3
 698:	10 c0       	rjmp	.+32     	; 0x6ba <__LOCK_REGION_LENGTH__+0x2ba>
 69a:	a0 fe       	sbrs	r10, 0
 69c:	06 c0       	rjmp	.+12     	; 0x6aa <__LOCK_REGION_LENGTH__+0x2aa>
 69e:	b2 14       	cp	r11, r2
 6a0:	80 f4       	brcc	.+32     	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 6a2:	28 0c       	add	r2, r8
 6a4:	92 2c       	mov	r9, r2
 6a6:	9b 18       	sub	r9, r11
 6a8:	0d c0       	rjmp	.+26     	; 0x6c4 <__LOCK_REGION_LENGTH__+0x2c4>
 6aa:	b2 14       	cp	r11, r2
 6ac:	58 f4       	brcc	.+22     	; 0x6c4 <__LOCK_REGION_LENGTH__+0x2c4>
 6ae:	b6 01       	movw	r22, r12
 6b0:	80 e2       	ldi	r24, 0x20	; 32
 6b2:	90 e0       	ldi	r25, 0x00	; 0
 6b4:	60 d0       	rcall	.+192    	; 0x776 <fputc>
 6b6:	b3 94       	inc	r11
 6b8:	f8 cf       	rjmp	.-16     	; 0x6aa <__LOCK_REGION_LENGTH__+0x2aa>
 6ba:	b2 14       	cp	r11, r2
 6bc:	18 f4       	brcc	.+6      	; 0x6c4 <__LOCK_REGION_LENGTH__+0x2c4>
 6be:	2b 18       	sub	r2, r11
 6c0:	02 c0       	rjmp	.+4      	; 0x6c6 <__LOCK_REGION_LENGTH__+0x2c6>
 6c2:	98 2c       	mov	r9, r8
 6c4:	21 2c       	mov	r2, r1
 6c6:	a4 fe       	sbrs	r10, 4
 6c8:	0f c0       	rjmp	.+30     	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
 6ca:	b6 01       	movw	r22, r12
 6cc:	80 e3       	ldi	r24, 0x30	; 48
 6ce:	90 e0       	ldi	r25, 0x00	; 0
 6d0:	52 d0       	rcall	.+164    	; 0x776 <fputc>
 6d2:	a2 fe       	sbrs	r10, 2
 6d4:	16 c0       	rjmp	.+44     	; 0x702 <__LOCK_REGION_LENGTH__+0x302>
 6d6:	a1 fc       	sbrc	r10, 1
 6d8:	03 c0       	rjmp	.+6      	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
 6da:	88 e7       	ldi	r24, 0x78	; 120
 6dc:	90 e0       	ldi	r25, 0x00	; 0
 6de:	02 c0       	rjmp	.+4      	; 0x6e4 <__LOCK_REGION_LENGTH__+0x2e4>
 6e0:	88 e5       	ldi	r24, 0x58	; 88
 6e2:	90 e0       	ldi	r25, 0x00	; 0
 6e4:	b6 01       	movw	r22, r12
 6e6:	0c c0       	rjmp	.+24     	; 0x700 <__LOCK_REGION_LENGTH__+0x300>
 6e8:	8a 2d       	mov	r24, r10
 6ea:	86 78       	andi	r24, 0x86	; 134
 6ec:	51 f0       	breq	.+20     	; 0x702 <__LOCK_REGION_LENGTH__+0x302>
 6ee:	a1 fe       	sbrs	r10, 1
 6f0:	02 c0       	rjmp	.+4      	; 0x6f6 <__LOCK_REGION_LENGTH__+0x2f6>
 6f2:	8b e2       	ldi	r24, 0x2B	; 43
 6f4:	01 c0       	rjmp	.+2      	; 0x6f8 <__LOCK_REGION_LENGTH__+0x2f8>
 6f6:	80 e2       	ldi	r24, 0x20	; 32
 6f8:	a7 fc       	sbrc	r10, 7
 6fa:	8d e2       	ldi	r24, 0x2D	; 45
 6fc:	b6 01       	movw	r22, r12
 6fe:	90 e0       	ldi	r25, 0x00	; 0
 700:	3a d0       	rcall	.+116    	; 0x776 <fputc>
 702:	89 14       	cp	r8, r9
 704:	30 f4       	brcc	.+12     	; 0x712 <__LOCK_REGION_LENGTH__+0x312>
 706:	b6 01       	movw	r22, r12
 708:	80 e3       	ldi	r24, 0x30	; 48
 70a:	90 e0       	ldi	r25, 0x00	; 0
 70c:	34 d0       	rcall	.+104    	; 0x776 <fputc>
 70e:	9a 94       	dec	r9
 710:	f8 cf       	rjmp	.-16     	; 0x702 <__LOCK_REGION_LENGTH__+0x302>
 712:	8a 94       	dec	r8
 714:	f3 01       	movw	r30, r6
 716:	e8 0d       	add	r30, r8
 718:	f1 1d       	adc	r31, r1
 71a:	80 81       	ld	r24, Z
 71c:	b6 01       	movw	r22, r12
 71e:	90 e0       	ldi	r25, 0x00	; 0
 720:	2a d0       	rcall	.+84     	; 0x776 <fputc>
 722:	81 10       	cpse	r8, r1
 724:	f6 cf       	rjmp	.-20     	; 0x712 <__LOCK_REGION_LENGTH__+0x312>
 726:	22 20       	and	r2, r2
 728:	09 f4       	brne	.+2      	; 0x72c <__LOCK_REGION_LENGTH__+0x32c>
 72a:	4e ce       	rjmp	.-868    	; 0x3c8 <vfprintf+0x22>
 72c:	b6 01       	movw	r22, r12
 72e:	80 e2       	ldi	r24, 0x20	; 32
 730:	90 e0       	ldi	r25, 0x00	; 0
 732:	21 d0       	rcall	.+66     	; 0x776 <fputc>
 734:	2a 94       	dec	r2
 736:	f7 cf       	rjmp	.-18     	; 0x726 <__LOCK_REGION_LENGTH__+0x326>
 738:	f6 01       	movw	r30, r12
 73a:	86 81       	ldd	r24, Z+6	; 0x06
 73c:	97 81       	ldd	r25, Z+7	; 0x07
 73e:	02 c0       	rjmp	.+4      	; 0x744 <__LOCK_REGION_LENGTH__+0x344>
 740:	8f ef       	ldi	r24, 0xFF	; 255
 742:	9f ef       	ldi	r25, 0xFF	; 255
 744:	2b 96       	adiw	r28, 0x0b	; 11
 746:	e2 e1       	ldi	r30, 0x12	; 18
 748:	c9 c0       	rjmp	.+402    	; 0x8dc <__epilogue_restores__>

0000074a <strnlen_P>:
 74a:	fc 01       	movw	r30, r24
 74c:	05 90       	lpm	r0, Z+
 74e:	61 50       	subi	r22, 0x01	; 1
 750:	70 40       	sbci	r23, 0x00	; 0
 752:	01 10       	cpse	r0, r1
 754:	d8 f7       	brcc	.-10     	; 0x74c <strnlen_P+0x2>
 756:	80 95       	com	r24
 758:	90 95       	com	r25
 75a:	8e 0f       	add	r24, r30
 75c:	9f 1f       	adc	r25, r31
 75e:	08 95       	ret

00000760 <strnlen>:
 760:	fc 01       	movw	r30, r24
 762:	61 50       	subi	r22, 0x01	; 1
 764:	70 40       	sbci	r23, 0x00	; 0
 766:	01 90       	ld	r0, Z+
 768:	01 10       	cpse	r0, r1
 76a:	d8 f7       	brcc	.-10     	; 0x762 <strnlen+0x2>
 76c:	80 95       	com	r24
 76e:	90 95       	com	r25
 770:	8e 0f       	add	r24, r30
 772:	9f 1f       	adc	r25, r31
 774:	08 95       	ret

00000776 <fputc>:
 776:	0f 93       	push	r16
 778:	1f 93       	push	r17
 77a:	cf 93       	push	r28
 77c:	df 93       	push	r29
 77e:	fb 01       	movw	r30, r22
 780:	23 81       	ldd	r18, Z+3	; 0x03
 782:	21 fd       	sbrc	r18, 1
 784:	03 c0       	rjmp	.+6      	; 0x78c <fputc+0x16>
 786:	8f ef       	ldi	r24, 0xFF	; 255
 788:	9f ef       	ldi	r25, 0xFF	; 255
 78a:	2c c0       	rjmp	.+88     	; 0x7e4 <fputc+0x6e>
 78c:	22 ff       	sbrs	r18, 2
 78e:	16 c0       	rjmp	.+44     	; 0x7bc <fputc+0x46>
 790:	46 81       	ldd	r20, Z+6	; 0x06
 792:	57 81       	ldd	r21, Z+7	; 0x07
 794:	24 81       	ldd	r18, Z+4	; 0x04
 796:	35 81       	ldd	r19, Z+5	; 0x05
 798:	42 17       	cp	r20, r18
 79a:	53 07       	cpc	r21, r19
 79c:	44 f4       	brge	.+16     	; 0x7ae <fputc+0x38>
 79e:	a0 81       	ld	r26, Z
 7a0:	b1 81       	ldd	r27, Z+1	; 0x01
 7a2:	9d 01       	movw	r18, r26
 7a4:	2f 5f       	subi	r18, 0xFF	; 255
 7a6:	3f 4f       	sbci	r19, 0xFF	; 255
 7a8:	20 83       	st	Z, r18
 7aa:	31 83       	std	Z+1, r19	; 0x01
 7ac:	8c 93       	st	X, r24
 7ae:	26 81       	ldd	r18, Z+6	; 0x06
 7b0:	37 81       	ldd	r19, Z+7	; 0x07
 7b2:	2f 5f       	subi	r18, 0xFF	; 255
 7b4:	3f 4f       	sbci	r19, 0xFF	; 255
 7b6:	26 83       	std	Z+6, r18	; 0x06
 7b8:	37 83       	std	Z+7, r19	; 0x07
 7ba:	14 c0       	rjmp	.+40     	; 0x7e4 <fputc+0x6e>
 7bc:	8b 01       	movw	r16, r22
 7be:	ec 01       	movw	r28, r24
 7c0:	fb 01       	movw	r30, r22
 7c2:	00 84       	ldd	r0, Z+8	; 0x08
 7c4:	f1 85       	ldd	r31, Z+9	; 0x09
 7c6:	e0 2d       	mov	r30, r0
 7c8:	09 95       	icall
 7ca:	89 2b       	or	r24, r25
 7cc:	e1 f6       	brne	.-72     	; 0x786 <fputc+0x10>
 7ce:	d8 01       	movw	r26, r16
 7d0:	16 96       	adiw	r26, 0x06	; 6
 7d2:	8d 91       	ld	r24, X+
 7d4:	9c 91       	ld	r25, X
 7d6:	17 97       	sbiw	r26, 0x07	; 7
 7d8:	01 96       	adiw	r24, 0x01	; 1
 7da:	16 96       	adiw	r26, 0x06	; 6
 7dc:	8d 93       	st	X+, r24
 7de:	9c 93       	st	X, r25
 7e0:	17 97       	sbiw	r26, 0x07	; 7
 7e2:	ce 01       	movw	r24, r28
 7e4:	df 91       	pop	r29
 7e6:	cf 91       	pop	r28
 7e8:	1f 91       	pop	r17
 7ea:	0f 91       	pop	r16
 7ec:	08 95       	ret

000007ee <__ultoa_invert>:
 7ee:	fa 01       	movw	r30, r20
 7f0:	aa 27       	eor	r26, r26
 7f2:	28 30       	cpi	r18, 0x08	; 8
 7f4:	51 f1       	breq	.+84     	; 0x84a <__ultoa_invert+0x5c>
 7f6:	20 31       	cpi	r18, 0x10	; 16
 7f8:	81 f1       	breq	.+96     	; 0x85a <__ultoa_invert+0x6c>
 7fa:	e8 94       	clt
 7fc:	6f 93       	push	r22
 7fe:	6e 7f       	andi	r22, 0xFE	; 254
 800:	6e 5f       	subi	r22, 0xFE	; 254
 802:	7f 4f       	sbci	r23, 0xFF	; 255
 804:	8f 4f       	sbci	r24, 0xFF	; 255
 806:	9f 4f       	sbci	r25, 0xFF	; 255
 808:	af 4f       	sbci	r26, 0xFF	; 255
 80a:	b1 e0       	ldi	r27, 0x01	; 1
 80c:	3e d0       	rcall	.+124    	; 0x88a <__ultoa_invert+0x9c>
 80e:	b4 e0       	ldi	r27, 0x04	; 4
 810:	3c d0       	rcall	.+120    	; 0x88a <__ultoa_invert+0x9c>
 812:	67 0f       	add	r22, r23
 814:	78 1f       	adc	r23, r24
 816:	89 1f       	adc	r24, r25
 818:	9a 1f       	adc	r25, r26
 81a:	a1 1d       	adc	r26, r1
 81c:	68 0f       	add	r22, r24
 81e:	79 1f       	adc	r23, r25
 820:	8a 1f       	adc	r24, r26
 822:	91 1d       	adc	r25, r1
 824:	a1 1d       	adc	r26, r1
 826:	6a 0f       	add	r22, r26
 828:	71 1d       	adc	r23, r1
 82a:	81 1d       	adc	r24, r1
 82c:	91 1d       	adc	r25, r1
 82e:	a1 1d       	adc	r26, r1
 830:	20 d0       	rcall	.+64     	; 0x872 <__ultoa_invert+0x84>
 832:	09 f4       	brne	.+2      	; 0x836 <__ultoa_invert+0x48>
 834:	68 94       	set
 836:	3f 91       	pop	r19
 838:	2a e0       	ldi	r18, 0x0A	; 10
 83a:	26 9f       	mul	r18, r22
 83c:	11 24       	eor	r1, r1
 83e:	30 19       	sub	r19, r0
 840:	30 5d       	subi	r19, 0xD0	; 208
 842:	31 93       	st	Z+, r19
 844:	de f6       	brtc	.-74     	; 0x7fc <__ultoa_invert+0xe>
 846:	cf 01       	movw	r24, r30
 848:	08 95       	ret
 84a:	46 2f       	mov	r20, r22
 84c:	47 70       	andi	r20, 0x07	; 7
 84e:	40 5d       	subi	r20, 0xD0	; 208
 850:	41 93       	st	Z+, r20
 852:	b3 e0       	ldi	r27, 0x03	; 3
 854:	0f d0       	rcall	.+30     	; 0x874 <__ultoa_invert+0x86>
 856:	c9 f7       	brne	.-14     	; 0x84a <__ultoa_invert+0x5c>
 858:	f6 cf       	rjmp	.-20     	; 0x846 <__ultoa_invert+0x58>
 85a:	46 2f       	mov	r20, r22
 85c:	4f 70       	andi	r20, 0x0F	; 15
 85e:	40 5d       	subi	r20, 0xD0	; 208
 860:	4a 33       	cpi	r20, 0x3A	; 58
 862:	18 f0       	brcs	.+6      	; 0x86a <__ultoa_invert+0x7c>
 864:	49 5d       	subi	r20, 0xD9	; 217
 866:	31 fd       	sbrc	r19, 1
 868:	40 52       	subi	r20, 0x20	; 32
 86a:	41 93       	st	Z+, r20
 86c:	02 d0       	rcall	.+4      	; 0x872 <__ultoa_invert+0x84>
 86e:	a9 f7       	brne	.-22     	; 0x85a <__ultoa_invert+0x6c>
 870:	ea cf       	rjmp	.-44     	; 0x846 <__ultoa_invert+0x58>
 872:	b4 e0       	ldi	r27, 0x04	; 4
 874:	a6 95       	lsr	r26
 876:	97 95       	ror	r25
 878:	87 95       	ror	r24
 87a:	77 95       	ror	r23
 87c:	67 95       	ror	r22
 87e:	ba 95       	dec	r27
 880:	c9 f7       	brne	.-14     	; 0x874 <__ultoa_invert+0x86>
 882:	00 97       	sbiw	r24, 0x00	; 0
 884:	61 05       	cpc	r22, r1
 886:	71 05       	cpc	r23, r1
 888:	08 95       	ret
 88a:	9b 01       	movw	r18, r22
 88c:	ac 01       	movw	r20, r24
 88e:	0a 2e       	mov	r0, r26
 890:	06 94       	lsr	r0
 892:	57 95       	ror	r21
 894:	47 95       	ror	r20
 896:	37 95       	ror	r19
 898:	27 95       	ror	r18
 89a:	ba 95       	dec	r27
 89c:	c9 f7       	brne	.-14     	; 0x890 <__ultoa_invert+0xa2>
 89e:	62 0f       	add	r22, r18
 8a0:	73 1f       	adc	r23, r19
 8a2:	84 1f       	adc	r24, r20
 8a4:	95 1f       	adc	r25, r21
 8a6:	a0 1d       	adc	r26, r0
 8a8:	08 95       	ret

000008aa <__prologue_saves__>:
 8aa:	2f 92       	push	r2
 8ac:	3f 92       	push	r3
 8ae:	4f 92       	push	r4
 8b0:	5f 92       	push	r5
 8b2:	6f 92       	push	r6
 8b4:	7f 92       	push	r7
 8b6:	8f 92       	push	r8
 8b8:	9f 92       	push	r9
 8ba:	af 92       	push	r10
 8bc:	bf 92       	push	r11
 8be:	cf 92       	push	r12
 8c0:	df 92       	push	r13
 8c2:	ef 92       	push	r14
 8c4:	ff 92       	push	r15
 8c6:	0f 93       	push	r16
 8c8:	1f 93       	push	r17
 8ca:	cf 93       	push	r28
 8cc:	df 93       	push	r29
 8ce:	cd b7       	in	r28, 0x3d	; 61
 8d0:	de b7       	in	r29, 0x3e	; 62
 8d2:	ca 1b       	sub	r28, r26
 8d4:	db 0b       	sbc	r29, r27
 8d6:	cd bf       	out	0x3d, r28	; 61
 8d8:	de bf       	out	0x3e, r29	; 62
 8da:	09 94       	ijmp

000008dc <__epilogue_restores__>:
 8dc:	2a 88       	ldd	r2, Y+18	; 0x12
 8de:	39 88       	ldd	r3, Y+17	; 0x11
 8e0:	48 88       	ldd	r4, Y+16	; 0x10
 8e2:	5f 84       	ldd	r5, Y+15	; 0x0f
 8e4:	6e 84       	ldd	r6, Y+14	; 0x0e
 8e6:	7d 84       	ldd	r7, Y+13	; 0x0d
 8e8:	8c 84       	ldd	r8, Y+12	; 0x0c
 8ea:	9b 84       	ldd	r9, Y+11	; 0x0b
 8ec:	aa 84       	ldd	r10, Y+10	; 0x0a
 8ee:	b9 84       	ldd	r11, Y+9	; 0x09
 8f0:	c8 84       	ldd	r12, Y+8	; 0x08
 8f2:	df 80       	ldd	r13, Y+7	; 0x07
 8f4:	ee 80       	ldd	r14, Y+6	; 0x06
 8f6:	fd 80       	ldd	r15, Y+5	; 0x05
 8f8:	0c 81       	ldd	r16, Y+4	; 0x04
 8fa:	1b 81       	ldd	r17, Y+3	; 0x03
 8fc:	aa 81       	ldd	r26, Y+2	; 0x02
 8fe:	b9 81       	ldd	r27, Y+1	; 0x01
 900:	ce 0f       	add	r28, r30
 902:	d1 1d       	adc	r29, r1
 904:	cd bf       	out	0x3d, r28	; 61
 906:	de bf       	out	0x3e, r29	; 62
 908:	ed 01       	movw	r28, r26
 90a:	08 95       	ret

0000090c <_exit>:
 90c:	f8 94       	cli

0000090e <__stop_program>:
 90e:	ff cf       	rjmp	.-2      	; 0x90e <__stop_program>
