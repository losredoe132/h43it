
GccApplication3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803f00  00803f00  00000a3e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008f4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b6  000088f4  000008f4  00000988  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000010  00803f00  00803f00  00000a3e  2**0
                  ALLOC
  4 .comment      0000005c  00000000  00000000  00000a3e  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a9c  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000078  00000000  00000000  00000ad8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000278d  00000000  00000000  00000b50  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001756  00000000  00000000  000032dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000004b5  00000000  00000000  00004a33  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  0000018c  00000000  00000000  00004ee8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000011f0  00000000  00000000  00005074  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000307  00000000  00000000  00006264  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000068  00000000  00000000  0000656b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	33 c0       	rjmp	.+102    	; 0x6a <__bad_interrupt>
   4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
   6:	e8 c0       	rjmp	.+464    	; 0x1d8 <__vector_3>
   8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
   a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
   c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
   e:	f9 c0       	rjmp	.+498    	; 0x202 <__vector_7>
  10:	07 c1       	rjmp	.+526    	; 0x220 <__vector_8>
  12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
  14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
  16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
  18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
  1a:	44 c1       	rjmp	.+648    	; 0x2a4 <__vector_13>
  1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
  1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
  20:	24 c0       	rjmp	.+72     	; 0x6a <__bad_interrupt>
  22:	23 c0       	rjmp	.+70     	; 0x6a <__bad_interrupt>
  24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
  26:	21 c0       	rjmp	.+66     	; 0x6a <__bad_interrupt>
  28:	20 c0       	rjmp	.+64     	; 0x6a <__bad_interrupt>
  2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
  2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
  2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
  30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
  32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	cd bf       	out	0x3d, r28	; 61
  3c:	df e3       	ldi	r29, 0x3F	; 63
  3e:	de bf       	out	0x3e, r29	; 62

00000040 <__do_copy_data>:
  40:	1f e3       	ldi	r17, 0x3F	; 63
  42:	a0 e0       	ldi	r26, 0x00	; 0
  44:	bf e3       	ldi	r27, 0x3F	; 63
  46:	ea ea       	ldi	r30, 0xAA	; 170
  48:	f9 e0       	ldi	r31, 0x09	; 9
  4a:	02 c0       	rjmp	.+4      	; 0x50 <__do_copy_data+0x10>
  4c:	05 90       	lpm	r0, Z+
  4e:	0d 92       	st	X+, r0
  50:	a0 30       	cpi	r26, 0x00	; 0
  52:	b1 07       	cpc	r27, r17
  54:	d9 f7       	brne	.-10     	; 0x4c <__do_copy_data+0xc>

00000056 <__do_clear_bss>:
  56:	2f e3       	ldi	r18, 0x3F	; 63
  58:	a0 e0       	ldi	r26, 0x00	; 0
  5a:	bf e3       	ldi	r27, 0x3F	; 63
  5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
  5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
  60:	a0 31       	cpi	r26, 0x10	; 16
  62:	b2 07       	cpc	r27, r18
  64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
  66:	60 d0       	rcall	.+192    	; 0x128 <main>
  68:	43 c4       	rjmp	.+2182   	; 0x8f0 <_exit>

0000006a <__bad_interrupt>:
  6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <TCA0_init>:
volatile uint16_t consecutive_counts_released ;



void TCA0_init(int TCAdelay)
{
  6c:	9c 01       	movw	r18, r24
	// enable overflow interrupt
	TCA0.SINGLE.INTCTRL = TCA_SINGLE_OVF_bm;
  6e:	e0 e0       	ldi	r30, 0x00	; 0
  70:	fa e0       	ldi	r31, 0x0A	; 10
  72:	81 e0       	ldi	r24, 0x01	; 1
  74:	82 87       	std	Z+10, r24	; 0x0a

	// set Normal mode
	TCA0.SINGLE.CTRLB = TCA_SINGLE_WGMODE_NORMAL_gc;
  76:	11 82       	std	Z+1, r1	; 0x01

	// disable event counting
	TCA0.SINGLE.EVCTRL &= ~(TCA_SINGLE_CNTEI_bm);
  78:	91 85       	ldd	r25, Z+9	; 0x09
  7a:	9e 7f       	andi	r25, 0xFE	; 254
  7c:	91 87       	std	Z+9, r25	; 0x09

	// set the period
	TCA0.SINGLE.PER = TCAdelay;
  7e:	26 a3       	std	Z+38, r18	; 0x26
  80:	37 a3       	std	Z+39, r19	; 0x27

	// set clock
	TCA0.SINGLE.CTRLA = TCA_SINGLE_CLKSEL_DIV1024_gc | TCA_SINGLE_ENABLE_bm;    /* source (sys_clk/8) +  start timer */
  82:	8f e0       	ldi	r24, 0x0F	; 15
  84:	80 83       	st	Z, r24
  86:	08 95       	ret

00000088 <TCB0_init>:
}

void TCB0_init (void)
{
	/* Load the Compare or Capture register with the timeout value*/
	TCB0.CCMP = TCB_CMP_EXAMPLE_VALUE;
  88:	e0 e4       	ldi	r30, 0x40	; 64
  8a:	fa e0       	ldi	r31, 0x0A	; 10
  8c:	8f ef       	ldi	r24, 0xFF	; 255
  8e:	9f ef       	ldi	r25, 0xFF	; 255
  90:	84 87       	std	Z+12, r24	; 0x0c
  92:	95 87       	std	Z+13, r25	; 0x0d
	
	/* Enable TCB and set CLK_PER divider to 1 (No Prescaling) */
	TCB0.CTRLA = TCB_CLKSEL_CLKDIV2_gc | TCB_ENABLE_bm ;
  94:	83 e0       	ldi	r24, 0x03	; 3
  96:	80 83       	st	Z, r24
	
	/* Enable Capture or Timeout interrupt */
	TCB0.INTCTRL = TCB_CAPT_bm;
  98:	81 e0       	ldi	r24, 0x01	; 1
  9a:	85 83       	std	Z+5, r24	; 0x05
  9c:	08 95       	ret

0000009e <LEDOnById>:
}


void LEDOnById(int i){
	PORTA.OUT = port_a_b_outs[i][0];
  9e:	88 0f       	add	r24, r24
  a0:	99 1f       	adc	r25, r25
  a2:	fc 01       	movw	r30, r24
  a4:	e8 57       	subi	r30, 0x78	; 120
  a6:	f6 47       	sbci	r31, 0x76	; 118
  a8:	80 81       	ld	r24, Z
  aa:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <port_a_b_outs+0x7f7a7c>
	PORTB.OUT= port_a_b_outs[i][1];
  ae:	81 81       	ldd	r24, Z+1	; 0x01
  b0:	80 93 24 04 	sts	0x0424, r24	; 0x800424 <port_a_b_outs+0x7f7a9c>
  b4:	08 95       	ret

000000b6 <allLEDoff>:
}

void allLEDoff(){
	PORTA.OUT = port_a_b_outs[0][0];
  b6:	8f ef       	ldi	r24, 0xFF	; 255
  b8:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <port_a_b_outs+0x7f7a7c>
	PORTB.OUT= port_a_b_outs[0][1];
  bc:	10 92 24 04 	sts	0x0424, r1	; 0x800424 <port_a_b_outs+0x7f7a9c>
  c0:	08 95       	ret

000000c2 <wait_until_button_released>:
}

void wait_until_button_released()
{
  c2:	cf 93       	push	r28
  c4:	df 93       	push	r29
	while(consecutive_counts_released<6){printf("Waiting for release with consecutive_counts_pressed:%d, consecutive_counts_released:%d\n",consecutive_counts_pressed, consecutive_counts_released );}
  c6:	80 91 04 3f 	lds	r24, 0x3F04	; 0x803f04 <consecutive_counts_released>
  ca:	90 91 05 3f 	lds	r25, 0x3F05	; 0x803f05 <consecutive_counts_released+0x1>
  ce:	06 97       	sbiw	r24, 0x06	; 6
  d0:	e8 f4       	brcc	.+58     	; 0x10c <__DATA_REGION_LENGTH__+0xc>
  d2:	c4 ef       	ldi	r28, 0xF4	; 244
  d4:	d8 e8       	ldi	r29, 0x88	; 136
  d6:	20 91 04 3f 	lds	r18, 0x3F04	; 0x803f04 <consecutive_counts_released>
  da:	30 91 05 3f 	lds	r19, 0x3F05	; 0x803f05 <consecutive_counts_released+0x1>
  de:	80 91 08 3f 	lds	r24, 0x3F08	; 0x803f08 <consecutive_counts_pressed>
  e2:	90 91 09 3f 	lds	r25, 0x3F09	; 0x803f09 <consecutive_counts_pressed+0x1>
  e6:	3f 93       	push	r19
  e8:	2f 93       	push	r18
  ea:	9f 93       	push	r25
  ec:	8f 93       	push	r24
  ee:	df 93       	push	r29
  f0:	cf 93       	push	r28
  f2:	08 d1       	rcall	.+528    	; 0x304 <printf>
  f4:	80 91 04 3f 	lds	r24, 0x3F04	; 0x803f04 <consecutive_counts_released>
  f8:	90 91 05 3f 	lds	r25, 0x3F05	; 0x803f05 <consecutive_counts_released+0x1>
  fc:	0f 90       	pop	r0
  fe:	0f 90       	pop	r0
 100:	0f 90       	pop	r0
 102:	0f 90       	pop	r0
 104:	0f 90       	pop	r0
 106:	0f 90       	pop	r0
 108:	06 97       	sbiw	r24, 0x06	; 6
 10a:	28 f3       	brcs	.-54     	; 0xd6 <wait_until_button_released+0x14>
	consecutive_counts_pressed=0;
 10c:	10 92 08 3f 	sts	0x3F08, r1	; 0x803f08 <consecutive_counts_pressed>
 110:	10 92 09 3f 	sts	0x3F09, r1	; 0x803f09 <consecutive_counts_pressed+0x1>
	consecutive_counts_released=0;
 114:	10 92 04 3f 	sts	0x3F04, r1	; 0x803f04 <consecutive_counts_released>
 118:	10 92 05 3f 	sts	0x3F05, r1	; 0x803f05 <consecutive_counts_released+0x1>
	printf("Released\n");
 11c:	8c e4       	ldi	r24, 0x4C	; 76
 11e:	99 e8       	ldi	r25, 0x89	; 137
 120:	04 d1       	rcall	.+520    	; 0x32a <puts>
}
 122:	df 91       	pop	r29
 124:	cf 91       	pop	r28
 126:	08 95       	ret

00000128 <main>:

int main() {


	//RTCA_init(1); // set periodic RTC triggering "awakening" delay in seconds
	TCA0_init(1);
 128:	81 e0       	ldi	r24, 0x01	; 1
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	9f df       	rcall	.-194    	; 0x6c <TCA0_init>
	TCB0_init();
 12e:	ac df       	rcall	.-168    	; 0x88 <TCB0_init>
	PORTA.DIRSET = 0b10111111;
 130:	e0 e0       	ldi	r30, 0x00	; 0
 132:	f4 e0       	ldi	r31, 0x04	; 4
 134:	8f eb       	ldi	r24, 0xBF	; 191
 136:	81 83       	std	Z+1, r24	; 0x01
	PORTB.DIRSET = 0b11111111;
 138:	8f ef       	ldi	r24, 0xFF	; 255
 13a:	80 93 21 04 	sts	0x0421, r24	; 0x800421 <port_a_b_outs+0x7f7a99>
	//USART0_init();

	// Button setup
	PORTA.PIN6CTRL = PORT_ISC_FALLING_gc | PORT_PULLUPEN_bm; // Enable pull-up resistor
 13e:	8b e0       	ldi	r24, 0x0B	; 11
 140:	86 8b       	std	Z+22, r24	; 0x16

	
	// Initialize variables
	consecutive_counts_pressed=0;
 142:	10 92 08 3f 	sts	0x3F08, r1	; 0x803f08 <consecutive_counts_pressed>
 146:	10 92 09 3f 	sts	0x3F09, r1	; 0x803f09 <consecutive_counts_pressed+0x1>
	consecutive_counts_released=0;
 14a:	10 92 04 3f 	sts	0x3F04, r1	; 0x803f04 <consecutive_counts_released>
 14e:	10 92 05 3f 	sts	0x3F05, r1	; 0x803f05 <consecutive_counts_released+0x1>
	x=7;
 152:	87 e0       	ldi	r24, 0x07	; 7
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	80 93 02 3f 	sts	0x3F02, r24	; 0x803f02 <x>
 15a:	90 93 03 3f 	sts	0x3F03, r25	; 0x803f03 <x+0x1>
	i=0;
 15e:	10 92 06 3f 	sts	0x3F06, r1	; 0x803f06 <i>
 162:	10 92 07 3f 	sts	0x3F07, r1	; 0x803f07 <i+0x1>
	
	sei();
 166:	78 94       	sei
	SLPCTRL.CTRLA |= SLPCTRL_SMODE_STDBY_gc; // set POWER DOWN as sleep mode
 168:	e0 e5       	ldi	r30, 0x50	; 80
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	80 81       	ld	r24, Z
 16e:	82 60       	ori	r24, 0x02	; 2
 170:	80 83       	st	Z, r24
	SLPCTRL.CTRLA |= SLPCTRL_SEN_bm; // enable sleep mode
 172:	80 81       	ld	r24, Z
 174:	81 60       	ori	r24, 0x01	; 1
 176:	80 83       	st	Z, r24
	
	wait_until_button_released();
 178:	a4 df       	rcall	.-184    	; 0xc2 <wait_until_button_released>

	while(1){
		
		if (consecutive_counts_pressed> 25){
			x++;
			printf("Increasing x to %d\n", x);
 17a:	c5 e5       	ldi	r28, 0x55	; 85
 17c:	d9 e8       	ldi	r29, 0x89	; 137
	
	wait_until_button_released();

	while(1){
		
		if (consecutive_counts_pressed> 25){
 17e:	80 91 08 3f 	lds	r24, 0x3F08	; 0x803f08 <consecutive_counts_pressed>
 182:	90 91 09 3f 	lds	r25, 0x3F09	; 0x803f09 <consecutive_counts_pressed+0x1>
 186:	4a 97       	sbiw	r24, 0x1a	; 26
 188:	b8 f0       	brcs	.+46     	; 0x1b8 <main+0x90>
			x++;
 18a:	80 91 02 3f 	lds	r24, 0x3F02	; 0x803f02 <x>
 18e:	90 91 03 3f 	lds	r25, 0x3F03	; 0x803f03 <x+0x1>
 192:	01 96       	adiw	r24, 0x01	; 1
 194:	80 93 02 3f 	sts	0x3F02, r24	; 0x803f02 <x>
 198:	90 93 03 3f 	sts	0x3F03, r25	; 0x803f03 <x+0x1>
			printf("Increasing x to %d\n", x);
 19c:	80 91 02 3f 	lds	r24, 0x3F02	; 0x803f02 <x>
 1a0:	90 91 03 3f 	lds	r25, 0x3F03	; 0x803f03 <x+0x1>
 1a4:	9f 93       	push	r25
 1a6:	8f 93       	push	r24
 1a8:	df 93       	push	r29
 1aa:	cf 93       	push	r28
 1ac:	ab d0       	rcall	.+342    	; 0x304 <printf>

			wait_until_button_released();
 1ae:	89 df       	rcall	.-238    	; 0xc2 <wait_until_button_released>
 1b0:	0f 90       	pop	r0
 1b2:	0f 90       	pop	r0
 1b4:	0f 90       	pop	r0
 1b6:	0f 90       	pop	r0
		}
		
		if (consecutive_counts_released>50){
 1b8:	80 91 04 3f 	lds	r24, 0x3F04	; 0x803f04 <consecutive_counts_released>
 1bc:	90 91 05 3f 	lds	r25, 0x3F05	; 0x803f05 <consecutive_counts_released+0x1>
 1c0:	c3 97       	sbiw	r24, 0x33	; 51
 1c2:	e8 f2       	brcs	.-70     	; 0x17e <main+0x56>
			printf("going to sleep...\n");
 1c4:	89 e6       	ldi	r24, 0x69	; 105
 1c6:	99 e8       	ldi	r25, 0x89	; 137
 1c8:	b0 d0       	rcall	.+352    	; 0x32a <puts>
			allLEDoff();
 1ca:	75 df       	rcall	.-278    	; 0xb6 <allLEDoff>
			sleep_cpu();
 1cc:	88 95       	sleep
			printf("waking up...\n");
 1ce:	8b e7       	ldi	r24, 0x7B	; 123
 1d0:	99 e8       	ldi	r25, 0x89	; 137
 1d2:	ab d0       	rcall	.+342    	; 0x32a <puts>
// 
// 			sei();
// 			SLPCTRL.CTRLA |= SLPCTRL_SMODE_PDOWN_gc; // set POWER DOWN as sleep mode
// 			SLPCTRL.CTRLA |= SLPCTRL_SEN_bm; // enable sleep mode
			// wait until user releases button
			wait_until_button_released();
 1d4:	76 df       	rcall	.-276    	; 0xc2 <wait_until_button_released>
 1d6:	d3 cf       	rjmp	.-90     	; 0x17e <main+0x56>

000001d8 <__vector_3>:
		
	}


}
ISR(PORTA_PORT_vect) {
 1d8:	1f 92       	push	r1
 1da:	0f 92       	push	r0
 1dc:	0f b6       	in	r0, 0x3f	; 63
 1de:	0f 92       	push	r0
 1e0:	11 24       	eor	r1, r1
 1e2:	8f 93       	push	r24
 1e4:	ef 93       	push	r30
 1e6:	ff 93       	push	r31
	PORTA.INTFLAGS |= btn_pin; // Clear interrupt flag
 1e8:	e0 e0       	ldi	r30, 0x00	; 0
 1ea:	f4 e0       	ldi	r31, 0x04	; 4
 1ec:	81 85       	ldd	r24, Z+9	; 0x09
 1ee:	80 64       	ori	r24, 0x40	; 64
 1f0:	81 87       	std	Z+9, r24	; 0x09
}
 1f2:	ff 91       	pop	r31
 1f4:	ef 91       	pop	r30
 1f6:	8f 91       	pop	r24
 1f8:	0f 90       	pop	r0
 1fa:	0f be       	out	0x3f, r0	; 63
 1fc:	0f 90       	pop	r0
 1fe:	1f 90       	pop	r1
 200:	18 95       	reti

00000202 <__vector_7>:

ISR(RTC_PIT_vect)
{
 202:	1f 92       	push	r1
 204:	0f 92       	push	r0
 206:	0f b6       	in	r0, 0x3f	; 63
 208:	0f 92       	push	r0
 20a:	11 24       	eor	r1, r1
 20c:	8f 93       	push	r24
	RTC.PITINTFLAGS = RTC_PI_bm;// Clear interrupt flag
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <port_a_b_outs+0x7f77cb>
}
 214:	8f 91       	pop	r24
 216:	0f 90       	pop	r0
 218:	0f be       	out	0x3f, r0	; 63
 21a:	0f 90       	pop	r0
 21c:	1f 90       	pop	r1
 21e:	18 95       	reti

00000220 <__vector_8>:

ISR(TCA0_OVF_vect)
{
 220:	1f 92       	push	r1
 222:	0f 92       	push	r0
 224:	0f b6       	in	r0, 0x3f	; 63
 226:	0f 92       	push	r0
 228:	11 24       	eor	r1, r1
 22a:	2f 93       	push	r18
 22c:	3f 93       	push	r19
 22e:	4f 93       	push	r20
 230:	5f 93       	push	r21
 232:	6f 93       	push	r22
 234:	7f 93       	push	r23
 236:	8f 93       	push	r24
 238:	9f 93       	push	r25
 23a:	af 93       	push	r26
 23c:	bf 93       	push	r27
 23e:	ef 93       	push	r30
 240:	ff 93       	push	r31
	i++;
 242:	80 91 06 3f 	lds	r24, 0x3F06	; 0x803f06 <i>
 246:	90 91 07 3f 	lds	r25, 0x3F07	; 0x803f07 <i+0x1>
 24a:	01 96       	adiw	r24, 0x01	; 1
 24c:	80 93 06 3f 	sts	0x3F06, r24	; 0x803f06 <i>
 250:	90 93 07 3f 	sts	0x3F07, r25	; 0x803f07 <i+0x1>

	if (i<=x){LEDOnById(i);}
 254:	20 91 02 3f 	lds	r18, 0x3F02	; 0x803f02 <x>
 258:	30 91 03 3f 	lds	r19, 0x3F03	; 0x803f03 <x+0x1>
 25c:	28 17       	cp	r18, r24
 25e:	39 07       	cpc	r19, r25
 260:	14 f0       	brlt	.+4      	; 0x266 <__vector_8+0x46>
 262:	1d df       	rcall	.-454    	; 0x9e <LEDOnById>
 264:	01 c0       	rjmp	.+2      	; 0x268 <__vector_8+0x48>
	else{allLEDoff();}
 266:	27 df       	rcall	.-434    	; 0xb6 <allLEDoff>

	if (i>16){i=0;}
 268:	80 91 06 3f 	lds	r24, 0x3F06	; 0x803f06 <i>
 26c:	90 91 07 3f 	lds	r25, 0x3F07	; 0x803f07 <i+0x1>
 270:	41 97       	sbiw	r24, 0x11	; 17
 272:	24 f0       	brlt	.+8      	; 0x27c <__vector_8+0x5c>
 274:	10 92 06 3f 	sts	0x3F06, r1	; 0x803f06 <i>
 278:	10 92 07 3f 	sts	0x3F07, r1	; 0x803f07 <i+0x1>

	// The interrupt flag has to be cleared manually
	TCA0.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;
 27c:	81 e0       	ldi	r24, 0x01	; 1
 27e:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <port_a_b_outs+0x7f8083>
	
}
 282:	ff 91       	pop	r31
 284:	ef 91       	pop	r30
 286:	bf 91       	pop	r27
 288:	af 91       	pop	r26
 28a:	9f 91       	pop	r25
 28c:	8f 91       	pop	r24
 28e:	7f 91       	pop	r23
 290:	6f 91       	pop	r22
 292:	5f 91       	pop	r21
 294:	4f 91       	pop	r20
 296:	3f 91       	pop	r19
 298:	2f 91       	pop	r18
 29a:	0f 90       	pop	r0
 29c:	0f be       	out	0x3f, r0	; 63
 29e:	0f 90       	pop	r0
 2a0:	1f 90       	pop	r1
 2a2:	18 95       	reti

000002a4 <__vector_13>:


ISR(TCB0_INT_vect)
{
 2a4:	1f 92       	push	r1
 2a6:	0f 92       	push	r0
 2a8:	0f b6       	in	r0, 0x3f	; 63
 2aa:	0f 92       	push	r0
 2ac:	11 24       	eor	r1, r1
 2ae:	8f 93       	push	r24
 2b0:	9f 93       	push	r25
	// Counting consecutive ticks of pressed or released button. Debouncing and short and long press detection.
	if (~PORTA.IN & btn_pin){
 2b2:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <port_a_b_outs+0x7f7a80>
 2b6:	86 fd       	sbrc	r24, 6
 2b8:	0e c0       	rjmp	.+28     	; 0x2d6 <__vector_13+0x32>
		consecutive_counts_pressed++;
 2ba:	80 91 08 3f 	lds	r24, 0x3F08	; 0x803f08 <consecutive_counts_pressed>
 2be:	90 91 09 3f 	lds	r25, 0x3F09	; 0x803f09 <consecutive_counts_pressed+0x1>
 2c2:	01 96       	adiw	r24, 0x01	; 1
 2c4:	80 93 08 3f 	sts	0x3F08, r24	; 0x803f08 <consecutive_counts_pressed>
 2c8:	90 93 09 3f 	sts	0x3F09, r25	; 0x803f09 <consecutive_counts_pressed+0x1>
		consecutive_counts_released=0;
 2cc:	10 92 04 3f 	sts	0x3F04, r1	; 0x803f04 <consecutive_counts_released>
 2d0:	10 92 05 3f 	sts	0x3F05, r1	; 0x803f05 <consecutive_counts_released+0x1>
 2d4:	0d c0       	rjmp	.+26     	; 0x2f0 <__vector_13+0x4c>
	}
	else{
		consecutive_counts_pressed=0;
 2d6:	10 92 08 3f 	sts	0x3F08, r1	; 0x803f08 <consecutive_counts_pressed>
 2da:	10 92 09 3f 	sts	0x3F09, r1	; 0x803f09 <consecutive_counts_pressed+0x1>
		consecutive_counts_released++;
 2de:	80 91 04 3f 	lds	r24, 0x3F04	; 0x803f04 <consecutive_counts_released>
 2e2:	90 91 05 3f 	lds	r25, 0x3F05	; 0x803f05 <consecutive_counts_released+0x1>
 2e6:	01 96       	adiw	r24, 0x01	; 1
 2e8:	80 93 04 3f 	sts	0x3F04, r24	; 0x803f04 <consecutive_counts_released>
 2ec:	90 93 05 3f 	sts	0x3F05, r25	; 0x803f05 <consecutive_counts_released+0x1>
	}
	TCB0.INTFLAGS = TCB_CAPT_bm; /* Clear the interrupt flag */
 2f0:	81 e0       	ldi	r24, 0x01	; 1
 2f2:	80 93 46 0a 	sts	0x0A46, r24	; 0x800a46 <port_a_b_outs+0x7f80be>
 2f6:	9f 91       	pop	r25
 2f8:	8f 91       	pop	r24
 2fa:	0f 90       	pop	r0
 2fc:	0f be       	out	0x3f, r0	; 63
 2fe:	0f 90       	pop	r0
 300:	1f 90       	pop	r1
 302:	18 95       	reti

00000304 <printf>:
 304:	a0 e0       	ldi	r26, 0x00	; 0
 306:	b0 e0       	ldi	r27, 0x00	; 0
 308:	e7 e8       	ldi	r30, 0x87	; 135
 30a:	f1 e0       	ldi	r31, 0x01	; 1
 30c:	d0 c2       	rjmp	.+1440   	; 0x8ae <__prologue_saves__+0x20>
 30e:	ae 01       	movw	r20, r28
 310:	4b 5f       	subi	r20, 0xFB	; 251
 312:	5f 4f       	sbci	r21, 0xFF	; 255
 314:	fa 01       	movw	r30, r20
 316:	61 91       	ld	r22, Z+
 318:	71 91       	ld	r23, Z+
 31a:	af 01       	movw	r20, r30
 31c:	80 91 0c 3f 	lds	r24, 0x3F0C	; 0x803f0c <__iob+0x2>
 320:	90 91 0d 3f 	lds	r25, 0x3F0D	; 0x803f0d <__iob+0x3>
 324:	32 d0       	rcall	.+100    	; 0x38a <vfprintf>
 326:	e2 e0       	ldi	r30, 0x02	; 2
 328:	db c2       	rjmp	.+1462   	; 0x8e0 <__epilogue_restores__+0x20>

0000032a <puts>:
 32a:	0f 93       	push	r16
 32c:	1f 93       	push	r17
 32e:	cf 93       	push	r28
 330:	df 93       	push	r29
 332:	e0 91 0c 3f 	lds	r30, 0x3F0C	; 0x803f0c <__iob+0x2>
 336:	f0 91 0d 3f 	lds	r31, 0x3F0D	; 0x803f0d <__iob+0x3>
 33a:	23 81       	ldd	r18, Z+3	; 0x03
 33c:	21 ff       	sbrs	r18, 1
 33e:	1b c0       	rjmp	.+54     	; 0x376 <puts+0x4c>
 340:	8c 01       	movw	r16, r24
 342:	d0 e0       	ldi	r29, 0x00	; 0
 344:	c0 e0       	ldi	r28, 0x00	; 0
 346:	f8 01       	movw	r30, r16
 348:	81 91       	ld	r24, Z+
 34a:	8f 01       	movw	r16, r30
 34c:	60 91 0c 3f 	lds	r22, 0x3F0C	; 0x803f0c <__iob+0x2>
 350:	70 91 0d 3f 	lds	r23, 0x3F0D	; 0x803f0d <__iob+0x3>
 354:	db 01       	movw	r26, r22
 356:	18 96       	adiw	r26, 0x08	; 8
 358:	ed 91       	ld	r30, X+
 35a:	fc 91       	ld	r31, X
 35c:	19 97       	sbiw	r26, 0x09	; 9
 35e:	88 23       	and	r24, r24
 360:	31 f0       	breq	.+12     	; 0x36e <puts+0x44>
 362:	09 95       	icall
 364:	89 2b       	or	r24, r25
 366:	79 f3       	breq	.-34     	; 0x346 <puts+0x1c>
 368:	df ef       	ldi	r29, 0xFF	; 255
 36a:	cf ef       	ldi	r28, 0xFF	; 255
 36c:	ec cf       	rjmp	.-40     	; 0x346 <puts+0x1c>
 36e:	8a e0       	ldi	r24, 0x0A	; 10
 370:	09 95       	icall
 372:	89 2b       	or	r24, r25
 374:	19 f0       	breq	.+6      	; 0x37c <puts+0x52>
 376:	8f ef       	ldi	r24, 0xFF	; 255
 378:	9f ef       	ldi	r25, 0xFF	; 255
 37a:	02 c0       	rjmp	.+4      	; 0x380 <puts+0x56>
 37c:	8d 2f       	mov	r24, r29
 37e:	9c 2f       	mov	r25, r28
 380:	df 91       	pop	r29
 382:	cf 91       	pop	r28
 384:	1f 91       	pop	r17
 386:	0f 91       	pop	r16
 388:	08 95       	ret

0000038a <vfprintf>:
 38a:	ab e0       	ldi	r26, 0x0B	; 11
 38c:	b0 e0       	ldi	r27, 0x00	; 0
 38e:	ea ec       	ldi	r30, 0xCA	; 202
 390:	f1 e0       	ldi	r31, 0x01	; 1
 392:	7d c2       	rjmp	.+1274   	; 0x88e <__prologue_saves__>
 394:	6c 01       	movw	r12, r24
 396:	7b 01       	movw	r14, r22
 398:	8a 01       	movw	r16, r20
 39a:	fc 01       	movw	r30, r24
 39c:	16 82       	std	Z+6, r1	; 0x06
 39e:	17 82       	std	Z+7, r1	; 0x07
 3a0:	83 81       	ldd	r24, Z+3	; 0x03
 3a2:	81 ff       	sbrs	r24, 1
 3a4:	bf c1       	rjmp	.+894    	; 0x724 <__LOCK_REGION_LENGTH__+0x324>
 3a6:	ce 01       	movw	r24, r28
 3a8:	01 96       	adiw	r24, 0x01	; 1
 3aa:	3c 01       	movw	r6, r24
 3ac:	f6 01       	movw	r30, r12
 3ae:	93 81       	ldd	r25, Z+3	; 0x03
 3b0:	f7 01       	movw	r30, r14
 3b2:	93 fd       	sbrc	r25, 3
 3b4:	85 91       	lpm	r24, Z+
 3b6:	93 ff       	sbrs	r25, 3
 3b8:	81 91       	ld	r24, Z+
 3ba:	7f 01       	movw	r14, r30
 3bc:	88 23       	and	r24, r24
 3be:	09 f4       	brne	.+2      	; 0x3c2 <vfprintf+0x38>
 3c0:	ad c1       	rjmp	.+858    	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
 3c2:	85 32       	cpi	r24, 0x25	; 37
 3c4:	39 f4       	brne	.+14     	; 0x3d4 <vfprintf+0x4a>
 3c6:	93 fd       	sbrc	r25, 3
 3c8:	85 91       	lpm	r24, Z+
 3ca:	93 ff       	sbrs	r25, 3
 3cc:	81 91       	ld	r24, Z+
 3ce:	7f 01       	movw	r14, r30
 3d0:	85 32       	cpi	r24, 0x25	; 37
 3d2:	21 f4       	brne	.+8      	; 0x3dc <vfprintf+0x52>
 3d4:	b6 01       	movw	r22, r12
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	c0 d1       	rcall	.+896    	; 0x75a <fputc>
 3da:	e8 cf       	rjmp	.-48     	; 0x3ac <vfprintf+0x22>
 3dc:	91 2c       	mov	r9, r1
 3de:	21 2c       	mov	r2, r1
 3e0:	31 2c       	mov	r3, r1
 3e2:	ff e1       	ldi	r31, 0x1F	; 31
 3e4:	f3 15       	cp	r31, r3
 3e6:	d8 f0       	brcs	.+54     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 3e8:	8b 32       	cpi	r24, 0x2B	; 43
 3ea:	79 f0       	breq	.+30     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3ec:	38 f4       	brcc	.+14     	; 0x3fc <vfprintf+0x72>
 3ee:	80 32       	cpi	r24, 0x20	; 32
 3f0:	79 f0       	breq	.+30     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3f2:	83 32       	cpi	r24, 0x23	; 35
 3f4:	a1 f4       	brne	.+40     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 3f6:	23 2d       	mov	r18, r3
 3f8:	20 61       	ori	r18, 0x10	; 16
 3fa:	1d c0       	rjmp	.+58     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 3fc:	8d 32       	cpi	r24, 0x2D	; 45
 3fe:	61 f0       	breq	.+24     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 400:	80 33       	cpi	r24, 0x30	; 48
 402:	69 f4       	brne	.+26     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 404:	23 2d       	mov	r18, r3
 406:	21 60       	ori	r18, 0x01	; 1
 408:	16 c0       	rjmp	.+44     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 40a:	83 2d       	mov	r24, r3
 40c:	82 60       	ori	r24, 0x02	; 2
 40e:	38 2e       	mov	r3, r24
 410:	e3 2d       	mov	r30, r3
 412:	e4 60       	ori	r30, 0x04	; 4
 414:	3e 2e       	mov	r3, r30
 416:	2a c0       	rjmp	.+84     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 418:	f3 2d       	mov	r31, r3
 41a:	f8 60       	ori	r31, 0x08	; 8
 41c:	1d c0       	rjmp	.+58     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 41e:	37 fc       	sbrc	r3, 7
 420:	2d c0       	rjmp	.+90     	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 422:	20 ed       	ldi	r18, 0xD0	; 208
 424:	28 0f       	add	r18, r24
 426:	2a 30       	cpi	r18, 0x0A	; 10
 428:	40 f0       	brcs	.+16     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 42a:	8e 32       	cpi	r24, 0x2E	; 46
 42c:	b9 f4       	brne	.+46     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 42e:	36 fc       	sbrc	r3, 6
 430:	75 c1       	rjmp	.+746    	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
 432:	23 2d       	mov	r18, r3
 434:	20 64       	ori	r18, 0x40	; 64
 436:	32 2e       	mov	r3, r18
 438:	19 c0       	rjmp	.+50     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 43a:	36 fe       	sbrs	r3, 6
 43c:	06 c0       	rjmp	.+12     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 43e:	8a e0       	ldi	r24, 0x0A	; 10
 440:	98 9e       	mul	r9, r24
 442:	20 0d       	add	r18, r0
 444:	11 24       	eor	r1, r1
 446:	92 2e       	mov	r9, r18
 448:	11 c0       	rjmp	.+34     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 44a:	ea e0       	ldi	r30, 0x0A	; 10
 44c:	2e 9e       	mul	r2, r30
 44e:	20 0d       	add	r18, r0
 450:	11 24       	eor	r1, r1
 452:	22 2e       	mov	r2, r18
 454:	f3 2d       	mov	r31, r3
 456:	f0 62       	ori	r31, 0x20	; 32
 458:	3f 2e       	mov	r3, r31
 45a:	08 c0       	rjmp	.+16     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 45c:	8c 36       	cpi	r24, 0x6C	; 108
 45e:	21 f4       	brne	.+8      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 460:	83 2d       	mov	r24, r3
 462:	80 68       	ori	r24, 0x80	; 128
 464:	38 2e       	mov	r3, r24
 466:	02 c0       	rjmp	.+4      	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 468:	88 36       	cpi	r24, 0x68	; 104
 46a:	41 f4       	brne	.+16     	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 46c:	f7 01       	movw	r30, r14
 46e:	93 fd       	sbrc	r25, 3
 470:	85 91       	lpm	r24, Z+
 472:	93 ff       	sbrs	r25, 3
 474:	81 91       	ld	r24, Z+
 476:	7f 01       	movw	r14, r30
 478:	81 11       	cpse	r24, r1
 47a:	b3 cf       	rjmp	.-154    	; 0x3e2 <vfprintf+0x58>
 47c:	98 2f       	mov	r25, r24
 47e:	9f 7d       	andi	r25, 0xDF	; 223
 480:	95 54       	subi	r25, 0x45	; 69
 482:	93 30       	cpi	r25, 0x03	; 3
 484:	28 f4       	brcc	.+10     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 486:	0c 5f       	subi	r16, 0xFC	; 252
 488:	1f 4f       	sbci	r17, 0xFF	; 255
 48a:	9f e3       	ldi	r25, 0x3F	; 63
 48c:	99 83       	std	Y+1, r25	; 0x01
 48e:	0d c0       	rjmp	.+26     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 490:	83 36       	cpi	r24, 0x63	; 99
 492:	31 f0       	breq	.+12     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 494:	83 37       	cpi	r24, 0x73	; 115
 496:	71 f0       	breq	.+28     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 498:	83 35       	cpi	r24, 0x53	; 83
 49a:	09 f0       	breq	.+2      	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 49c:	55 c0       	rjmp	.+170    	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
 49e:	20 c0       	rjmp	.+64     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4a0:	f8 01       	movw	r30, r16
 4a2:	80 81       	ld	r24, Z
 4a4:	89 83       	std	Y+1, r24	; 0x01
 4a6:	0e 5f       	subi	r16, 0xFE	; 254
 4a8:	1f 4f       	sbci	r17, 0xFF	; 255
 4aa:	88 24       	eor	r8, r8
 4ac:	83 94       	inc	r8
 4ae:	91 2c       	mov	r9, r1
 4b0:	53 01       	movw	r10, r6
 4b2:	12 c0       	rjmp	.+36     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4b4:	28 01       	movw	r4, r16
 4b6:	f2 e0       	ldi	r31, 0x02	; 2
 4b8:	4f 0e       	add	r4, r31
 4ba:	51 1c       	adc	r5, r1
 4bc:	f8 01       	movw	r30, r16
 4be:	a0 80       	ld	r10, Z
 4c0:	b1 80       	ldd	r11, Z+1	; 0x01
 4c2:	36 fe       	sbrs	r3, 6
 4c4:	03 c0       	rjmp	.+6      	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 4c6:	69 2d       	mov	r22, r9
 4c8:	70 e0       	ldi	r23, 0x00	; 0
 4ca:	02 c0       	rjmp	.+4      	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4cc:	6f ef       	ldi	r22, 0xFF	; 255
 4ce:	7f ef       	ldi	r23, 0xFF	; 255
 4d0:	c5 01       	movw	r24, r10
 4d2:	38 d1       	rcall	.+624    	; 0x744 <strnlen>
 4d4:	4c 01       	movw	r8, r24
 4d6:	82 01       	movw	r16, r4
 4d8:	f3 2d       	mov	r31, r3
 4da:	ff 77       	andi	r31, 0x7F	; 127
 4dc:	3f 2e       	mov	r3, r31
 4de:	15 c0       	rjmp	.+42     	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 4e0:	28 01       	movw	r4, r16
 4e2:	22 e0       	ldi	r18, 0x02	; 2
 4e4:	42 0e       	add	r4, r18
 4e6:	51 1c       	adc	r5, r1
 4e8:	f8 01       	movw	r30, r16
 4ea:	a0 80       	ld	r10, Z
 4ec:	b1 80       	ldd	r11, Z+1	; 0x01
 4ee:	36 fe       	sbrs	r3, 6
 4f0:	03 c0       	rjmp	.+6      	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 4f2:	69 2d       	mov	r22, r9
 4f4:	70 e0       	ldi	r23, 0x00	; 0
 4f6:	02 c0       	rjmp	.+4      	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4f8:	6f ef       	ldi	r22, 0xFF	; 255
 4fa:	7f ef       	ldi	r23, 0xFF	; 255
 4fc:	c5 01       	movw	r24, r10
 4fe:	17 d1       	rcall	.+558    	; 0x72e <strnlen_P>
 500:	4c 01       	movw	r8, r24
 502:	f3 2d       	mov	r31, r3
 504:	f0 68       	ori	r31, 0x80	; 128
 506:	3f 2e       	mov	r3, r31
 508:	82 01       	movw	r16, r4
 50a:	33 fc       	sbrc	r3, 3
 50c:	19 c0       	rjmp	.+50     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 50e:	82 2d       	mov	r24, r2
 510:	90 e0       	ldi	r25, 0x00	; 0
 512:	88 16       	cp	r8, r24
 514:	99 06       	cpc	r9, r25
 516:	a0 f4       	brcc	.+40     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 518:	b6 01       	movw	r22, r12
 51a:	80 e2       	ldi	r24, 0x20	; 32
 51c:	90 e0       	ldi	r25, 0x00	; 0
 51e:	1d d1       	rcall	.+570    	; 0x75a <fputc>
 520:	2a 94       	dec	r2
 522:	f5 cf       	rjmp	.-22     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 524:	f5 01       	movw	r30, r10
 526:	37 fc       	sbrc	r3, 7
 528:	85 91       	lpm	r24, Z+
 52a:	37 fe       	sbrs	r3, 7
 52c:	81 91       	ld	r24, Z+
 52e:	5f 01       	movw	r10, r30
 530:	b6 01       	movw	r22, r12
 532:	90 e0       	ldi	r25, 0x00	; 0
 534:	12 d1       	rcall	.+548    	; 0x75a <fputc>
 536:	21 10       	cpse	r2, r1
 538:	2a 94       	dec	r2
 53a:	21 e0       	ldi	r18, 0x01	; 1
 53c:	82 1a       	sub	r8, r18
 53e:	91 08       	sbc	r9, r1
 540:	81 14       	cp	r8, r1
 542:	91 04       	cpc	r9, r1
 544:	79 f7       	brne	.-34     	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 546:	e1 c0       	rjmp	.+450    	; 0x70a <__LOCK_REGION_LENGTH__+0x30a>
 548:	84 36       	cpi	r24, 0x64	; 100
 54a:	11 f0       	breq	.+4      	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
 54c:	89 36       	cpi	r24, 0x69	; 105
 54e:	39 f5       	brne	.+78     	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 550:	f8 01       	movw	r30, r16
 552:	37 fe       	sbrs	r3, 7
 554:	07 c0       	rjmp	.+14     	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 556:	60 81       	ld	r22, Z
 558:	71 81       	ldd	r23, Z+1	; 0x01
 55a:	82 81       	ldd	r24, Z+2	; 0x02
 55c:	93 81       	ldd	r25, Z+3	; 0x03
 55e:	0c 5f       	subi	r16, 0xFC	; 252
 560:	1f 4f       	sbci	r17, 0xFF	; 255
 562:	08 c0       	rjmp	.+16     	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
 564:	60 81       	ld	r22, Z
 566:	71 81       	ldd	r23, Z+1	; 0x01
 568:	07 2e       	mov	r0, r23
 56a:	00 0c       	add	r0, r0
 56c:	88 0b       	sbc	r24, r24
 56e:	99 0b       	sbc	r25, r25
 570:	0e 5f       	subi	r16, 0xFE	; 254
 572:	1f 4f       	sbci	r17, 0xFF	; 255
 574:	f3 2d       	mov	r31, r3
 576:	ff 76       	andi	r31, 0x6F	; 111
 578:	3f 2e       	mov	r3, r31
 57a:	97 ff       	sbrs	r25, 7
 57c:	09 c0       	rjmp	.+18     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 57e:	90 95       	com	r25
 580:	80 95       	com	r24
 582:	70 95       	com	r23
 584:	61 95       	neg	r22
 586:	7f 4f       	sbci	r23, 0xFF	; 255
 588:	8f 4f       	sbci	r24, 0xFF	; 255
 58a:	9f 4f       	sbci	r25, 0xFF	; 255
 58c:	f0 68       	ori	r31, 0x80	; 128
 58e:	3f 2e       	mov	r3, r31
 590:	2a e0       	ldi	r18, 0x0A	; 10
 592:	30 e0       	ldi	r19, 0x00	; 0
 594:	a3 01       	movw	r20, r6
 596:	1d d1       	rcall	.+570    	; 0x7d2 <__ultoa_invert>
 598:	88 2e       	mov	r8, r24
 59a:	86 18       	sub	r8, r6
 59c:	44 c0       	rjmp	.+136    	; 0x626 <__LOCK_REGION_LENGTH__+0x226>
 59e:	85 37       	cpi	r24, 0x75	; 117
 5a0:	31 f4       	brne	.+12     	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 5a2:	23 2d       	mov	r18, r3
 5a4:	2f 7e       	andi	r18, 0xEF	; 239
 5a6:	b2 2e       	mov	r11, r18
 5a8:	2a e0       	ldi	r18, 0x0A	; 10
 5aa:	30 e0       	ldi	r19, 0x00	; 0
 5ac:	25 c0       	rjmp	.+74     	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
 5ae:	93 2d       	mov	r25, r3
 5b0:	99 7f       	andi	r25, 0xF9	; 249
 5b2:	b9 2e       	mov	r11, r25
 5b4:	8f 36       	cpi	r24, 0x6F	; 111
 5b6:	c1 f0       	breq	.+48     	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5b8:	18 f4       	brcc	.+6      	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 5ba:	88 35       	cpi	r24, 0x58	; 88
 5bc:	79 f0       	breq	.+30     	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
 5be:	ae c0       	rjmp	.+348    	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
 5c0:	80 37       	cpi	r24, 0x70	; 112
 5c2:	19 f0       	breq	.+6      	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5c4:	88 37       	cpi	r24, 0x78	; 120
 5c6:	21 f0       	breq	.+8      	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5c8:	a9 c0       	rjmp	.+338    	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
 5ca:	e9 2f       	mov	r30, r25
 5cc:	e0 61       	ori	r30, 0x10	; 16
 5ce:	be 2e       	mov	r11, r30
 5d0:	b4 fe       	sbrs	r11, 4
 5d2:	0d c0       	rjmp	.+26     	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 5d4:	fb 2d       	mov	r31, r11
 5d6:	f4 60       	ori	r31, 0x04	; 4
 5d8:	bf 2e       	mov	r11, r31
 5da:	09 c0       	rjmp	.+18     	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 5dc:	34 fe       	sbrs	r3, 4
 5de:	0a c0       	rjmp	.+20     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5e0:	29 2f       	mov	r18, r25
 5e2:	26 60       	ori	r18, 0x06	; 6
 5e4:	b2 2e       	mov	r11, r18
 5e6:	06 c0       	rjmp	.+12     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5e8:	28 e0       	ldi	r18, 0x08	; 8
 5ea:	30 e0       	ldi	r19, 0x00	; 0
 5ec:	05 c0       	rjmp	.+10     	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
 5ee:	20 e1       	ldi	r18, 0x10	; 16
 5f0:	30 e0       	ldi	r19, 0x00	; 0
 5f2:	02 c0       	rjmp	.+4      	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
 5f4:	20 e1       	ldi	r18, 0x10	; 16
 5f6:	32 e0       	ldi	r19, 0x02	; 2
 5f8:	f8 01       	movw	r30, r16
 5fa:	b7 fe       	sbrs	r11, 7
 5fc:	07 c0       	rjmp	.+14     	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 5fe:	60 81       	ld	r22, Z
 600:	71 81       	ldd	r23, Z+1	; 0x01
 602:	82 81       	ldd	r24, Z+2	; 0x02
 604:	93 81       	ldd	r25, Z+3	; 0x03
 606:	0c 5f       	subi	r16, 0xFC	; 252
 608:	1f 4f       	sbci	r17, 0xFF	; 255
 60a:	06 c0       	rjmp	.+12     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 60c:	60 81       	ld	r22, Z
 60e:	71 81       	ldd	r23, Z+1	; 0x01
 610:	80 e0       	ldi	r24, 0x00	; 0
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	0e 5f       	subi	r16, 0xFE	; 254
 616:	1f 4f       	sbci	r17, 0xFF	; 255
 618:	a3 01       	movw	r20, r6
 61a:	db d0       	rcall	.+438    	; 0x7d2 <__ultoa_invert>
 61c:	88 2e       	mov	r8, r24
 61e:	86 18       	sub	r8, r6
 620:	fb 2d       	mov	r31, r11
 622:	ff 77       	andi	r31, 0x7F	; 127
 624:	3f 2e       	mov	r3, r31
 626:	36 fe       	sbrs	r3, 6
 628:	0d c0       	rjmp	.+26     	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
 62a:	23 2d       	mov	r18, r3
 62c:	2e 7f       	andi	r18, 0xFE	; 254
 62e:	a2 2e       	mov	r10, r18
 630:	89 14       	cp	r8, r9
 632:	58 f4       	brcc	.+22     	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
 634:	34 fe       	sbrs	r3, 4
 636:	0b c0       	rjmp	.+22     	; 0x64e <__LOCK_REGION_LENGTH__+0x24e>
 638:	32 fc       	sbrc	r3, 2
 63a:	09 c0       	rjmp	.+18     	; 0x64e <__LOCK_REGION_LENGTH__+0x24e>
 63c:	83 2d       	mov	r24, r3
 63e:	8e 7e       	andi	r24, 0xEE	; 238
 640:	a8 2e       	mov	r10, r24
 642:	05 c0       	rjmp	.+10     	; 0x64e <__LOCK_REGION_LENGTH__+0x24e>
 644:	b8 2c       	mov	r11, r8
 646:	a3 2c       	mov	r10, r3
 648:	03 c0       	rjmp	.+6      	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
 64a:	b8 2c       	mov	r11, r8
 64c:	01 c0       	rjmp	.+2      	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
 64e:	b9 2c       	mov	r11, r9
 650:	a4 fe       	sbrs	r10, 4
 652:	0f c0       	rjmp	.+30     	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 654:	fe 01       	movw	r30, r28
 656:	e8 0d       	add	r30, r8
 658:	f1 1d       	adc	r31, r1
 65a:	80 81       	ld	r24, Z
 65c:	80 33       	cpi	r24, 0x30	; 48
 65e:	21 f4       	brne	.+8      	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 660:	9a 2d       	mov	r25, r10
 662:	99 7e       	andi	r25, 0xE9	; 233
 664:	a9 2e       	mov	r10, r25
 666:	09 c0       	rjmp	.+18     	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
 668:	a2 fe       	sbrs	r10, 2
 66a:	06 c0       	rjmp	.+12     	; 0x678 <__LOCK_REGION_LENGTH__+0x278>
 66c:	b3 94       	inc	r11
 66e:	b3 94       	inc	r11
 670:	04 c0       	rjmp	.+8      	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
 672:	8a 2d       	mov	r24, r10
 674:	86 78       	andi	r24, 0x86	; 134
 676:	09 f0       	breq	.+2      	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
 678:	b3 94       	inc	r11
 67a:	a3 fc       	sbrc	r10, 3
 67c:	10 c0       	rjmp	.+32     	; 0x69e <__LOCK_REGION_LENGTH__+0x29e>
 67e:	a0 fe       	sbrs	r10, 0
 680:	06 c0       	rjmp	.+12     	; 0x68e <__LOCK_REGION_LENGTH__+0x28e>
 682:	b2 14       	cp	r11, r2
 684:	80 f4       	brcc	.+32     	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 686:	28 0c       	add	r2, r8
 688:	92 2c       	mov	r9, r2
 68a:	9b 18       	sub	r9, r11
 68c:	0d c0       	rjmp	.+26     	; 0x6a8 <__LOCK_REGION_LENGTH__+0x2a8>
 68e:	b2 14       	cp	r11, r2
 690:	58 f4       	brcc	.+22     	; 0x6a8 <__LOCK_REGION_LENGTH__+0x2a8>
 692:	b6 01       	movw	r22, r12
 694:	80 e2       	ldi	r24, 0x20	; 32
 696:	90 e0       	ldi	r25, 0x00	; 0
 698:	60 d0       	rcall	.+192    	; 0x75a <fputc>
 69a:	b3 94       	inc	r11
 69c:	f8 cf       	rjmp	.-16     	; 0x68e <__LOCK_REGION_LENGTH__+0x28e>
 69e:	b2 14       	cp	r11, r2
 6a0:	18 f4       	brcc	.+6      	; 0x6a8 <__LOCK_REGION_LENGTH__+0x2a8>
 6a2:	2b 18       	sub	r2, r11
 6a4:	02 c0       	rjmp	.+4      	; 0x6aa <__LOCK_REGION_LENGTH__+0x2aa>
 6a6:	98 2c       	mov	r9, r8
 6a8:	21 2c       	mov	r2, r1
 6aa:	a4 fe       	sbrs	r10, 4
 6ac:	0f c0       	rjmp	.+30     	; 0x6cc <__LOCK_REGION_LENGTH__+0x2cc>
 6ae:	b6 01       	movw	r22, r12
 6b0:	80 e3       	ldi	r24, 0x30	; 48
 6b2:	90 e0       	ldi	r25, 0x00	; 0
 6b4:	52 d0       	rcall	.+164    	; 0x75a <fputc>
 6b6:	a2 fe       	sbrs	r10, 2
 6b8:	16 c0       	rjmp	.+44     	; 0x6e6 <__LOCK_REGION_LENGTH__+0x2e6>
 6ba:	a1 fc       	sbrc	r10, 1
 6bc:	03 c0       	rjmp	.+6      	; 0x6c4 <__LOCK_REGION_LENGTH__+0x2c4>
 6be:	88 e7       	ldi	r24, 0x78	; 120
 6c0:	90 e0       	ldi	r25, 0x00	; 0
 6c2:	02 c0       	rjmp	.+4      	; 0x6c8 <__LOCK_REGION_LENGTH__+0x2c8>
 6c4:	88 e5       	ldi	r24, 0x58	; 88
 6c6:	90 e0       	ldi	r25, 0x00	; 0
 6c8:	b6 01       	movw	r22, r12
 6ca:	0c c0       	rjmp	.+24     	; 0x6e4 <__LOCK_REGION_LENGTH__+0x2e4>
 6cc:	8a 2d       	mov	r24, r10
 6ce:	86 78       	andi	r24, 0x86	; 134
 6d0:	51 f0       	breq	.+20     	; 0x6e6 <__LOCK_REGION_LENGTH__+0x2e6>
 6d2:	a1 fe       	sbrs	r10, 1
 6d4:	02 c0       	rjmp	.+4      	; 0x6da <__LOCK_REGION_LENGTH__+0x2da>
 6d6:	8b e2       	ldi	r24, 0x2B	; 43
 6d8:	01 c0       	rjmp	.+2      	; 0x6dc <__LOCK_REGION_LENGTH__+0x2dc>
 6da:	80 e2       	ldi	r24, 0x20	; 32
 6dc:	a7 fc       	sbrc	r10, 7
 6de:	8d e2       	ldi	r24, 0x2D	; 45
 6e0:	b6 01       	movw	r22, r12
 6e2:	90 e0       	ldi	r25, 0x00	; 0
 6e4:	3a d0       	rcall	.+116    	; 0x75a <fputc>
 6e6:	89 14       	cp	r8, r9
 6e8:	30 f4       	brcc	.+12     	; 0x6f6 <__LOCK_REGION_LENGTH__+0x2f6>
 6ea:	b6 01       	movw	r22, r12
 6ec:	80 e3       	ldi	r24, 0x30	; 48
 6ee:	90 e0       	ldi	r25, 0x00	; 0
 6f0:	34 d0       	rcall	.+104    	; 0x75a <fputc>
 6f2:	9a 94       	dec	r9
 6f4:	f8 cf       	rjmp	.-16     	; 0x6e6 <__LOCK_REGION_LENGTH__+0x2e6>
 6f6:	8a 94       	dec	r8
 6f8:	f3 01       	movw	r30, r6
 6fa:	e8 0d       	add	r30, r8
 6fc:	f1 1d       	adc	r31, r1
 6fe:	80 81       	ld	r24, Z
 700:	b6 01       	movw	r22, r12
 702:	90 e0       	ldi	r25, 0x00	; 0
 704:	2a d0       	rcall	.+84     	; 0x75a <fputc>
 706:	81 10       	cpse	r8, r1
 708:	f6 cf       	rjmp	.-20     	; 0x6f6 <__LOCK_REGION_LENGTH__+0x2f6>
 70a:	22 20       	and	r2, r2
 70c:	09 f4       	brne	.+2      	; 0x710 <__LOCK_REGION_LENGTH__+0x310>
 70e:	4e ce       	rjmp	.-868    	; 0x3ac <vfprintf+0x22>
 710:	b6 01       	movw	r22, r12
 712:	80 e2       	ldi	r24, 0x20	; 32
 714:	90 e0       	ldi	r25, 0x00	; 0
 716:	21 d0       	rcall	.+66     	; 0x75a <fputc>
 718:	2a 94       	dec	r2
 71a:	f7 cf       	rjmp	.-18     	; 0x70a <__LOCK_REGION_LENGTH__+0x30a>
 71c:	f6 01       	movw	r30, r12
 71e:	86 81       	ldd	r24, Z+6	; 0x06
 720:	97 81       	ldd	r25, Z+7	; 0x07
 722:	02 c0       	rjmp	.+4      	; 0x728 <__LOCK_REGION_LENGTH__+0x328>
 724:	8f ef       	ldi	r24, 0xFF	; 255
 726:	9f ef       	ldi	r25, 0xFF	; 255
 728:	2b 96       	adiw	r28, 0x0b	; 11
 72a:	e2 e1       	ldi	r30, 0x12	; 18
 72c:	c9 c0       	rjmp	.+402    	; 0x8c0 <__epilogue_restores__>

0000072e <strnlen_P>:
 72e:	fc 01       	movw	r30, r24
 730:	05 90       	lpm	r0, Z+
 732:	61 50       	subi	r22, 0x01	; 1
 734:	70 40       	sbci	r23, 0x00	; 0
 736:	01 10       	cpse	r0, r1
 738:	d8 f7       	brcc	.-10     	; 0x730 <strnlen_P+0x2>
 73a:	80 95       	com	r24
 73c:	90 95       	com	r25
 73e:	8e 0f       	add	r24, r30
 740:	9f 1f       	adc	r25, r31
 742:	08 95       	ret

00000744 <strnlen>:
 744:	fc 01       	movw	r30, r24
 746:	61 50       	subi	r22, 0x01	; 1
 748:	70 40       	sbci	r23, 0x00	; 0
 74a:	01 90       	ld	r0, Z+
 74c:	01 10       	cpse	r0, r1
 74e:	d8 f7       	brcc	.-10     	; 0x746 <strnlen+0x2>
 750:	80 95       	com	r24
 752:	90 95       	com	r25
 754:	8e 0f       	add	r24, r30
 756:	9f 1f       	adc	r25, r31
 758:	08 95       	ret

0000075a <fputc>:
 75a:	0f 93       	push	r16
 75c:	1f 93       	push	r17
 75e:	cf 93       	push	r28
 760:	df 93       	push	r29
 762:	fb 01       	movw	r30, r22
 764:	23 81       	ldd	r18, Z+3	; 0x03
 766:	21 fd       	sbrc	r18, 1
 768:	03 c0       	rjmp	.+6      	; 0x770 <fputc+0x16>
 76a:	8f ef       	ldi	r24, 0xFF	; 255
 76c:	9f ef       	ldi	r25, 0xFF	; 255
 76e:	2c c0       	rjmp	.+88     	; 0x7c8 <fputc+0x6e>
 770:	22 ff       	sbrs	r18, 2
 772:	16 c0       	rjmp	.+44     	; 0x7a0 <fputc+0x46>
 774:	46 81       	ldd	r20, Z+6	; 0x06
 776:	57 81       	ldd	r21, Z+7	; 0x07
 778:	24 81       	ldd	r18, Z+4	; 0x04
 77a:	35 81       	ldd	r19, Z+5	; 0x05
 77c:	42 17       	cp	r20, r18
 77e:	53 07       	cpc	r21, r19
 780:	44 f4       	brge	.+16     	; 0x792 <fputc+0x38>
 782:	a0 81       	ld	r26, Z
 784:	b1 81       	ldd	r27, Z+1	; 0x01
 786:	9d 01       	movw	r18, r26
 788:	2f 5f       	subi	r18, 0xFF	; 255
 78a:	3f 4f       	sbci	r19, 0xFF	; 255
 78c:	20 83       	st	Z, r18
 78e:	31 83       	std	Z+1, r19	; 0x01
 790:	8c 93       	st	X, r24
 792:	26 81       	ldd	r18, Z+6	; 0x06
 794:	37 81       	ldd	r19, Z+7	; 0x07
 796:	2f 5f       	subi	r18, 0xFF	; 255
 798:	3f 4f       	sbci	r19, 0xFF	; 255
 79a:	26 83       	std	Z+6, r18	; 0x06
 79c:	37 83       	std	Z+7, r19	; 0x07
 79e:	14 c0       	rjmp	.+40     	; 0x7c8 <fputc+0x6e>
 7a0:	8b 01       	movw	r16, r22
 7a2:	ec 01       	movw	r28, r24
 7a4:	fb 01       	movw	r30, r22
 7a6:	00 84       	ldd	r0, Z+8	; 0x08
 7a8:	f1 85       	ldd	r31, Z+9	; 0x09
 7aa:	e0 2d       	mov	r30, r0
 7ac:	09 95       	icall
 7ae:	89 2b       	or	r24, r25
 7b0:	e1 f6       	brne	.-72     	; 0x76a <fputc+0x10>
 7b2:	d8 01       	movw	r26, r16
 7b4:	16 96       	adiw	r26, 0x06	; 6
 7b6:	8d 91       	ld	r24, X+
 7b8:	9c 91       	ld	r25, X
 7ba:	17 97       	sbiw	r26, 0x07	; 7
 7bc:	01 96       	adiw	r24, 0x01	; 1
 7be:	16 96       	adiw	r26, 0x06	; 6
 7c0:	8d 93       	st	X+, r24
 7c2:	9c 93       	st	X, r25
 7c4:	17 97       	sbiw	r26, 0x07	; 7
 7c6:	ce 01       	movw	r24, r28
 7c8:	df 91       	pop	r29
 7ca:	cf 91       	pop	r28
 7cc:	1f 91       	pop	r17
 7ce:	0f 91       	pop	r16
 7d0:	08 95       	ret

000007d2 <__ultoa_invert>:
 7d2:	fa 01       	movw	r30, r20
 7d4:	aa 27       	eor	r26, r26
 7d6:	28 30       	cpi	r18, 0x08	; 8
 7d8:	51 f1       	breq	.+84     	; 0x82e <__ultoa_invert+0x5c>
 7da:	20 31       	cpi	r18, 0x10	; 16
 7dc:	81 f1       	breq	.+96     	; 0x83e <__ultoa_invert+0x6c>
 7de:	e8 94       	clt
 7e0:	6f 93       	push	r22
 7e2:	6e 7f       	andi	r22, 0xFE	; 254
 7e4:	6e 5f       	subi	r22, 0xFE	; 254
 7e6:	7f 4f       	sbci	r23, 0xFF	; 255
 7e8:	8f 4f       	sbci	r24, 0xFF	; 255
 7ea:	9f 4f       	sbci	r25, 0xFF	; 255
 7ec:	af 4f       	sbci	r26, 0xFF	; 255
 7ee:	b1 e0       	ldi	r27, 0x01	; 1
 7f0:	3e d0       	rcall	.+124    	; 0x86e <__ultoa_invert+0x9c>
 7f2:	b4 e0       	ldi	r27, 0x04	; 4
 7f4:	3c d0       	rcall	.+120    	; 0x86e <__ultoa_invert+0x9c>
 7f6:	67 0f       	add	r22, r23
 7f8:	78 1f       	adc	r23, r24
 7fa:	89 1f       	adc	r24, r25
 7fc:	9a 1f       	adc	r25, r26
 7fe:	a1 1d       	adc	r26, r1
 800:	68 0f       	add	r22, r24
 802:	79 1f       	adc	r23, r25
 804:	8a 1f       	adc	r24, r26
 806:	91 1d       	adc	r25, r1
 808:	a1 1d       	adc	r26, r1
 80a:	6a 0f       	add	r22, r26
 80c:	71 1d       	adc	r23, r1
 80e:	81 1d       	adc	r24, r1
 810:	91 1d       	adc	r25, r1
 812:	a1 1d       	adc	r26, r1
 814:	20 d0       	rcall	.+64     	; 0x856 <__ultoa_invert+0x84>
 816:	09 f4       	brne	.+2      	; 0x81a <__ultoa_invert+0x48>
 818:	68 94       	set
 81a:	3f 91       	pop	r19
 81c:	2a e0       	ldi	r18, 0x0A	; 10
 81e:	26 9f       	mul	r18, r22
 820:	11 24       	eor	r1, r1
 822:	30 19       	sub	r19, r0
 824:	30 5d       	subi	r19, 0xD0	; 208
 826:	31 93       	st	Z+, r19
 828:	de f6       	brtc	.-74     	; 0x7e0 <__ultoa_invert+0xe>
 82a:	cf 01       	movw	r24, r30
 82c:	08 95       	ret
 82e:	46 2f       	mov	r20, r22
 830:	47 70       	andi	r20, 0x07	; 7
 832:	40 5d       	subi	r20, 0xD0	; 208
 834:	41 93       	st	Z+, r20
 836:	b3 e0       	ldi	r27, 0x03	; 3
 838:	0f d0       	rcall	.+30     	; 0x858 <__ultoa_invert+0x86>
 83a:	c9 f7       	brne	.-14     	; 0x82e <__ultoa_invert+0x5c>
 83c:	f6 cf       	rjmp	.-20     	; 0x82a <__ultoa_invert+0x58>
 83e:	46 2f       	mov	r20, r22
 840:	4f 70       	andi	r20, 0x0F	; 15
 842:	40 5d       	subi	r20, 0xD0	; 208
 844:	4a 33       	cpi	r20, 0x3A	; 58
 846:	18 f0       	brcs	.+6      	; 0x84e <__ultoa_invert+0x7c>
 848:	49 5d       	subi	r20, 0xD9	; 217
 84a:	31 fd       	sbrc	r19, 1
 84c:	40 52       	subi	r20, 0x20	; 32
 84e:	41 93       	st	Z+, r20
 850:	02 d0       	rcall	.+4      	; 0x856 <__ultoa_invert+0x84>
 852:	a9 f7       	brne	.-22     	; 0x83e <__ultoa_invert+0x6c>
 854:	ea cf       	rjmp	.-44     	; 0x82a <__ultoa_invert+0x58>
 856:	b4 e0       	ldi	r27, 0x04	; 4
 858:	a6 95       	lsr	r26
 85a:	97 95       	ror	r25
 85c:	87 95       	ror	r24
 85e:	77 95       	ror	r23
 860:	67 95       	ror	r22
 862:	ba 95       	dec	r27
 864:	c9 f7       	brne	.-14     	; 0x858 <__ultoa_invert+0x86>
 866:	00 97       	sbiw	r24, 0x00	; 0
 868:	61 05       	cpc	r22, r1
 86a:	71 05       	cpc	r23, r1
 86c:	08 95       	ret
 86e:	9b 01       	movw	r18, r22
 870:	ac 01       	movw	r20, r24
 872:	0a 2e       	mov	r0, r26
 874:	06 94       	lsr	r0
 876:	57 95       	ror	r21
 878:	47 95       	ror	r20
 87a:	37 95       	ror	r19
 87c:	27 95       	ror	r18
 87e:	ba 95       	dec	r27
 880:	c9 f7       	brne	.-14     	; 0x874 <__ultoa_invert+0xa2>
 882:	62 0f       	add	r22, r18
 884:	73 1f       	adc	r23, r19
 886:	84 1f       	adc	r24, r20
 888:	95 1f       	adc	r25, r21
 88a:	a0 1d       	adc	r26, r0
 88c:	08 95       	ret

0000088e <__prologue_saves__>:
 88e:	2f 92       	push	r2
 890:	3f 92       	push	r3
 892:	4f 92       	push	r4
 894:	5f 92       	push	r5
 896:	6f 92       	push	r6
 898:	7f 92       	push	r7
 89a:	8f 92       	push	r8
 89c:	9f 92       	push	r9
 89e:	af 92       	push	r10
 8a0:	bf 92       	push	r11
 8a2:	cf 92       	push	r12
 8a4:	df 92       	push	r13
 8a6:	ef 92       	push	r14
 8a8:	ff 92       	push	r15
 8aa:	0f 93       	push	r16
 8ac:	1f 93       	push	r17
 8ae:	cf 93       	push	r28
 8b0:	df 93       	push	r29
 8b2:	cd b7       	in	r28, 0x3d	; 61
 8b4:	de b7       	in	r29, 0x3e	; 62
 8b6:	ca 1b       	sub	r28, r26
 8b8:	db 0b       	sbc	r29, r27
 8ba:	cd bf       	out	0x3d, r28	; 61
 8bc:	de bf       	out	0x3e, r29	; 62
 8be:	09 94       	ijmp

000008c0 <__epilogue_restores__>:
 8c0:	2a 88       	ldd	r2, Y+18	; 0x12
 8c2:	39 88       	ldd	r3, Y+17	; 0x11
 8c4:	48 88       	ldd	r4, Y+16	; 0x10
 8c6:	5f 84       	ldd	r5, Y+15	; 0x0f
 8c8:	6e 84       	ldd	r6, Y+14	; 0x0e
 8ca:	7d 84       	ldd	r7, Y+13	; 0x0d
 8cc:	8c 84       	ldd	r8, Y+12	; 0x0c
 8ce:	9b 84       	ldd	r9, Y+11	; 0x0b
 8d0:	aa 84       	ldd	r10, Y+10	; 0x0a
 8d2:	b9 84       	ldd	r11, Y+9	; 0x09
 8d4:	c8 84       	ldd	r12, Y+8	; 0x08
 8d6:	df 80       	ldd	r13, Y+7	; 0x07
 8d8:	ee 80       	ldd	r14, Y+6	; 0x06
 8da:	fd 80       	ldd	r15, Y+5	; 0x05
 8dc:	0c 81       	ldd	r16, Y+4	; 0x04
 8de:	1b 81       	ldd	r17, Y+3	; 0x03
 8e0:	aa 81       	ldd	r26, Y+2	; 0x02
 8e2:	b9 81       	ldd	r27, Y+1	; 0x01
 8e4:	ce 0f       	add	r28, r30
 8e6:	d1 1d       	adc	r29, r1
 8e8:	cd bf       	out	0x3d, r28	; 61
 8ea:	de bf       	out	0x3e, r29	; 62
 8ec:	ed 01       	movw	r28, r26
 8ee:	08 95       	ret

000008f0 <_exit>:
 8f0:	f8 94       	cli

000008f2 <__stop_program>:
 8f2:	ff cf       	rjmp	.-2      	; 0x8f2 <__stop_program>
