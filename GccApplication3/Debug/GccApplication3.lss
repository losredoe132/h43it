
GccApplication3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803f00  00803f00  000002b2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001fc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000022  000081fc  000001fc  00000290  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000007  00803f00  00803f00  000002b2  2**0
                  ALLOC
  4 .comment      00000030  00000000  00000000  000002b2  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002e4  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000068  00000000  00000000  00000320  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000241d  00000000  00000000  00000388  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001639  00000000  00000000  000027a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000003d8  00000000  00000000  00003dde  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  0000013c  00000000  00000000  000041b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00001200  00000000  00000000  000042f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000021a  00000000  00000000  000054f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000058  00000000  00000000  0000570e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	28 c0       	rjmp	.+80     	; 0x54 <__bad_interrupt>
   4:	27 c0       	rjmp	.+78     	; 0x54 <__bad_interrupt>
   6:	6b c0       	rjmp	.+214    	; 0xde <__vector_3>
   8:	25 c0       	rjmp	.+74     	; 0x54 <__bad_interrupt>
   a:	24 c0       	rjmp	.+72     	; 0x54 <__bad_interrupt>
   c:	23 c0       	rjmp	.+70     	; 0x54 <__bad_interrupt>
   e:	7f c0       	rjmp	.+254    	; 0x10e <__vector_7>
  10:	8d c0       	rjmp	.+282    	; 0x12c <__vector_8>
  12:	20 c0       	rjmp	.+64     	; 0x54 <__bad_interrupt>
  14:	1f c0       	rjmp	.+62     	; 0x54 <__bad_interrupt>
  16:	1e c0       	rjmp	.+60     	; 0x54 <__bad_interrupt>
  18:	1d c0       	rjmp	.+58     	; 0x54 <__bad_interrupt>
  1a:	ca c0       	rjmp	.+404    	; 0x1b0 <__vector_13>
  1c:	1b c0       	rjmp	.+54     	; 0x54 <__bad_interrupt>
  1e:	1a c0       	rjmp	.+52     	; 0x54 <__bad_interrupt>
  20:	19 c0       	rjmp	.+50     	; 0x54 <__bad_interrupt>
  22:	18 c0       	rjmp	.+48     	; 0x54 <__bad_interrupt>
  24:	17 c0       	rjmp	.+46     	; 0x54 <__bad_interrupt>
  26:	16 c0       	rjmp	.+44     	; 0x54 <__bad_interrupt>
  28:	15 c0       	rjmp	.+42     	; 0x54 <__bad_interrupt>
  2a:	14 c0       	rjmp	.+40     	; 0x54 <__bad_interrupt>
  2c:	13 c0       	rjmp	.+38     	; 0x54 <__bad_interrupt>
  2e:	12 c0       	rjmp	.+36     	; 0x54 <__bad_interrupt>
  30:	11 c0       	rjmp	.+34     	; 0x54 <__bad_interrupt>
  32:	10 c0       	rjmp	.+32     	; 0x54 <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	cd bf       	out	0x3d, r28	; 61
  3c:	df e3       	ldi	r29, 0x3F	; 63
  3e:	de bf       	out	0x3e, r29	; 62

00000040 <__do_clear_bss>:
  40:	2f e3       	ldi	r18, 0x3F	; 63
  42:	a0 e0       	ldi	r26, 0x00	; 0
  44:	bf e3       	ldi	r27, 0x3F	; 63
  46:	01 c0       	rjmp	.+2      	; 0x4a <.do_clear_bss_start>

00000048 <.do_clear_bss_loop>:
  48:	1d 92       	st	X+, r1

0000004a <.do_clear_bss_start>:
  4a:	a7 30       	cpi	r26, 0x07	; 7
  4c:	b2 07       	cpc	r27, r18
  4e:	e1 f7       	brne	.-8      	; 0x48 <.do_clear_bss_loop>
  50:	2d d0       	rcall	.+90     	; 0xac <main>
  52:	d2 c0       	rjmp	.+420    	; 0x1f8 <_exit>

00000054 <__bad_interrupt>:
  54:	d5 cf       	rjmp	.-86     	; 0x0 <__vectors>

00000056 <TCA0_init>:
}



void TCA0_init(int TCAdelay)
{
  56:	9c 01       	movw	r18, r24
	// enable overflow interrupt
	TCA0.SINGLE.INTCTRL = TCA_SINGLE_OVF_bm;
  58:	e0 e0       	ldi	r30, 0x00	; 0
  5a:	fa e0       	ldi	r31, 0x0A	; 10
  5c:	81 e0       	ldi	r24, 0x01	; 1
  5e:	82 87       	std	Z+10, r24	; 0x0a

	// set Normal mode
	TCA0.SINGLE.CTRLB = TCA_SINGLE_WGMODE_NORMAL_gc;
  60:	11 82       	std	Z+1, r1	; 0x01

	// disable event counting
	TCA0.SINGLE.EVCTRL &= ~(TCA_SINGLE_CNTEI_bm);
  62:	91 85       	ldd	r25, Z+9	; 0x09
  64:	9e 7f       	andi	r25, 0xFE	; 254
  66:	91 87       	std	Z+9, r25	; 0x09

	// set the period
	TCA0.SINGLE.PER = TCAdelay;
  68:	26 a3       	std	Z+38, r18	; 0x26
  6a:	37 a3       	std	Z+39, r19	; 0x27

	// set clock
	TCA0.SINGLE.CTRLA = TCA_SINGLE_CLKSEL_DIV1024_gc | TCA_SINGLE_ENABLE_bm;    /* source (sys_clk/8) +  start timer */
  6c:	8f e0       	ldi	r24, 0x0F	; 15
  6e:	80 83       	st	Z, r24
  70:	08 95       	ret

00000072 <TCB0_init>:
}

void TCB0_init (void)
{
	/* Load the Compare or Capture register with the timeout value*/
	TCB0.CCMP = TCB_CMP_EXAMPLE_VALUE;
  72:	e0 e4       	ldi	r30, 0x40	; 64
  74:	fa e0       	ldi	r31, 0x0A	; 10
  76:	8f ef       	ldi	r24, 0xFF	; 255
  78:	9f ef       	ldi	r25, 0xFF	; 255
  7a:	84 87       	std	Z+12, r24	; 0x0c
  7c:	95 87       	std	Z+13, r25	; 0x0d
	
	/* Enable TCB and set CLK_PER divider to 1 (No Prescaling) */
	TCB0.CTRLA = TCB_CLKSEL_CLKDIV1_gc | TCB_ENABLE_bm | TCB_RUNSTDBY_bm;
  7e:	81 e4       	ldi	r24, 0x41	; 65
  80:	80 83       	st	Z, r24
	
	/* Enable Capture or Timeout interrupt */
	TCB0.INTCTRL = TCB_CAPT_bm;
  82:	81 e0       	ldi	r24, 0x01	; 1
  84:	85 83       	std	Z+5, r24	; 0x05
  86:	08 95       	ret

00000088 <LEDOnById>:
}


void LEDOnById(int i){
	PORTA.OUT = port_a_b_outs[i][0];
  88:	88 0f       	add	r24, r24
  8a:	99 1f       	adc	r25, r25
  8c:	fc 01       	movw	r30, r24
  8e:	e4 50       	subi	r30, 0x04	; 4
  90:	fe 47       	sbci	r31, 0x7E	; 126
  92:	80 81       	ld	r24, Z
  94:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <port_a_b_outs+0x7f8208>
	PORTB.OUT= port_a_b_outs[i][1];
  98:	81 81       	ldd	r24, Z+1	; 0x01
  9a:	80 93 24 04 	sts	0x0424, r24	; 0x800424 <port_a_b_outs+0x7f8228>
  9e:	08 95       	ret

000000a0 <allLEDoff>:
}

void allLEDoff(){
	PORTA.OUT = port_a_b_outs[0][0];
  a0:	8f ef       	ldi	r24, 0xFF	; 255
  a2:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <port_a_b_outs+0x7f8208>
	PORTB.OUT= port_a_b_outs[0][1];
  a6:	10 92 24 04 	sts	0x0424, r1	; 0x800424 <port_a_b_outs+0x7f8228>
  aa:	08 95       	ret

000000ac <main>:

int main() {


	//RTCA_init(10); // set periodic RTC triggering "awakening" delay in seconds
	TCA0_init(1);
  ac:	81 e0       	ldi	r24, 0x01	; 1
  ae:	90 e0       	ldi	r25, 0x00	; 0
  b0:	d2 df       	rcall	.-92     	; 0x56 <TCA0_init>
	TCB0_init();
  b2:	df df       	rcall	.-66     	; 0x72 <TCB0_init>
	
	PORTA.DIRSET = 0b10111111;
  b4:	e0 e0       	ldi	r30, 0x00	; 0
  b6:	f4 e0       	ldi	r31, 0x04	; 4
  b8:	8f eb       	ldi	r24, 0xBF	; 191
  ba:	81 83       	std	Z+1, r24	; 0x01
	PORTB.DIRSET = 0b11111111;
  bc:	8f ef       	ldi	r24, 0xFF	; 255
  be:	80 93 21 04 	sts	0x0421, r24	; 0x800421 <port_a_b_outs+0x7f8225>

	// Button setup
	PORTA.PIN6CTRL = PORT_ISC_FALLING_gc | PORT_PULLUPEN_bm; // Enable pull-up resistor
  c2:	8b e0       	ldi	r24, 0x0B	; 11
  c4:	86 8b       	std	Z+22, r24	; 0x16

	x=1;
  c6:	81 e0       	ldi	r24, 0x01	; 1
  c8:	90 e0       	ldi	r25, 0x00	; 0
  ca:	80 93 03 3f 	sts	0x3F03, r24	; 0x803f03 <x>
  ce:	90 93 04 3f 	sts	0x3F04, r25	; 0x803f04 <x+0x1>
	i=0;
  d2:	10 92 05 3f 	sts	0x3F05, r1	; 0x803f05 <i>
  d6:	10 92 06 3f 	sts	0x3F06, r1	; 0x803f06 <i+0x1>

	sei(); // Set global interrupts
  da:	78 94       	sei
  dc:	ff cf       	rjmp	.-2      	; 0xdc <main+0x30>

000000de <__vector_3>:
// 		sleep_cpu();
	}


}
ISR(PORTA_PORT_vect) {
  de:	1f 92       	push	r1
  e0:	0f 92       	push	r0
  e2:	0f b6       	in	r0, 0x3f	; 63
  e4:	0f 92       	push	r0
  e6:	11 24       	eor	r1, r1
  e8:	8f 93       	push	r24
  ea:	ef 93       	push	r30
  ec:	ff 93       	push	r31
	manully_triggered = 1;
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	80 93 00 3f 	sts	0x3F00, r24	; 0x803f00 <__DATA_REGION_ORIGIN__>
	PORTA.INTFLAGS |= btn_pin; // Clear interrupt flag
  f4:	e0 e0       	ldi	r30, 0x00	; 0
  f6:	f4 e0       	ldi	r31, 0x04	; 4
  f8:	81 85       	ldd	r24, Z+9	; 0x09
  fa:	80 64       	ori	r24, 0x40	; 64
  fc:	81 87       	std	Z+9, r24	; 0x09
}
  fe:	ff 91       	pop	r31
 100:	ef 91       	pop	r30
 102:	8f 91       	pop	r24
 104:	0f 90       	pop	r0
 106:	0f be       	out	0x3f, r0	; 63
 108:	0f 90       	pop	r0
 10a:	1f 90       	pop	r1
 10c:	18 95       	reti

0000010e <__vector_7>:

ISR(RTC_PIT_vect)
{
 10e:	1f 92       	push	r1
 110:	0f 92       	push	r0
 112:	0f b6       	in	r0, 0x3f	; 63
 114:	0f 92       	push	r0
 116:	11 24       	eor	r1, r1
 118:	8f 93       	push	r24
	RTC.PITINTFLAGS = RTC_PI_bm;// Clear interrupt flag
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <port_a_b_outs+0x7f7f57>
}
 120:	8f 91       	pop	r24
 122:	0f 90       	pop	r0
 124:	0f be       	out	0x3f, r0	; 63
 126:	0f 90       	pop	r0
 128:	1f 90       	pop	r1
 12a:	18 95       	reti

0000012c <__vector_8>:

ISR(TCA0_OVF_vect)
{
 12c:	1f 92       	push	r1
 12e:	0f 92       	push	r0
 130:	0f b6       	in	r0, 0x3f	; 63
 132:	0f 92       	push	r0
 134:	11 24       	eor	r1, r1
 136:	2f 93       	push	r18
 138:	3f 93       	push	r19
 13a:	4f 93       	push	r20
 13c:	5f 93       	push	r21
 13e:	6f 93       	push	r22
 140:	7f 93       	push	r23
 142:	8f 93       	push	r24
 144:	9f 93       	push	r25
 146:	af 93       	push	r26
 148:	bf 93       	push	r27
 14a:	ef 93       	push	r30
 14c:	ff 93       	push	r31
	i++;
 14e:	80 91 05 3f 	lds	r24, 0x3F05	; 0x803f05 <i>
 152:	90 91 06 3f 	lds	r25, 0x3F06	; 0x803f06 <i+0x1>
 156:	01 96       	adiw	r24, 0x01	; 1
 158:	80 93 05 3f 	sts	0x3F05, r24	; 0x803f05 <i>
 15c:	90 93 06 3f 	sts	0x3F06, r25	; 0x803f06 <i+0x1>
	
	if (i<=x){LEDOnById(i);}
 160:	20 91 03 3f 	lds	r18, 0x3F03	; 0x803f03 <x>
 164:	30 91 04 3f 	lds	r19, 0x3F04	; 0x803f04 <x+0x1>
 168:	28 17       	cp	r18, r24
 16a:	39 07       	cpc	r19, r25
 16c:	14 f0       	brlt	.+4      	; 0x172 <__vector_8+0x46>
 16e:	8c df       	rcall	.-232    	; 0x88 <LEDOnById>
 170:	01 c0       	rjmp	.+2      	; 0x174 <__vector_8+0x48>
	else{allLEDoff();}
 172:	96 df       	rcall	.-212    	; 0xa0 <allLEDoff>
	
	if (i>16){i=0;}
 174:	80 91 05 3f 	lds	r24, 0x3F05	; 0x803f05 <i>
 178:	90 91 06 3f 	lds	r25, 0x3F06	; 0x803f06 <i+0x1>
 17c:	41 97       	sbiw	r24, 0x11	; 17
 17e:	24 f0       	brlt	.+8      	; 0x188 <__vector_8+0x5c>
 180:	10 92 05 3f 	sts	0x3F05, r1	; 0x803f05 <i>
 184:	10 92 06 3f 	sts	0x3F06, r1	; 0x803f06 <i+0x1>

	// The interrupt flag has to be cleared manually
	TCA0.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;
 188:	81 e0       	ldi	r24, 0x01	; 1
 18a:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <port_a_b_outs+0x7f880f>
}
 18e:	ff 91       	pop	r31
 190:	ef 91       	pop	r30
 192:	bf 91       	pop	r27
 194:	af 91       	pop	r26
 196:	9f 91       	pop	r25
 198:	8f 91       	pop	r24
 19a:	7f 91       	pop	r23
 19c:	6f 91       	pop	r22
 19e:	5f 91       	pop	r21
 1a0:	4f 91       	pop	r20
 1a2:	3f 91       	pop	r19
 1a4:	2f 91       	pop	r18
 1a6:	0f 90       	pop	r0
 1a8:	0f be       	out	0x3f, r0	; 63
 1aa:	0f 90       	pop	r0
 1ac:	1f 90       	pop	r1
 1ae:	18 95       	reti

000001b0 <__vector_13>:


ISR(TCB0_INT_vect)
{
 1b0:	1f 92       	push	r1
 1b2:	0f 92       	push	r0
 1b4:	0f b6       	in	r0, 0x3f	; 63
 1b6:	0f 92       	push	r0
 1b8:	11 24       	eor	r1, r1
 1ba:	8f 93       	push	r24
 1bc:	9f 93       	push	r25
	TCB0.INTFLAGS = TCB_CAPT_bm; /* Clear the interrupt flag */
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	80 93 46 0a 	sts	0x0A46, r24	; 0x800a46 <port_a_b_outs+0x7f884a>
x++;
 1c4:	80 91 03 3f 	lds	r24, 0x3F03	; 0x803f03 <x>
 1c8:	90 91 04 3f 	lds	r25, 0x3F04	; 0x803f04 <x+0x1>
 1cc:	01 96       	adiw	r24, 0x01	; 1
 1ce:	80 93 03 3f 	sts	0x3F03, r24	; 0x803f03 <x>
 1d2:	90 93 04 3f 	sts	0x3F04, r25	; 0x803f04 <x+0x1>
if(x>16){x=0;}
 1d6:	80 91 03 3f 	lds	r24, 0x3F03	; 0x803f03 <x>
 1da:	90 91 04 3f 	lds	r25, 0x3F04	; 0x803f04 <x+0x1>
 1de:	41 97       	sbiw	r24, 0x11	; 17
 1e0:	24 f0       	brlt	.+8      	; 0x1ea <__vector_13+0x3a>
 1e2:	10 92 03 3f 	sts	0x3F03, r1	; 0x803f03 <x>
 1e6:	10 92 04 3f 	sts	0x3F04, r1	; 0x803f04 <x+0x1>
 1ea:	9f 91       	pop	r25
 1ec:	8f 91       	pop	r24
 1ee:	0f 90       	pop	r0
 1f0:	0f be       	out	0x3f, r0	; 63
 1f2:	0f 90       	pop	r0
 1f4:	1f 90       	pop	r1
 1f6:	18 95       	reti

000001f8 <_exit>:
 1f8:	f8 94       	cli

000001fa <__stop_program>:
 1fa:	ff cf       	rjmp	.-2      	; 0x1fa <__stop_program>
