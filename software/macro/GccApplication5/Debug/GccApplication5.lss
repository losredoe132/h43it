
GccApplication5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00803e00  00000cad  00000d61  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b54  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000159  00008b54  00000b54  00000c08  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000015  00803e0e  00803e0e  00000d6f  2**0
                  ALLOC
  4 .comment      0000005c  00000000  00000000  00000d6f  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000dcc  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000080  00000000  00000000  00000e08  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002c03  00000000  00000000  00000e88  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000018d9  00000000  00000000  00003a8b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000696  00000000  00000000  00005364  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001b8  00000000  00000000  000059fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00001503  00000000  00000000  00005bb4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000004ab  00000000  00000000  000070b7  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000070  00000000  00000000  00007562  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	33 c0       	rjmp	.+102    	; 0x6a <__bad_interrupt>
   4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
   6:	08 c2       	rjmp	.+1040   	; 0x418 <__vector_3>
   8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
   a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
   c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
   e:	1b c2       	rjmp	.+1078   	; 0x446 <__vector_7>
  10:	2b c2       	rjmp	.+1110   	; 0x468 <__vector_8>
  12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
  14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
  16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
  18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
  1a:	68 c2       	rjmp	.+1232   	; 0x4ec <__vector_13>
  1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
  1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
  20:	24 c0       	rjmp	.+72     	; 0x6a <__bad_interrupt>
  22:	23 c0       	rjmp	.+70     	; 0x6a <__bad_interrupt>
  24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
  26:	21 c0       	rjmp	.+66     	; 0x6a <__bad_interrupt>
  28:	20 c0       	rjmp	.+64     	; 0x6a <__bad_interrupt>
  2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
  2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
  2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
  30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
  32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	cd bf       	out	0x3d, r28	; 61
  3c:	df e3       	ldi	r29, 0x3F	; 63
  3e:	de bf       	out	0x3e, r29	; 62

00000040 <__do_copy_data>:
  40:	1e e3       	ldi	r17, 0x3E	; 62
  42:	a0 e0       	ldi	r26, 0x00	; 0
  44:	be e3       	ldi	r27, 0x3E	; 62
  46:	ed ea       	ldi	r30, 0xAD	; 173
  48:	fc e0       	ldi	r31, 0x0C	; 12
  4a:	02 c0       	rjmp	.+4      	; 0x50 <__do_copy_data+0x10>
  4c:	05 90       	lpm	r0, Z+
  4e:	0d 92       	st	X+, r0
  50:	ae 30       	cpi	r26, 0x0E	; 14
  52:	b1 07       	cpc	r27, r17
  54:	d9 f7       	brne	.-10     	; 0x4c <__do_copy_data+0xc>

00000056 <__do_clear_bss>:
  56:	2e e3       	ldi	r18, 0x3E	; 62
  58:	ae e0       	ldi	r26, 0x0E	; 14
  5a:	be e3       	ldi	r27, 0x3E	; 62
  5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
  5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
  60:	a3 32       	cpi	r26, 0x23	; 35
  62:	b2 07       	cpc	r27, r18
  64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
  66:	94 d0       	rcall	.+296    	; 0x190 <main>
  68:	73 c5       	rjmp	.+2790   	; 0xb50 <_exit>

0000006a <__bad_interrupt>:
  6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <USART0_printChar>:
};

#define USART0_BAUD_RATE(BAUD_RATE) ((float)(F_CPU * 64 / (16 * (float)BAUD_RATE)) + 0.5)
static void USART0_sendChar(char c)
{
	while (!(USART0.STATUS & USART_DREIF_bm))
  6c:	e0 e0       	ldi	r30, 0x00	; 0
  6e:	f8 e0       	ldi	r31, 0x08	; 8
  70:	94 81       	ldd	r25, Z+4	; 0x04
  72:	95 ff       	sbrs	r25, 5
  74:	fd cf       	rjmp	.-6      	; 0x70 <USART0_printChar+0x4>
	{
		;                                   /* Wait for USART ready for receiving next char */
	}
	USART0.TXDATAL = c;
  76:	80 93 02 08 	sts	0x0802, r24	; 0x800802 <port_a_b_c_outs+0x7f7bb8>

static int USART0_printChar(char c, FILE *stream)
{
	USART0_sendChar(c);
	return 0;
}
  7a:	80 e0       	ldi	r24, 0x00	; 0
  7c:	90 e0       	ldi	r25, 0x00	; 0
  7e:	08 95       	ret

00000080 <USART0_init>:

static FILE USART_stream = FDEV_SETUP_STREAM(USART0_printChar, NULL, _FDEV_SETUP_WRITE);

void USART0_init(void)
{
	PORTMUX.CTRLB=PORTMUX_USART0_ALTERNATE_gc;		//Use alt UARTpins
  80:	81 e0       	ldi	r24, 0x01	; 1
  82:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <port_a_b_c_outs+0x7f75b7>
	//PORTA.DIR &= ~PIN3_bm;                  /* Configure RX pin as an input */
	PORTA.DIR |= PIN1_bm;                   /* Configure TX pin as an output */
  86:	e0 e0       	ldi	r30, 0x00	; 0
  88:	f4 e0       	ldi	r31, 0x04	; 4
  8a:	80 81       	ld	r24, Z
  8c:	82 60       	ori	r24, 0x02	; 2
  8e:	80 83       	st	Z, r24

	USART0.BAUD = (uint16_t)USART0_BAUD_RATE(9600);
  90:	e0 e0       	ldi	r30, 0x00	; 0
  92:	f8 e0       	ldi	r31, 0x08	; 8
  94:	8d e6       	ldi	r24, 0x6D	; 109
  96:	95 e0       	ldi	r25, 0x05	; 5
  98:	80 87       	std	Z+8, r24	; 0x08
  9a:	91 87       	std	Z+9, r25	; 0x09

	USART0.CTRLB |= USART_TXEN_bm;          /* Transmitter Enable bit mask. */
  9c:	86 81       	ldd	r24, Z+6	; 0x06
  9e:	80 64       	ori	r24, 0x40	; 64
  a0:	86 83       	std	Z+6, r24	; 0x06

	stdout = &USART_stream;                 /* Bind UART to stdio output stream */
  a2:	80 e0       	ldi	r24, 0x00	; 0
  a4:	9e e3       	ldi	r25, 0x3E	; 62
  a6:	80 93 1f 3e 	sts	0x3E1F, r24	; 0x803e1f <__iob+0x2>
  aa:	90 93 20 3e 	sts	0x3E20, r25	; 0x803e20 <__iob+0x3>
  ae:	08 95       	ret

000000b0 <RTCA_init>:
volatile uint16_t consecutive_counts_released ;
volatile uint16_t pit_interrupts_since_last_increase;


void RTCA_init(){
	RTC.CLKSEL = RTC_CLKSEL_INT1K_gc;				// 1024 Hz from OSCULP32K
  b0:	e0 e4       	ldi	r30, 0x40	; 64
  b2:	f1 e0       	ldi	r31, 0x01	; 1
  b4:	81 e0       	ldi	r24, 0x01	; 1
  b6:	87 83       	std	Z+7, r24	; 0x07
	RTC.CTRLA = RTC_RTCEN_bm;					// enable RTC
  b8:	80 83       	st	Z, r24
	RTC.PITINTCTRL = RTC_PI_bm;					// enable periodic interrupt
  ba:	82 8b       	std	Z+18, r24	; 0x12
	RTC.PITCTRLA = RTC_PERIOD_CYC32768_gc | RTC_PITEN_bm;		// set period; enable PIT
  bc:	81 e7       	ldi	r24, 0x71	; 113
  be:	80 8b       	std	Z+16, r24	; 0x10
  c0:	08 95       	ret

000000c2 <TCA0_init>:
}

void TCA0_init()
{
	// enable overflow interrupt
	TCA0.SINGLE.INTCTRL = TCA_SINGLE_OVF_bm;
  c2:	e0 e0       	ldi	r30, 0x00	; 0
  c4:	fa e0       	ldi	r31, 0x0A	; 10
  c6:	81 e0       	ldi	r24, 0x01	; 1
  c8:	82 87       	std	Z+10, r24	; 0x0a

	// set Normal mode
	TCA0.SINGLE.CTRLB = TCA_SINGLE_WGMODE_NORMAL_gc;
  ca:	11 82       	std	Z+1, r1	; 0x01

	// disable event counting
	TCA0.SINGLE.EVCTRL &= ~(TCA_SINGLE_CNTEI_bm);
  cc:	81 85       	ldd	r24, Z+9	; 0x09
  ce:	8e 7f       	andi	r24, 0xFE	; 254
  d0:	81 87       	std	Z+9, r24	; 0x09

	// set the period
	TCA0.SINGLE.PER = TCAdelay;
  d2:	81 e0       	ldi	r24, 0x01	; 1
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	86 a3       	std	Z+38, r24	; 0x26
  d8:	97 a3       	std	Z+39, r25	; 0x27

	// set clock
	TCA0.SINGLE.CTRLA = TCA_SINGLE_CLKSEL_DIV1024_gc | TCA_SINGLE_ENABLE_bm;    /* source (sys_clk/8) +  start timer */
  da:	8f e0       	ldi	r24, 0x0F	; 15
  dc:	80 83       	st	Z, r24
  de:	08 95       	ret

000000e0 <TCB0_init>:
}

void TCB0_init (void)
{
	/* Load the Compare or Capture register with the timeout value*/
	TCB0.CCMP = TCB_CMP_EXAMPLE_VALUE;
  e0:	e0 e4       	ldi	r30, 0x40	; 64
  e2:	fa e0       	ldi	r31, 0x0A	; 10
  e4:	8f ef       	ldi	r24, 0xFF	; 255
  e6:	9f ef       	ldi	r25, 0xFF	; 255
  e8:	84 87       	std	Z+12, r24	; 0x0c
  ea:	95 87       	std	Z+13, r25	; 0x0d
	
	/* Enable TCB and set CLK_PER divider to 1 (No Prescaling) */
	TCB0.CTRLA = TCB_CLKSEL_CLKDIV1_gc | TCB_ENABLE_bm ;
  ec:	81 e0       	ldi	r24, 0x01	; 1
  ee:	80 83       	st	Z, r24
	
	/* Enable Capture or Timeout interrupt */
	TCB0.INTCTRL = TCB_CAPT_bm;
  f0:	85 83       	std	Z+5, r24	; 0x05
  f2:	08 95       	ret

000000f4 <LEDOnById>:
}


void LEDOnById(int i){
	PORTA.OUT = port_a_b_c_outs[i][0];
  f4:	fc 01       	movw	r30, r24
  f6:	ee 0f       	add	r30, r30
  f8:	ff 1f       	adc	r31, r31
  fa:	8e 0f       	add	r24, r30
  fc:	9f 1f       	adc	r25, r31
  fe:	fc 01       	movw	r30, r24
 100:	e6 5b       	subi	r30, 0xB6	; 182
 102:	f3 47       	sbci	r31, 0x73	; 115
 104:	80 81       	ld	r24, Z
 106:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <port_a_b_c_outs+0x7f77ba>
	PORTB.OUT= port_a_b_c_outs[i][1];
 10a:	81 81       	ldd	r24, Z+1	; 0x01
 10c:	80 93 24 04 	sts	0x0424, r24	; 0x800424 <port_a_b_c_outs+0x7f77da>
	PORTC.OUT= port_a_b_c_outs[i][2];
 110:	82 81       	ldd	r24, Z+2	; 0x02
 112:	80 93 44 04 	sts	0x0444, r24	; 0x800444 <port_a_b_c_outs+0x7f77fa>
 116:	08 95       	ret

00000118 <allLEDoff>:
}

void allLEDoff(){
	PORTA.OUT = port_a_b_c_outs[0][0];
 118:	80 ec       	ldi	r24, 0xC0	; 192
 11a:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <port_a_b_c_outs+0x7f77ba>
	PORTB.OUT= port_a_b_c_outs[0][1];
 11e:	8f e3       	ldi	r24, 0x3F	; 63
 120:	80 93 24 04 	sts	0x0424, r24	; 0x800424 <port_a_b_c_outs+0x7f77da>
	PORTC.OUT= port_a_b_c_outs[0][2];
 124:	10 92 44 04 	sts	0x0444, r1	; 0x800444 <port_a_b_c_outs+0x7f77fa>
 128:	08 95       	ret

0000012a <wait_until_button_released>:
}

void wait_until_button_released()
{
 12a:	cf 93       	push	r28
 12c:	df 93       	push	r29
	while(consecutive_counts_released<6){printf("Waiting for release with consecutive_counts_pressed:%d, consecutive_counts_released:%d\n",consecutive_counts_pressed, consecutive_counts_released );}
 12e:	80 91 12 3e 	lds	r24, 0x3E12	; 0x803e12 <consecutive_counts_released>
 132:	90 91 13 3e 	lds	r25, 0x3E13	; 0x803e13 <consecutive_counts_released+0x1>
 136:	06 97       	sbiw	r24, 0x06	; 6
 138:	e8 f4       	brcc	.+58     	; 0x174 <wait_until_button_released+0x4a>
 13a:	c4 e5       	ldi	r28, 0x54	; 84
 13c:	db e8       	ldi	r29, 0x8B	; 139
 13e:	20 91 12 3e 	lds	r18, 0x3E12	; 0x803e12 <consecutive_counts_released>
 142:	30 91 13 3e 	lds	r19, 0x3E13	; 0x803e13 <consecutive_counts_released+0x1>
 146:	80 91 19 3e 	lds	r24, 0x3E19	; 0x803e19 <consecutive_counts_pressed>
 14a:	90 91 1a 3e 	lds	r25, 0x3E1A	; 0x803e1a <consecutive_counts_pressed+0x1>
 14e:	3f 93       	push	r19
 150:	2f 93       	push	r18
 152:	9f 93       	push	r25
 154:	8f 93       	push	r24
 156:	df 93       	push	r29
 158:	cf 93       	push	r28
 15a:	04 d2       	rcall	.+1032   	; 0x564 <printf>
 15c:	80 91 12 3e 	lds	r24, 0x3E12	; 0x803e12 <consecutive_counts_released>
 160:	90 91 13 3e 	lds	r25, 0x3E13	; 0x803e13 <consecutive_counts_released+0x1>
 164:	0f 90       	pop	r0
 166:	0f 90       	pop	r0
 168:	0f 90       	pop	r0
 16a:	0f 90       	pop	r0
 16c:	0f 90       	pop	r0
 16e:	0f 90       	pop	r0
 170:	06 97       	sbiw	r24, 0x06	; 6
 172:	28 f3       	brcs	.-54     	; 0x13e <wait_until_button_released+0x14>
	consecutive_counts_pressed=0;
 174:	10 92 19 3e 	sts	0x3E19, r1	; 0x803e19 <consecutive_counts_pressed>
 178:	10 92 1a 3e 	sts	0x3E1A, r1	; 0x803e1a <consecutive_counts_pressed+0x1>
	consecutive_counts_released=0;
 17c:	10 92 12 3e 	sts	0x3E12, r1	; 0x803e12 <consecutive_counts_released>
 180:	10 92 13 3e 	sts	0x3E13, r1	; 0x803e13 <consecutive_counts_released+0x1>
	printf("Released\n");
 184:	8c ea       	ldi	r24, 0xAC	; 172
 186:	9b e8       	ldi	r25, 0x8B	; 139
 188:	00 d2       	rcall	.+1024   	; 0x58a <puts>
}
 18a:	df 91       	pop	r29
 18c:	cf 91       	pop	r28
 18e:	08 95       	ret

00000190 <main>:

int main() {


	RTCA_init(10); // set periodic RTC triggering "awakening" delay in seconds
 190:	8a e0       	ldi	r24, 0x0A	; 10
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	8d df       	rcall	.-230    	; 0xb0 <RTCA_init>
	TCA0_init();
 196:	95 df       	rcall	.-214    	; 0xc2 <TCA0_init>
	TCB0_init();
 198:	a3 df       	rcall	.-186    	; 0xe0 <TCB0_init>
	USART0_init();
 19a:	72 df       	rcall	.-284    	; 0x80 <USART0_init>

	PORTA.DIRSET = 0b11100011;
 19c:	e0 e0       	ldi	r30, 0x00	; 0
 19e:	f4 e0       	ldi	r31, 0x04	; 4
 1a0:	83 ee       	ldi	r24, 0xE3	; 227
 1a2:	81 83       	std	Z+1, r24	; 0x01
	PORTB.DIRSET = 0b11111111;
 1a4:	8f ef       	ldi	r24, 0xFF	; 255
 1a6:	80 93 21 04 	sts	0x0421, r24	; 0x800421 <port_a_b_c_outs+0x7f77d7>
	PORTC.DIRSET = 0b11111111;
 1aa:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <port_a_b_c_outs+0x7f77f7>

	// Button setup
	PORTA.PIN2CTRL = PORT_ISC_FALLING_gc | PORT_PULLUPEN_bm; // Enable pull-up resistor
 1ae:	8b e0       	ldi	r24, 0x0B	; 11
 1b0:	82 8b       	std	Z+18, r24	; 0x12

	
	// Initialize variables
	consecutive_counts_pressed=0;
 1b2:	10 92 19 3e 	sts	0x3E19, r1	; 0x803e19 <consecutive_counts_pressed>
 1b6:	10 92 1a 3e 	sts	0x3E1A, r1	; 0x803e1a <consecutive_counts_pressed+0x1>
	consecutive_counts_released=0;
 1ba:	10 92 12 3e 	sts	0x3E12, r1	; 0x803e12 <consecutive_counts_released>
 1be:	10 92 13 3e 	sts	0x3E13, r1	; 0x803e13 <consecutive_counts_released+0x1>
	pit_interrupts_since_last_increase=0; // TODO read this from EEPROM
 1c2:	10 92 1b 3e 	sts	0x3E1B, r1	; 0x803e1b <pit_interrupts_since_last_increase>
 1c6:	10 92 1c 3e 	sts	0x3E1C, r1	; 0x803e1c <pit_interrupts_since_last_increase+0x1>
	x=10;
 1ca:	8a e0       	ldi	r24, 0x0A	; 10
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	80 93 10 3e 	sts	0x3E10, r24	; 0x803e10 <x>
 1d2:	90 93 11 3e 	sts	0x3E11, r25	; 0x803e11 <x+0x1>
	i=0;
 1d6:	10 92 14 3e 	sts	0x3E14, r1	; 0x803e14 <i>
 1da:	10 92 15 3e 	sts	0x3E15, r1	; 0x803e15 <i+0x1>
	pit_interrupt=0;
 1de:	10 92 18 3e 	sts	0x3E18, r1	; 0x803e18 <pit_interrupt>
	
	sei();
 1e2:	78 94       	sei
	SLPCTRL.CTRLA |= SLPCTRL_SMODE_STDBY_gc; // set POWER DOWN as sleep mode
 1e4:	e0 e5       	ldi	r30, 0x50	; 80
 1e6:	f0 e0       	ldi	r31, 0x00	; 0
 1e8:	80 81       	ld	r24, Z
 1ea:	82 60       	ori	r24, 0x02	; 2
 1ec:	80 83       	st	Z, r24
	SLPCTRL.CTRLA |= SLPCTRL_SEN_bm; // enable sleep mode
 1ee:	80 81       	ld	r24, Z
 1f0:	81 60       	ori	r24, 0x01	; 1
 1f2:	80 83       	st	Z, r24
	
	printf("booting finished\n");
 1f4:	85 eb       	ldi	r24, 0xB5	; 181
 1f6:	9b e8       	ldi	r25, 0x8B	; 139
 1f8:	c8 d1       	rcall	.+912    	; 0x58a <puts>
	wait_until_button_released();
 1fa:	97 df       	rcall	.-210    	; 0x12a <wait_until_button_released>
				printf("Increase not possible because not enough time has passed since the last time.\n");
				allLEDoff();
				_delay_ms(250);
			}
			else{
				printf("Increasing x to %d \n", x);
 1fc:	c6 ec       	ldi	r28, 0xC6	; 198
 1fe:	db e8       	ldi	r29, 0x8B	; 139
			}

			wait_until_button_released();
			if (x>32){
				
				for ( c=32; c>=1; c--){x=c;_delay_ms(100);				}
 200:	68 94       	set
 202:	aa 24       	eor	r10, r10
 204:	a5 f8       	bld	r10, 5
 206:	b1 2c       	mov	r11, r1
				for ( c=1; c<=32; c++){x=c;_delay_ms(100);				}
 208:	01 e0       	ldi	r16, 0x01	; 1
 20a:	10 e0       	ldi	r17, 0x00	; 0
			pit_interrupts_since_last_increase++;
			if (pit_interrupts_since_last_increase > 360){
				printf("Reseting x due to long inactivity\n");
				x= 1;
			}
			printf("again just PIT with %d \n", pit_interrupts_since_last_increase);
 20c:	0f 2e       	mov	r0, r31
 20e:	ff e0       	ldi	r31, 0x0F	; 15
 210:	ef 2e       	mov	r14, r31
 212:	fc e8       	ldi	r31, 0x8C	; 140
 214:	ff 2e       	mov	r15, r31
 216:	f0 2d       	mov	r31, r0

			allLEDoff();
			
			if (pit_interrupts_since_last_increase%5){
				printf("every nth PIT should be visible\n ");
 218:	0f 2e       	mov	r0, r31
 21a:	f8 e2       	ldi	r31, 0x28	; 40
 21c:	cf 2e       	mov	r12, r31
 21e:	fc e8       	ldi	r31, 0x8C	; 140
 220:	df 2e       	mov	r13, r31
 222:	f0 2d       	mov	r31, r0
	
	printf("booting finished\n");
	wait_until_button_released();

	while(1){
		if (consecutive_counts_pressed> 5){
 224:	80 91 19 3e 	lds	r24, 0x3E19	; 0x803e19 <consecutive_counts_pressed>
 228:	90 91 1a 3e 	lds	r25, 0x3E1A	; 0x803e1a <consecutive_counts_pressed+0x1>
 22c:	06 97       	sbiw	r24, 0x06	; 6
 22e:	08 f4       	brcc	.+2      	; 0x232 <__DATA_REGION_LENGTH__+0x32>
 230:	7f c0       	rjmp	.+254    	; 0x330 <__DATA_REGION_LENGTH__+0x130>
			
			if (pit_interrupts_since_last_increase< 0){
 232:	80 91 1b 3e 	lds	r24, 0x3E1B	; 0x803e1b <pit_interrupts_since_last_increase>
 236:	90 91 1c 3e 	lds	r25, 0x3E1C	; 0x803e1c <pit_interrupts_since_last_increase+0x1>
				printf("Increase not possible because not enough time has passed since the last time.\n");
				allLEDoff();
				_delay_ms(250);
			}
			else{
				printf("Increasing x to %d \n", x);
 23a:	80 91 10 3e 	lds	r24, 0x3E10	; 0x803e10 <x>
 23e:	90 91 11 3e 	lds	r25, 0x3E11	; 0x803e11 <x+0x1>
 242:	9f 93       	push	r25
 244:	8f 93       	push	r24
 246:	df 93       	push	r29
 248:	cf 93       	push	r28
 24a:	8c d1       	rcall	.+792    	; 0x564 <printf>
				
				x++;
 24c:	80 91 10 3e 	lds	r24, 0x3E10	; 0x803e10 <x>
 250:	90 91 11 3e 	lds	r25, 0x3E11	; 0x803e11 <x+0x1>
 254:	01 96       	adiw	r24, 0x01	; 1
 256:	80 93 10 3e 	sts	0x3E10, r24	; 0x803e10 <x>
 25a:	90 93 11 3e 	sts	0x3E11, r25	; 0x803e11 <x+0x1>
				
				
				pit_interrupts_since_last_increase =0 ;
 25e:	10 92 1b 3e 	sts	0x3E1B, r1	; 0x803e1b <pit_interrupts_since_last_increase>
 262:	10 92 1c 3e 	sts	0x3E1C, r1	; 0x803e1c <pit_interrupts_since_last_increase+0x1>
				
			}

			wait_until_button_released();
 266:	61 df       	rcall	.-318    	; 0x12a <wait_until_button_released>
			if (x>32){
 268:	80 91 10 3e 	lds	r24, 0x3E10	; 0x803e10 <x>
 26c:	90 91 11 3e 	lds	r25, 0x3E11	; 0x803e11 <x+0x1>
 270:	0f 90       	pop	r0
 272:	0f 90       	pop	r0
 274:	0f 90       	pop	r0
 276:	0f 90       	pop	r0
 278:	81 97       	sbiw	r24, 0x21	; 33
 27a:	0c f4       	brge	.+2      	; 0x27e <__DATA_REGION_LENGTH__+0x7e>
 27c:	59 c0       	rjmp	.+178    	; 0x330 <__DATA_REGION_LENGTH__+0x130>
				
				for ( c=32; c>=1; c--){x=c;_delay_ms(100);				}
 27e:	a0 92 16 3e 	sts	0x3E16, r10	; 0x803e16 <c>
 282:	b0 92 17 3e 	sts	0x3E17, r11	; 0x803e17 <c+0x1>
 286:	8a 2d       	mov	r24, r10
 288:	9b 2d       	mov	r25, r11
 28a:	80 93 10 3e 	sts	0x3E10, r24	; 0x803e10 <x>
 28e:	90 93 11 3e 	sts	0x3E11, r25	; 0x803e11 <x+0x1>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 292:	9a e6       	ldi	r25, 0x6A	; 106
 294:	24 e0       	ldi	r18, 0x04	; 4
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	91 50       	subi	r25, 0x01	; 1
 29a:	20 40       	sbci	r18, 0x00	; 0
 29c:	80 40       	sbci	r24, 0x00	; 0
 29e:	e1 f7       	brne	.-8      	; 0x298 <__DATA_REGION_LENGTH__+0x98>
 2a0:	00 c0       	rjmp	.+0      	; 0x2a2 <__DATA_REGION_LENGTH__+0xa2>
 2a2:	80 91 16 3e 	lds	r24, 0x3E16	; 0x803e16 <c>
 2a6:	90 91 17 3e 	lds	r25, 0x3E17	; 0x803e17 <c+0x1>
 2aa:	01 97       	sbiw	r24, 0x01	; 1
 2ac:	80 93 16 3e 	sts	0x3E16, r24	; 0x803e16 <c>
 2b0:	90 93 17 3e 	sts	0x3E17, r25	; 0x803e17 <c+0x1>
 2b4:	18 16       	cp	r1, r24
 2b6:	19 06       	cpc	r1, r25
 2b8:	44 f3       	brlt	.-48     	; 0x28a <__DATA_REGION_LENGTH__+0x8a>
 2ba:	a8 c0       	rjmp	.+336    	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
				for ( c=1; c<=32; c++){x=c;_delay_ms(100);				}
 2bc:	80 93 10 3e 	sts	0x3E10, r24	; 0x803e10 <x>
 2c0:	90 93 11 3e 	sts	0x3E11, r25	; 0x803e11 <x+0x1>
 2c4:	9a e6       	ldi	r25, 0x6A	; 106
 2c6:	24 e0       	ldi	r18, 0x04	; 4
 2c8:	81 e0       	ldi	r24, 0x01	; 1
 2ca:	91 50       	subi	r25, 0x01	; 1
 2cc:	20 40       	sbci	r18, 0x00	; 0
 2ce:	80 40       	sbci	r24, 0x00	; 0
 2d0:	e1 f7       	brne	.-8      	; 0x2ca <__DATA_REGION_LENGTH__+0xca>
 2d2:	00 c0       	rjmp	.+0      	; 0x2d4 <__DATA_REGION_LENGTH__+0xd4>
 2d4:	80 91 16 3e 	lds	r24, 0x3E16	; 0x803e16 <c>
 2d8:	90 91 17 3e 	lds	r25, 0x3E17	; 0x803e17 <c+0x1>
 2dc:	01 96       	adiw	r24, 0x01	; 1
 2de:	80 93 16 3e 	sts	0x3E16, r24	; 0x803e16 <c>
 2e2:	90 93 17 3e 	sts	0x3E17, r25	; 0x803e17 <c+0x1>
 2e6:	81 32       	cpi	r24, 0x21	; 33
 2e8:	91 05       	cpc	r25, r1
 2ea:	44 f3       	brlt	.-48     	; 0x2bc <__DATA_REGION_LENGTH__+0xbc>
				for ( c=32; c>=1; c--){x=c;_delay_ms(100);				}
 2ec:	a0 92 16 3e 	sts	0x3E16, r10	; 0x803e16 <c>
 2f0:	b0 92 17 3e 	sts	0x3E17, r11	; 0x803e17 <c+0x1>
 2f4:	8a 2d       	mov	r24, r10
 2f6:	9b 2d       	mov	r25, r11
 2f8:	80 93 10 3e 	sts	0x3E10, r24	; 0x803e10 <x>
 2fc:	90 93 11 3e 	sts	0x3E11, r25	; 0x803e11 <x+0x1>
 300:	9a e6       	ldi	r25, 0x6A	; 106
 302:	24 e0       	ldi	r18, 0x04	; 4
 304:	81 e0       	ldi	r24, 0x01	; 1
 306:	91 50       	subi	r25, 0x01	; 1
 308:	20 40       	sbci	r18, 0x00	; 0
 30a:	80 40       	sbci	r24, 0x00	; 0
 30c:	e1 f7       	brne	.-8      	; 0x306 <__DATA_REGION_LENGTH__+0x106>
 30e:	00 c0       	rjmp	.+0      	; 0x310 <__DATA_REGION_LENGTH__+0x110>
 310:	80 91 16 3e 	lds	r24, 0x3E16	; 0x803e16 <c>
 314:	90 91 17 3e 	lds	r25, 0x3E17	; 0x803e17 <c+0x1>
 318:	01 97       	sbiw	r24, 0x01	; 1
 31a:	80 93 16 3e 	sts	0x3E16, r24	; 0x803e16 <c>
 31e:	90 93 17 3e 	sts	0x3E17, r25	; 0x803e17 <c+0x1>
 322:	18 16       	cp	r1, r24
 324:	19 06       	cpc	r1, r25
 326:	44 f3       	brlt	.-48     	; 0x2f8 <__DATA_REGION_LENGTH__+0xf8>
				
			x=1;} // i overflow carrying
 328:	00 93 10 3e 	sts	0x3E10, r16	; 0x803e10 <x>
 32c:	10 93 11 3e 	sts	0x3E11, r17	; 0x803e11 <x+0x1>
		}
		
		if (consecutive_counts_released>200){
 330:	80 91 12 3e 	lds	r24, 0x3E12	; 0x803e12 <consecutive_counts_released>
 334:	90 91 13 3e 	lds	r25, 0x3E13	; 0x803e13 <consecutive_counts_released+0x1>
 338:	89 3c       	cpi	r24, 0xC9	; 201
 33a:	91 05       	cpc	r25, r1
 33c:	b8 f0       	brcs	.+46     	; 0x36c <__DATA_REGION_LENGTH__+0x16c>
			printf("going to sleep...\n");
 33e:	8b ed       	ldi	r24, 0xDB	; 219
 340:	9b e8       	ldi	r25, 0x8B	; 139
 342:	23 d1       	rcall	.+582    	; 0x58a <puts>
			allLEDoff();
 344:	e9 de       	rcall	.-558    	; 0x118 <allLEDoff>
			sleep_cpu();
 346:	88 95       	sleep
			
			
			if (pit_interrupt==0){
 348:	80 91 18 3e 	lds	r24, 0x3E18	; 0x803e18 <pit_interrupt>
 34c:	81 11       	cpse	r24, r1
 34e:	0e c0       	rjmp	.+28     	; 0x36c <__DATA_REGION_LENGTH__+0x16c>
				consecutive_counts_pressed=0;
 350:	10 92 19 3e 	sts	0x3E19, r1	; 0x803e19 <consecutive_counts_pressed>
 354:	10 92 1a 3e 	sts	0x3E1A, r1	; 0x803e1a <consecutive_counts_pressed+0x1>
				consecutive_counts_released=0;
 358:	10 92 12 3e 	sts	0x3E12, r1	; 0x803e12 <consecutive_counts_released>
 35c:	10 92 13 3e 	sts	0x3E13, r1	; 0x803e13 <consecutive_counts_released+0x1>
 360:	8d e8       	ldi	r24, 0x8D	; 141
 362:	90 e2       	ldi	r25, 0x20	; 32
 364:	01 97       	sbiw	r24, 0x01	; 1
 366:	f1 f7       	brne	.-4      	; 0x364 <__DATA_REGION_LENGTH__+0x164>
 368:	00 00       	nop
				_delay_ms(10);
				wait_until_button_released();
 36a:	df de       	rcall	.-578    	; 0x12a <wait_until_button_released>
			}


		}
		
		if (pit_interrupt==1){
 36c:	80 91 18 3e 	lds	r24, 0x3E18	; 0x803e18 <pit_interrupt>
 370:	81 30       	cpi	r24, 0x01	; 1
 372:	09 f0       	breq	.+2      	; 0x376 <__DATA_REGION_LENGTH__+0x176>
 374:	57 cf       	rjmp	.-338    	; 0x224 <__DATA_REGION_LENGTH__+0x24>
			allLEDoff();
 376:	d0 de       	rcall	.-608    	; 0x118 <allLEDoff>
 378:	8d e8       	ldi	r24, 0x8D	; 141
 37a:	90 e2       	ldi	r25, 0x20	; 32
 37c:	01 97       	sbiw	r24, 0x01	; 1
 37e:	f1 f7       	brne	.-4      	; 0x37c <__DATA_REGION_LENGTH__+0x17c>
 380:	00 00       	nop
			_delay_ms(10);
			
			pit_interrupt=0;
 382:	10 92 18 3e 	sts	0x3E18, r1	; 0x803e18 <pit_interrupt>
			pit_interrupts_since_last_increase++;
 386:	80 91 1b 3e 	lds	r24, 0x3E1B	; 0x803e1b <pit_interrupts_since_last_increase>
 38a:	90 91 1c 3e 	lds	r25, 0x3E1C	; 0x803e1c <pit_interrupts_since_last_increase+0x1>
 38e:	01 96       	adiw	r24, 0x01	; 1
 390:	80 93 1b 3e 	sts	0x3E1B, r24	; 0x803e1b <pit_interrupts_since_last_increase>
 394:	90 93 1c 3e 	sts	0x3E1C, r25	; 0x803e1c <pit_interrupts_since_last_increase+0x1>
			if (pit_interrupts_since_last_increase > 360){
 398:	80 91 1b 3e 	lds	r24, 0x3E1B	; 0x803e1b <pit_interrupts_since_last_increase>
 39c:	90 91 1c 3e 	lds	r25, 0x3E1C	; 0x803e1c <pit_interrupts_since_last_increase+0x1>
 3a0:	89 36       	cpi	r24, 0x69	; 105
 3a2:	91 40       	sbci	r25, 0x01	; 1
 3a4:	38 f0       	brcs	.+14     	; 0x3b4 <__DATA_REGION_LENGTH__+0x1b4>
				printf("Reseting x due to long inactivity\n");
 3a6:	8d ee       	ldi	r24, 0xED	; 237
 3a8:	9b e8       	ldi	r25, 0x8B	; 139
 3aa:	ef d0       	rcall	.+478    	; 0x58a <puts>
				x= 1;
 3ac:	00 93 10 3e 	sts	0x3E10, r16	; 0x803e10 <x>
 3b0:	10 93 11 3e 	sts	0x3E11, r17	; 0x803e11 <x+0x1>
			}
			printf("again just PIT with %d \n", pit_interrupts_since_last_increase);
 3b4:	80 91 1b 3e 	lds	r24, 0x3E1B	; 0x803e1b <pit_interrupts_since_last_increase>
 3b8:	90 91 1c 3e 	lds	r25, 0x3E1C	; 0x803e1c <pit_interrupts_since_last_increase+0x1>
 3bc:	9f 93       	push	r25
 3be:	8f 93       	push	r24
 3c0:	ff 92       	push	r15
 3c2:	ef 92       	push	r14
 3c4:	cf d0       	rcall	.+414    	; 0x564 <printf>

			allLEDoff();
 3c6:	a8 de       	rcall	.-688    	; 0x118 <allLEDoff>
			
			if (pit_interrupts_since_last_increase%5){
 3c8:	40 91 1b 3e 	lds	r20, 0x3E1B	; 0x803e1b <pit_interrupts_since_last_increase>
 3cc:	50 91 1c 3e 	lds	r21, 0x3E1C	; 0x803e1c <pit_interrupts_since_last_increase+0x1>
 3d0:	9a 01       	movw	r18, r20
 3d2:	ad ec       	ldi	r26, 0xCD	; 205
 3d4:	bc ec       	ldi	r27, 0xCC	; 204
 3d6:	ba d0       	rcall	.+372    	; 0x54c <__umulhisi3>
 3d8:	96 95       	lsr	r25
 3da:	87 95       	ror	r24
 3dc:	96 95       	lsr	r25
 3de:	87 95       	ror	r24
 3e0:	9c 01       	movw	r18, r24
 3e2:	22 0f       	add	r18, r18
 3e4:	33 1f       	adc	r19, r19
 3e6:	22 0f       	add	r18, r18
 3e8:	33 1f       	adc	r19, r19
 3ea:	82 0f       	add	r24, r18
 3ec:	93 1f       	adc	r25, r19
 3ee:	0f 90       	pop	r0
 3f0:	0f 90       	pop	r0
 3f2:	0f 90       	pop	r0
 3f4:	0f 90       	pop	r0
 3f6:	48 17       	cp	r20, r24
 3f8:	59 07       	cpc	r21, r25
 3fa:	31 f0       	breq	.+12     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
				printf("every nth PIT should be visible\n ");
 3fc:	df 92       	push	r13
 3fe:	cf 92       	push	r12
 400:	b1 d0       	rcall	.+354    	; 0x564 <printf>
 402:	0f 90       	pop	r0
 404:	0f 90       	pop	r0
 406:	0e cf       	rjmp	.-484    	; 0x224 <__DATA_REGION_LENGTH__+0x24>
				
			}
			else{
				sleep_cpu();
 408:	88 95       	sleep
 40a:	0c cf       	rjmp	.-488    	; 0x224 <__DATA_REGION_LENGTH__+0x24>

			wait_until_button_released();
			if (x>32){
				
				for ( c=32; c>=1; c--){x=c;_delay_ms(100);				}
				for ( c=1; c<=32; c++){x=c;_delay_ms(100);				}
 40c:	00 93 16 3e 	sts	0x3E16, r16	; 0x803e16 <c>
 410:	10 93 17 3e 	sts	0x3E17, r17	; 0x803e17 <c+0x1>
 414:	c8 01       	movw	r24, r16
 416:	52 cf       	rjmp	.-348    	; 0x2bc <__DATA_REGION_LENGTH__+0xbc>

00000418 <__vector_3>:
		
	}


}
ISR(PORTA_PORT_vect) {
 418:	1f 92       	push	r1
 41a:	0f 92       	push	r0
 41c:	0f b6       	in	r0, 0x3f	; 63
 41e:	0f 92       	push	r0
 420:	11 24       	eor	r1, r1
 422:	8f 93       	push	r24
 424:	ef 93       	push	r30
 426:	ff 93       	push	r31
	pit_interrupt = 0 ;
 428:	10 92 18 3e 	sts	0x3E18, r1	; 0x803e18 <pit_interrupt>
	PORTA.INTFLAGS |= btn_pin; // Clear interrupt flag
 42c:	e0 e0       	ldi	r30, 0x00	; 0
 42e:	f4 e0       	ldi	r31, 0x04	; 4
 430:	81 85       	ldd	r24, Z+9	; 0x09
 432:	84 60       	ori	r24, 0x04	; 4
 434:	81 87       	std	Z+9, r24	; 0x09
}
 436:	ff 91       	pop	r31
 438:	ef 91       	pop	r30
 43a:	8f 91       	pop	r24
 43c:	0f 90       	pop	r0
 43e:	0f be       	out	0x3f, r0	; 63
 440:	0f 90       	pop	r0
 442:	1f 90       	pop	r1
 444:	18 95       	reti

00000446 <__vector_7>:

ISR(RTC_PIT_vect)
{
 446:	1f 92       	push	r1
 448:	0f 92       	push	r0
 44a:	0f b6       	in	r0, 0x3f	; 63
 44c:	0f 92       	push	r0
 44e:	11 24       	eor	r1, r1
 450:	8f 93       	push	r24
	pit_interrupt = 1;
 452:	81 e0       	ldi	r24, 0x01	; 1
 454:	80 93 18 3e 	sts	0x3E18, r24	; 0x803e18 <pit_interrupt>
	RTC.PITINTFLAGS = RTC_PI_bm;// Clear interrupt flag
 458:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <port_a_b_c_outs+0x7f7509>
}
 45c:	8f 91       	pop	r24
 45e:	0f 90       	pop	r0
 460:	0f be       	out	0x3f, r0	; 63
 462:	0f 90       	pop	r0
 464:	1f 90       	pop	r1
 466:	18 95       	reti

00000468 <__vector_8>:

ISR(TCA0_OVF_vect)
{
 468:	1f 92       	push	r1
 46a:	0f 92       	push	r0
 46c:	0f b6       	in	r0, 0x3f	; 63
 46e:	0f 92       	push	r0
 470:	11 24       	eor	r1, r1
 472:	2f 93       	push	r18
 474:	3f 93       	push	r19
 476:	4f 93       	push	r20
 478:	5f 93       	push	r21
 47a:	6f 93       	push	r22
 47c:	7f 93       	push	r23
 47e:	8f 93       	push	r24
 480:	9f 93       	push	r25
 482:	af 93       	push	r26
 484:	bf 93       	push	r27
 486:	ef 93       	push	r30
 488:	ff 93       	push	r31
	// "Running" trough the LED table defined above and switch LEDs on & off according to the x value
	i++;
 48a:	80 91 14 3e 	lds	r24, 0x3E14	; 0x803e14 <i>
 48e:	90 91 15 3e 	lds	r25, 0x3E15	; 0x803e15 <i+0x1>
 492:	01 96       	adiw	r24, 0x01	; 1
 494:	80 93 14 3e 	sts	0x3E14, r24	; 0x803e14 <i>
 498:	90 93 15 3e 	sts	0x3E15, r25	; 0x803e15 <i+0x1>

	if (i<=x){LEDOnById(i);}
 49c:	20 91 10 3e 	lds	r18, 0x3E10	; 0x803e10 <x>
 4a0:	30 91 11 3e 	lds	r19, 0x3E11	; 0x803e11 <x+0x1>
 4a4:	28 17       	cp	r18, r24
 4a6:	39 07       	cpc	r19, r25
 4a8:	14 f0       	brlt	.+4      	; 0x4ae <__vector_8+0x46>
 4aa:	24 de       	rcall	.-952    	; 0xf4 <LEDOnById>
 4ac:	01 c0       	rjmp	.+2      	; 0x4b0 <__vector_8+0x48>
	else{allLEDoff();}
 4ae:	34 de       	rcall	.-920    	; 0x118 <allLEDoff>

	if (i>32){i=0;} // i overflow carrying
 4b0:	80 91 14 3e 	lds	r24, 0x3E14	; 0x803e14 <i>
 4b4:	90 91 15 3e 	lds	r25, 0x3E15	; 0x803e15 <i+0x1>
 4b8:	81 97       	sbiw	r24, 0x21	; 33
 4ba:	24 f0       	brlt	.+8      	; 0x4c4 <__vector_8+0x5c>
 4bc:	10 92 14 3e 	sts	0x3E14, r1	; 0x803e14 <i>
 4c0:	10 92 15 3e 	sts	0x3E15, r1	; 0x803e15 <i+0x1>

	// The interrupt flag has to be cleared manually
	TCA0.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;
 4c4:	81 e0       	ldi	r24, 0x01	; 1
 4c6:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <port_a_b_c_outs+0x7f7dc1>
	
}
 4ca:	ff 91       	pop	r31
 4cc:	ef 91       	pop	r30
 4ce:	bf 91       	pop	r27
 4d0:	af 91       	pop	r26
 4d2:	9f 91       	pop	r25
 4d4:	8f 91       	pop	r24
 4d6:	7f 91       	pop	r23
 4d8:	6f 91       	pop	r22
 4da:	5f 91       	pop	r21
 4dc:	4f 91       	pop	r20
 4de:	3f 91       	pop	r19
 4e0:	2f 91       	pop	r18
 4e2:	0f 90       	pop	r0
 4e4:	0f be       	out	0x3f, r0	; 63
 4e6:	0f 90       	pop	r0
 4e8:	1f 90       	pop	r1
 4ea:	18 95       	reti

000004ec <__vector_13>:


ISR(TCB0_INT_vect)
{
 4ec:	1f 92       	push	r1
 4ee:	0f 92       	push	r0
 4f0:	0f b6       	in	r0, 0x3f	; 63
 4f2:	0f 92       	push	r0
 4f4:	11 24       	eor	r1, r1
 4f6:	8f 93       	push	r24
 4f8:	9f 93       	push	r25
	// Counting consecutive ticks of pressed or released button. Use case: Debouncing and short and long press detection.
	if (~PORTA.IN & btn_pin){
 4fa:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <port_a_b_c_outs+0x7f77be>
 4fe:	82 fd       	sbrc	r24, 2
 500:	0e c0       	rjmp	.+28     	; 0x51e <__vector_13+0x32>
		consecutive_counts_pressed++;
 502:	80 91 19 3e 	lds	r24, 0x3E19	; 0x803e19 <consecutive_counts_pressed>
 506:	90 91 1a 3e 	lds	r25, 0x3E1A	; 0x803e1a <consecutive_counts_pressed+0x1>
 50a:	01 96       	adiw	r24, 0x01	; 1
 50c:	80 93 19 3e 	sts	0x3E19, r24	; 0x803e19 <consecutive_counts_pressed>
 510:	90 93 1a 3e 	sts	0x3E1A, r25	; 0x803e1a <consecutive_counts_pressed+0x1>
		consecutive_counts_released=0;
 514:	10 92 12 3e 	sts	0x3E12, r1	; 0x803e12 <consecutive_counts_released>
 518:	10 92 13 3e 	sts	0x3E13, r1	; 0x803e13 <consecutive_counts_released+0x1>
 51c:	0d c0       	rjmp	.+26     	; 0x538 <__vector_13+0x4c>
	}
	else{
		consecutive_counts_pressed=0;
 51e:	10 92 19 3e 	sts	0x3E19, r1	; 0x803e19 <consecutive_counts_pressed>
 522:	10 92 1a 3e 	sts	0x3E1A, r1	; 0x803e1a <consecutive_counts_pressed+0x1>
		consecutive_counts_released++;
 526:	80 91 12 3e 	lds	r24, 0x3E12	; 0x803e12 <consecutive_counts_released>
 52a:	90 91 13 3e 	lds	r25, 0x3E13	; 0x803e13 <consecutive_counts_released+0x1>
 52e:	01 96       	adiw	r24, 0x01	; 1
 530:	80 93 12 3e 	sts	0x3E12, r24	; 0x803e12 <consecutive_counts_released>
 534:	90 93 13 3e 	sts	0x3E13, r25	; 0x803e13 <consecutive_counts_released+0x1>
	}
	TCB0.INTFLAGS = TCB_CAPT_bm; /* Clear the interrupt flag */
 538:	81 e0       	ldi	r24, 0x01	; 1
 53a:	80 93 46 0a 	sts	0x0A46, r24	; 0x800a46 <port_a_b_c_outs+0x7f7dfc>
 53e:	9f 91       	pop	r25
 540:	8f 91       	pop	r24
 542:	0f 90       	pop	r0
 544:	0f be       	out	0x3f, r0	; 63
 546:	0f 90       	pop	r0
 548:	1f 90       	pop	r1
 54a:	18 95       	reti

0000054c <__umulhisi3>:
 54c:	a2 9f       	mul	r26, r18
 54e:	b0 01       	movw	r22, r0
 550:	b3 9f       	mul	r27, r19
 552:	c0 01       	movw	r24, r0
 554:	a3 9f       	mul	r26, r19
 556:	01 d0       	rcall	.+2      	; 0x55a <__umulhisi3+0xe>
 558:	b2 9f       	mul	r27, r18
 55a:	70 0d       	add	r23, r0
 55c:	81 1d       	adc	r24, r1
 55e:	11 24       	eor	r1, r1
 560:	91 1d       	adc	r25, r1
 562:	08 95       	ret

00000564 <printf>:
 564:	a0 e0       	ldi	r26, 0x00	; 0
 566:	b0 e0       	ldi	r27, 0x00	; 0
 568:	e7 eb       	ldi	r30, 0xB7	; 183
 56a:	f2 e0       	ldi	r31, 0x02	; 2
 56c:	d0 c2       	rjmp	.+1440   	; 0xb0e <__prologue_saves__+0x20>
 56e:	ae 01       	movw	r20, r28
 570:	4b 5f       	subi	r20, 0xFB	; 251
 572:	5f 4f       	sbci	r21, 0xFF	; 255
 574:	fa 01       	movw	r30, r20
 576:	61 91       	ld	r22, Z+
 578:	71 91       	ld	r23, Z+
 57a:	af 01       	movw	r20, r30
 57c:	80 91 1f 3e 	lds	r24, 0x3E1F	; 0x803e1f <__iob+0x2>
 580:	90 91 20 3e 	lds	r25, 0x3E20	; 0x803e20 <__iob+0x3>
 584:	32 d0       	rcall	.+100    	; 0x5ea <vfprintf>
 586:	e2 e0       	ldi	r30, 0x02	; 2
 588:	db c2       	rjmp	.+1462   	; 0xb40 <__epilogue_restores__+0x20>

0000058a <puts>:
 58a:	0f 93       	push	r16
 58c:	1f 93       	push	r17
 58e:	cf 93       	push	r28
 590:	df 93       	push	r29
 592:	e0 91 1f 3e 	lds	r30, 0x3E1F	; 0x803e1f <__iob+0x2>
 596:	f0 91 20 3e 	lds	r31, 0x3E20	; 0x803e20 <__iob+0x3>
 59a:	23 81       	ldd	r18, Z+3	; 0x03
 59c:	21 ff       	sbrs	r18, 1
 59e:	1b c0       	rjmp	.+54     	; 0x5d6 <puts+0x4c>
 5a0:	8c 01       	movw	r16, r24
 5a2:	d0 e0       	ldi	r29, 0x00	; 0
 5a4:	c0 e0       	ldi	r28, 0x00	; 0
 5a6:	f8 01       	movw	r30, r16
 5a8:	81 91       	ld	r24, Z+
 5aa:	8f 01       	movw	r16, r30
 5ac:	60 91 1f 3e 	lds	r22, 0x3E1F	; 0x803e1f <__iob+0x2>
 5b0:	70 91 20 3e 	lds	r23, 0x3E20	; 0x803e20 <__iob+0x3>
 5b4:	db 01       	movw	r26, r22
 5b6:	18 96       	adiw	r26, 0x08	; 8
 5b8:	ed 91       	ld	r30, X+
 5ba:	fc 91       	ld	r31, X
 5bc:	19 97       	sbiw	r26, 0x09	; 9
 5be:	88 23       	and	r24, r24
 5c0:	31 f0       	breq	.+12     	; 0x5ce <puts+0x44>
 5c2:	09 95       	icall
 5c4:	89 2b       	or	r24, r25
 5c6:	79 f3       	breq	.-34     	; 0x5a6 <puts+0x1c>
 5c8:	df ef       	ldi	r29, 0xFF	; 255
 5ca:	cf ef       	ldi	r28, 0xFF	; 255
 5cc:	ec cf       	rjmp	.-40     	; 0x5a6 <puts+0x1c>
 5ce:	8a e0       	ldi	r24, 0x0A	; 10
 5d0:	09 95       	icall
 5d2:	89 2b       	or	r24, r25
 5d4:	19 f0       	breq	.+6      	; 0x5dc <puts+0x52>
 5d6:	8f ef       	ldi	r24, 0xFF	; 255
 5d8:	9f ef       	ldi	r25, 0xFF	; 255
 5da:	02 c0       	rjmp	.+4      	; 0x5e0 <puts+0x56>
 5dc:	8d 2f       	mov	r24, r29
 5de:	9c 2f       	mov	r25, r28
 5e0:	df 91       	pop	r29
 5e2:	cf 91       	pop	r28
 5e4:	1f 91       	pop	r17
 5e6:	0f 91       	pop	r16
 5e8:	08 95       	ret

000005ea <vfprintf>:
 5ea:	ab e0       	ldi	r26, 0x0B	; 11
 5ec:	b0 e0       	ldi	r27, 0x00	; 0
 5ee:	ea ef       	ldi	r30, 0xFA	; 250
 5f0:	f2 e0       	ldi	r31, 0x02	; 2
 5f2:	7d c2       	rjmp	.+1274   	; 0xaee <__prologue_saves__>
 5f4:	6c 01       	movw	r12, r24
 5f6:	7b 01       	movw	r14, r22
 5f8:	8a 01       	movw	r16, r20
 5fa:	fc 01       	movw	r30, r24
 5fc:	16 82       	std	Z+6, r1	; 0x06
 5fe:	17 82       	std	Z+7, r1	; 0x07
 600:	83 81       	ldd	r24, Z+3	; 0x03
 602:	81 ff       	sbrs	r24, 1
 604:	bf c1       	rjmp	.+894    	; 0x984 <vfprintf+0x39a>
 606:	ce 01       	movw	r24, r28
 608:	01 96       	adiw	r24, 0x01	; 1
 60a:	3c 01       	movw	r6, r24
 60c:	f6 01       	movw	r30, r12
 60e:	93 81       	ldd	r25, Z+3	; 0x03
 610:	f7 01       	movw	r30, r14
 612:	93 fd       	sbrc	r25, 3
 614:	85 91       	lpm	r24, Z+
 616:	93 ff       	sbrs	r25, 3
 618:	81 91       	ld	r24, Z+
 61a:	7f 01       	movw	r14, r30
 61c:	88 23       	and	r24, r24
 61e:	09 f4       	brne	.+2      	; 0x622 <vfprintf+0x38>
 620:	ad c1       	rjmp	.+858    	; 0x97c <vfprintf+0x392>
 622:	85 32       	cpi	r24, 0x25	; 37
 624:	39 f4       	brne	.+14     	; 0x634 <vfprintf+0x4a>
 626:	93 fd       	sbrc	r25, 3
 628:	85 91       	lpm	r24, Z+
 62a:	93 ff       	sbrs	r25, 3
 62c:	81 91       	ld	r24, Z+
 62e:	7f 01       	movw	r14, r30
 630:	85 32       	cpi	r24, 0x25	; 37
 632:	21 f4       	brne	.+8      	; 0x63c <vfprintf+0x52>
 634:	b6 01       	movw	r22, r12
 636:	90 e0       	ldi	r25, 0x00	; 0
 638:	c0 d1       	rcall	.+896    	; 0x9ba <fputc>
 63a:	e8 cf       	rjmp	.-48     	; 0x60c <vfprintf+0x22>
 63c:	91 2c       	mov	r9, r1
 63e:	21 2c       	mov	r2, r1
 640:	31 2c       	mov	r3, r1
 642:	ff e1       	ldi	r31, 0x1F	; 31
 644:	f3 15       	cp	r31, r3
 646:	d8 f0       	brcs	.+54     	; 0x67e <vfprintf+0x94>
 648:	8b 32       	cpi	r24, 0x2B	; 43
 64a:	79 f0       	breq	.+30     	; 0x66a <vfprintf+0x80>
 64c:	38 f4       	brcc	.+14     	; 0x65c <vfprintf+0x72>
 64e:	80 32       	cpi	r24, 0x20	; 32
 650:	79 f0       	breq	.+30     	; 0x670 <vfprintf+0x86>
 652:	83 32       	cpi	r24, 0x23	; 35
 654:	a1 f4       	brne	.+40     	; 0x67e <vfprintf+0x94>
 656:	23 2d       	mov	r18, r3
 658:	20 61       	ori	r18, 0x10	; 16
 65a:	1d c0       	rjmp	.+58     	; 0x696 <vfprintf+0xac>
 65c:	8d 32       	cpi	r24, 0x2D	; 45
 65e:	61 f0       	breq	.+24     	; 0x678 <vfprintf+0x8e>
 660:	80 33       	cpi	r24, 0x30	; 48
 662:	69 f4       	brne	.+26     	; 0x67e <vfprintf+0x94>
 664:	23 2d       	mov	r18, r3
 666:	21 60       	ori	r18, 0x01	; 1
 668:	16 c0       	rjmp	.+44     	; 0x696 <vfprintf+0xac>
 66a:	83 2d       	mov	r24, r3
 66c:	82 60       	ori	r24, 0x02	; 2
 66e:	38 2e       	mov	r3, r24
 670:	e3 2d       	mov	r30, r3
 672:	e4 60       	ori	r30, 0x04	; 4
 674:	3e 2e       	mov	r3, r30
 676:	2a c0       	rjmp	.+84     	; 0x6cc <vfprintf+0xe2>
 678:	f3 2d       	mov	r31, r3
 67a:	f8 60       	ori	r31, 0x08	; 8
 67c:	1d c0       	rjmp	.+58     	; 0x6b8 <vfprintf+0xce>
 67e:	37 fc       	sbrc	r3, 7
 680:	2d c0       	rjmp	.+90     	; 0x6dc <vfprintf+0xf2>
 682:	20 ed       	ldi	r18, 0xD0	; 208
 684:	28 0f       	add	r18, r24
 686:	2a 30       	cpi	r18, 0x0A	; 10
 688:	40 f0       	brcs	.+16     	; 0x69a <vfprintf+0xb0>
 68a:	8e 32       	cpi	r24, 0x2E	; 46
 68c:	b9 f4       	brne	.+46     	; 0x6bc <vfprintf+0xd2>
 68e:	36 fc       	sbrc	r3, 6
 690:	75 c1       	rjmp	.+746    	; 0x97c <vfprintf+0x392>
 692:	23 2d       	mov	r18, r3
 694:	20 64       	ori	r18, 0x40	; 64
 696:	32 2e       	mov	r3, r18
 698:	19 c0       	rjmp	.+50     	; 0x6cc <vfprintf+0xe2>
 69a:	36 fe       	sbrs	r3, 6
 69c:	06 c0       	rjmp	.+12     	; 0x6aa <vfprintf+0xc0>
 69e:	8a e0       	ldi	r24, 0x0A	; 10
 6a0:	98 9e       	mul	r9, r24
 6a2:	20 0d       	add	r18, r0
 6a4:	11 24       	eor	r1, r1
 6a6:	92 2e       	mov	r9, r18
 6a8:	11 c0       	rjmp	.+34     	; 0x6cc <vfprintf+0xe2>
 6aa:	ea e0       	ldi	r30, 0x0A	; 10
 6ac:	2e 9e       	mul	r2, r30
 6ae:	20 0d       	add	r18, r0
 6b0:	11 24       	eor	r1, r1
 6b2:	22 2e       	mov	r2, r18
 6b4:	f3 2d       	mov	r31, r3
 6b6:	f0 62       	ori	r31, 0x20	; 32
 6b8:	3f 2e       	mov	r3, r31
 6ba:	08 c0       	rjmp	.+16     	; 0x6cc <vfprintf+0xe2>
 6bc:	8c 36       	cpi	r24, 0x6C	; 108
 6be:	21 f4       	brne	.+8      	; 0x6c8 <vfprintf+0xde>
 6c0:	83 2d       	mov	r24, r3
 6c2:	80 68       	ori	r24, 0x80	; 128
 6c4:	38 2e       	mov	r3, r24
 6c6:	02 c0       	rjmp	.+4      	; 0x6cc <vfprintf+0xe2>
 6c8:	88 36       	cpi	r24, 0x68	; 104
 6ca:	41 f4       	brne	.+16     	; 0x6dc <vfprintf+0xf2>
 6cc:	f7 01       	movw	r30, r14
 6ce:	93 fd       	sbrc	r25, 3
 6d0:	85 91       	lpm	r24, Z+
 6d2:	93 ff       	sbrs	r25, 3
 6d4:	81 91       	ld	r24, Z+
 6d6:	7f 01       	movw	r14, r30
 6d8:	81 11       	cpse	r24, r1
 6da:	b3 cf       	rjmp	.-154    	; 0x642 <vfprintf+0x58>
 6dc:	98 2f       	mov	r25, r24
 6de:	9f 7d       	andi	r25, 0xDF	; 223
 6e0:	95 54       	subi	r25, 0x45	; 69
 6e2:	93 30       	cpi	r25, 0x03	; 3
 6e4:	28 f4       	brcc	.+10     	; 0x6f0 <vfprintf+0x106>
 6e6:	0c 5f       	subi	r16, 0xFC	; 252
 6e8:	1f 4f       	sbci	r17, 0xFF	; 255
 6ea:	9f e3       	ldi	r25, 0x3F	; 63
 6ec:	99 83       	std	Y+1, r25	; 0x01
 6ee:	0d c0       	rjmp	.+26     	; 0x70a <vfprintf+0x120>
 6f0:	83 36       	cpi	r24, 0x63	; 99
 6f2:	31 f0       	breq	.+12     	; 0x700 <vfprintf+0x116>
 6f4:	83 37       	cpi	r24, 0x73	; 115
 6f6:	71 f0       	breq	.+28     	; 0x714 <vfprintf+0x12a>
 6f8:	83 35       	cpi	r24, 0x53	; 83
 6fa:	09 f0       	breq	.+2      	; 0x6fe <vfprintf+0x114>
 6fc:	55 c0       	rjmp	.+170    	; 0x7a8 <vfprintf+0x1be>
 6fe:	20 c0       	rjmp	.+64     	; 0x740 <vfprintf+0x156>
 700:	f8 01       	movw	r30, r16
 702:	80 81       	ld	r24, Z
 704:	89 83       	std	Y+1, r24	; 0x01
 706:	0e 5f       	subi	r16, 0xFE	; 254
 708:	1f 4f       	sbci	r17, 0xFF	; 255
 70a:	88 24       	eor	r8, r8
 70c:	83 94       	inc	r8
 70e:	91 2c       	mov	r9, r1
 710:	53 01       	movw	r10, r6
 712:	12 c0       	rjmp	.+36     	; 0x738 <vfprintf+0x14e>
 714:	28 01       	movw	r4, r16
 716:	f2 e0       	ldi	r31, 0x02	; 2
 718:	4f 0e       	add	r4, r31
 71a:	51 1c       	adc	r5, r1
 71c:	f8 01       	movw	r30, r16
 71e:	a0 80       	ld	r10, Z
 720:	b1 80       	ldd	r11, Z+1	; 0x01
 722:	36 fe       	sbrs	r3, 6
 724:	03 c0       	rjmp	.+6      	; 0x72c <vfprintf+0x142>
 726:	69 2d       	mov	r22, r9
 728:	70 e0       	ldi	r23, 0x00	; 0
 72a:	02 c0       	rjmp	.+4      	; 0x730 <vfprintf+0x146>
 72c:	6f ef       	ldi	r22, 0xFF	; 255
 72e:	7f ef       	ldi	r23, 0xFF	; 255
 730:	c5 01       	movw	r24, r10
 732:	38 d1       	rcall	.+624    	; 0x9a4 <strnlen>
 734:	4c 01       	movw	r8, r24
 736:	82 01       	movw	r16, r4
 738:	f3 2d       	mov	r31, r3
 73a:	ff 77       	andi	r31, 0x7F	; 127
 73c:	3f 2e       	mov	r3, r31
 73e:	15 c0       	rjmp	.+42     	; 0x76a <vfprintf+0x180>
 740:	28 01       	movw	r4, r16
 742:	22 e0       	ldi	r18, 0x02	; 2
 744:	42 0e       	add	r4, r18
 746:	51 1c       	adc	r5, r1
 748:	f8 01       	movw	r30, r16
 74a:	a0 80       	ld	r10, Z
 74c:	b1 80       	ldd	r11, Z+1	; 0x01
 74e:	36 fe       	sbrs	r3, 6
 750:	03 c0       	rjmp	.+6      	; 0x758 <vfprintf+0x16e>
 752:	69 2d       	mov	r22, r9
 754:	70 e0       	ldi	r23, 0x00	; 0
 756:	02 c0       	rjmp	.+4      	; 0x75c <vfprintf+0x172>
 758:	6f ef       	ldi	r22, 0xFF	; 255
 75a:	7f ef       	ldi	r23, 0xFF	; 255
 75c:	c5 01       	movw	r24, r10
 75e:	17 d1       	rcall	.+558    	; 0x98e <strnlen_P>
 760:	4c 01       	movw	r8, r24
 762:	f3 2d       	mov	r31, r3
 764:	f0 68       	ori	r31, 0x80	; 128
 766:	3f 2e       	mov	r3, r31
 768:	82 01       	movw	r16, r4
 76a:	33 fc       	sbrc	r3, 3
 76c:	19 c0       	rjmp	.+50     	; 0x7a0 <vfprintf+0x1b6>
 76e:	82 2d       	mov	r24, r2
 770:	90 e0       	ldi	r25, 0x00	; 0
 772:	88 16       	cp	r8, r24
 774:	99 06       	cpc	r9, r25
 776:	a0 f4       	brcc	.+40     	; 0x7a0 <vfprintf+0x1b6>
 778:	b6 01       	movw	r22, r12
 77a:	80 e2       	ldi	r24, 0x20	; 32
 77c:	90 e0       	ldi	r25, 0x00	; 0
 77e:	1d d1       	rcall	.+570    	; 0x9ba <fputc>
 780:	2a 94       	dec	r2
 782:	f5 cf       	rjmp	.-22     	; 0x76e <vfprintf+0x184>
 784:	f5 01       	movw	r30, r10
 786:	37 fc       	sbrc	r3, 7
 788:	85 91       	lpm	r24, Z+
 78a:	37 fe       	sbrs	r3, 7
 78c:	81 91       	ld	r24, Z+
 78e:	5f 01       	movw	r10, r30
 790:	b6 01       	movw	r22, r12
 792:	90 e0       	ldi	r25, 0x00	; 0
 794:	12 d1       	rcall	.+548    	; 0x9ba <fputc>
 796:	21 10       	cpse	r2, r1
 798:	2a 94       	dec	r2
 79a:	21 e0       	ldi	r18, 0x01	; 1
 79c:	82 1a       	sub	r8, r18
 79e:	91 08       	sbc	r9, r1
 7a0:	81 14       	cp	r8, r1
 7a2:	91 04       	cpc	r9, r1
 7a4:	79 f7       	brne	.-34     	; 0x784 <vfprintf+0x19a>
 7a6:	e1 c0       	rjmp	.+450    	; 0x96a <vfprintf+0x380>
 7a8:	84 36       	cpi	r24, 0x64	; 100
 7aa:	11 f0       	breq	.+4      	; 0x7b0 <vfprintf+0x1c6>
 7ac:	89 36       	cpi	r24, 0x69	; 105
 7ae:	39 f5       	brne	.+78     	; 0x7fe <vfprintf+0x214>
 7b0:	f8 01       	movw	r30, r16
 7b2:	37 fe       	sbrs	r3, 7
 7b4:	07 c0       	rjmp	.+14     	; 0x7c4 <vfprintf+0x1da>
 7b6:	60 81       	ld	r22, Z
 7b8:	71 81       	ldd	r23, Z+1	; 0x01
 7ba:	82 81       	ldd	r24, Z+2	; 0x02
 7bc:	93 81       	ldd	r25, Z+3	; 0x03
 7be:	0c 5f       	subi	r16, 0xFC	; 252
 7c0:	1f 4f       	sbci	r17, 0xFF	; 255
 7c2:	08 c0       	rjmp	.+16     	; 0x7d4 <vfprintf+0x1ea>
 7c4:	60 81       	ld	r22, Z
 7c6:	71 81       	ldd	r23, Z+1	; 0x01
 7c8:	07 2e       	mov	r0, r23
 7ca:	00 0c       	add	r0, r0
 7cc:	88 0b       	sbc	r24, r24
 7ce:	99 0b       	sbc	r25, r25
 7d0:	0e 5f       	subi	r16, 0xFE	; 254
 7d2:	1f 4f       	sbci	r17, 0xFF	; 255
 7d4:	f3 2d       	mov	r31, r3
 7d6:	ff 76       	andi	r31, 0x6F	; 111
 7d8:	3f 2e       	mov	r3, r31
 7da:	97 ff       	sbrs	r25, 7
 7dc:	09 c0       	rjmp	.+18     	; 0x7f0 <vfprintf+0x206>
 7de:	90 95       	com	r25
 7e0:	80 95       	com	r24
 7e2:	70 95       	com	r23
 7e4:	61 95       	neg	r22
 7e6:	7f 4f       	sbci	r23, 0xFF	; 255
 7e8:	8f 4f       	sbci	r24, 0xFF	; 255
 7ea:	9f 4f       	sbci	r25, 0xFF	; 255
 7ec:	f0 68       	ori	r31, 0x80	; 128
 7ee:	3f 2e       	mov	r3, r31
 7f0:	2a e0       	ldi	r18, 0x0A	; 10
 7f2:	30 e0       	ldi	r19, 0x00	; 0
 7f4:	a3 01       	movw	r20, r6
 7f6:	1d d1       	rcall	.+570    	; 0xa32 <__ultoa_invert>
 7f8:	88 2e       	mov	r8, r24
 7fa:	86 18       	sub	r8, r6
 7fc:	44 c0       	rjmp	.+136    	; 0x886 <vfprintf+0x29c>
 7fe:	85 37       	cpi	r24, 0x75	; 117
 800:	31 f4       	brne	.+12     	; 0x80e <vfprintf+0x224>
 802:	23 2d       	mov	r18, r3
 804:	2f 7e       	andi	r18, 0xEF	; 239
 806:	b2 2e       	mov	r11, r18
 808:	2a e0       	ldi	r18, 0x0A	; 10
 80a:	30 e0       	ldi	r19, 0x00	; 0
 80c:	25 c0       	rjmp	.+74     	; 0x858 <vfprintf+0x26e>
 80e:	93 2d       	mov	r25, r3
 810:	99 7f       	andi	r25, 0xF9	; 249
 812:	b9 2e       	mov	r11, r25
 814:	8f 36       	cpi	r24, 0x6F	; 111
 816:	c1 f0       	breq	.+48     	; 0x848 <vfprintf+0x25e>
 818:	18 f4       	brcc	.+6      	; 0x820 <vfprintf+0x236>
 81a:	88 35       	cpi	r24, 0x58	; 88
 81c:	79 f0       	breq	.+30     	; 0x83c <vfprintf+0x252>
 81e:	ae c0       	rjmp	.+348    	; 0x97c <vfprintf+0x392>
 820:	80 37       	cpi	r24, 0x70	; 112
 822:	19 f0       	breq	.+6      	; 0x82a <vfprintf+0x240>
 824:	88 37       	cpi	r24, 0x78	; 120
 826:	21 f0       	breq	.+8      	; 0x830 <vfprintf+0x246>
 828:	a9 c0       	rjmp	.+338    	; 0x97c <vfprintf+0x392>
 82a:	e9 2f       	mov	r30, r25
 82c:	e0 61       	ori	r30, 0x10	; 16
 82e:	be 2e       	mov	r11, r30
 830:	b4 fe       	sbrs	r11, 4
 832:	0d c0       	rjmp	.+26     	; 0x84e <vfprintf+0x264>
 834:	fb 2d       	mov	r31, r11
 836:	f4 60       	ori	r31, 0x04	; 4
 838:	bf 2e       	mov	r11, r31
 83a:	09 c0       	rjmp	.+18     	; 0x84e <vfprintf+0x264>
 83c:	34 fe       	sbrs	r3, 4
 83e:	0a c0       	rjmp	.+20     	; 0x854 <vfprintf+0x26a>
 840:	29 2f       	mov	r18, r25
 842:	26 60       	ori	r18, 0x06	; 6
 844:	b2 2e       	mov	r11, r18
 846:	06 c0       	rjmp	.+12     	; 0x854 <vfprintf+0x26a>
 848:	28 e0       	ldi	r18, 0x08	; 8
 84a:	30 e0       	ldi	r19, 0x00	; 0
 84c:	05 c0       	rjmp	.+10     	; 0x858 <vfprintf+0x26e>
 84e:	20 e1       	ldi	r18, 0x10	; 16
 850:	30 e0       	ldi	r19, 0x00	; 0
 852:	02 c0       	rjmp	.+4      	; 0x858 <vfprintf+0x26e>
 854:	20 e1       	ldi	r18, 0x10	; 16
 856:	32 e0       	ldi	r19, 0x02	; 2
 858:	f8 01       	movw	r30, r16
 85a:	b7 fe       	sbrs	r11, 7
 85c:	07 c0       	rjmp	.+14     	; 0x86c <vfprintf+0x282>
 85e:	60 81       	ld	r22, Z
 860:	71 81       	ldd	r23, Z+1	; 0x01
 862:	82 81       	ldd	r24, Z+2	; 0x02
 864:	93 81       	ldd	r25, Z+3	; 0x03
 866:	0c 5f       	subi	r16, 0xFC	; 252
 868:	1f 4f       	sbci	r17, 0xFF	; 255
 86a:	06 c0       	rjmp	.+12     	; 0x878 <vfprintf+0x28e>
 86c:	60 81       	ld	r22, Z
 86e:	71 81       	ldd	r23, Z+1	; 0x01
 870:	80 e0       	ldi	r24, 0x00	; 0
 872:	90 e0       	ldi	r25, 0x00	; 0
 874:	0e 5f       	subi	r16, 0xFE	; 254
 876:	1f 4f       	sbci	r17, 0xFF	; 255
 878:	a3 01       	movw	r20, r6
 87a:	db d0       	rcall	.+438    	; 0xa32 <__ultoa_invert>
 87c:	88 2e       	mov	r8, r24
 87e:	86 18       	sub	r8, r6
 880:	fb 2d       	mov	r31, r11
 882:	ff 77       	andi	r31, 0x7F	; 127
 884:	3f 2e       	mov	r3, r31
 886:	36 fe       	sbrs	r3, 6
 888:	0d c0       	rjmp	.+26     	; 0x8a4 <vfprintf+0x2ba>
 88a:	23 2d       	mov	r18, r3
 88c:	2e 7f       	andi	r18, 0xFE	; 254
 88e:	a2 2e       	mov	r10, r18
 890:	89 14       	cp	r8, r9
 892:	58 f4       	brcc	.+22     	; 0x8aa <vfprintf+0x2c0>
 894:	34 fe       	sbrs	r3, 4
 896:	0b c0       	rjmp	.+22     	; 0x8ae <vfprintf+0x2c4>
 898:	32 fc       	sbrc	r3, 2
 89a:	09 c0       	rjmp	.+18     	; 0x8ae <vfprintf+0x2c4>
 89c:	83 2d       	mov	r24, r3
 89e:	8e 7e       	andi	r24, 0xEE	; 238
 8a0:	a8 2e       	mov	r10, r24
 8a2:	05 c0       	rjmp	.+10     	; 0x8ae <vfprintf+0x2c4>
 8a4:	b8 2c       	mov	r11, r8
 8a6:	a3 2c       	mov	r10, r3
 8a8:	03 c0       	rjmp	.+6      	; 0x8b0 <vfprintf+0x2c6>
 8aa:	b8 2c       	mov	r11, r8
 8ac:	01 c0       	rjmp	.+2      	; 0x8b0 <vfprintf+0x2c6>
 8ae:	b9 2c       	mov	r11, r9
 8b0:	a4 fe       	sbrs	r10, 4
 8b2:	0f c0       	rjmp	.+30     	; 0x8d2 <vfprintf+0x2e8>
 8b4:	fe 01       	movw	r30, r28
 8b6:	e8 0d       	add	r30, r8
 8b8:	f1 1d       	adc	r31, r1
 8ba:	80 81       	ld	r24, Z
 8bc:	80 33       	cpi	r24, 0x30	; 48
 8be:	21 f4       	brne	.+8      	; 0x8c8 <vfprintf+0x2de>
 8c0:	9a 2d       	mov	r25, r10
 8c2:	99 7e       	andi	r25, 0xE9	; 233
 8c4:	a9 2e       	mov	r10, r25
 8c6:	09 c0       	rjmp	.+18     	; 0x8da <vfprintf+0x2f0>
 8c8:	a2 fe       	sbrs	r10, 2
 8ca:	06 c0       	rjmp	.+12     	; 0x8d8 <vfprintf+0x2ee>
 8cc:	b3 94       	inc	r11
 8ce:	b3 94       	inc	r11
 8d0:	04 c0       	rjmp	.+8      	; 0x8da <vfprintf+0x2f0>
 8d2:	8a 2d       	mov	r24, r10
 8d4:	86 78       	andi	r24, 0x86	; 134
 8d6:	09 f0       	breq	.+2      	; 0x8da <vfprintf+0x2f0>
 8d8:	b3 94       	inc	r11
 8da:	a3 fc       	sbrc	r10, 3
 8dc:	10 c0       	rjmp	.+32     	; 0x8fe <vfprintf+0x314>
 8de:	a0 fe       	sbrs	r10, 0
 8e0:	06 c0       	rjmp	.+12     	; 0x8ee <vfprintf+0x304>
 8e2:	b2 14       	cp	r11, r2
 8e4:	80 f4       	brcc	.+32     	; 0x906 <vfprintf+0x31c>
 8e6:	28 0c       	add	r2, r8
 8e8:	92 2c       	mov	r9, r2
 8ea:	9b 18       	sub	r9, r11
 8ec:	0d c0       	rjmp	.+26     	; 0x908 <vfprintf+0x31e>
 8ee:	b2 14       	cp	r11, r2
 8f0:	58 f4       	brcc	.+22     	; 0x908 <vfprintf+0x31e>
 8f2:	b6 01       	movw	r22, r12
 8f4:	80 e2       	ldi	r24, 0x20	; 32
 8f6:	90 e0       	ldi	r25, 0x00	; 0
 8f8:	60 d0       	rcall	.+192    	; 0x9ba <fputc>
 8fa:	b3 94       	inc	r11
 8fc:	f8 cf       	rjmp	.-16     	; 0x8ee <vfprintf+0x304>
 8fe:	b2 14       	cp	r11, r2
 900:	18 f4       	brcc	.+6      	; 0x908 <vfprintf+0x31e>
 902:	2b 18       	sub	r2, r11
 904:	02 c0       	rjmp	.+4      	; 0x90a <vfprintf+0x320>
 906:	98 2c       	mov	r9, r8
 908:	21 2c       	mov	r2, r1
 90a:	a4 fe       	sbrs	r10, 4
 90c:	0f c0       	rjmp	.+30     	; 0x92c <vfprintf+0x342>
 90e:	b6 01       	movw	r22, r12
 910:	80 e3       	ldi	r24, 0x30	; 48
 912:	90 e0       	ldi	r25, 0x00	; 0
 914:	52 d0       	rcall	.+164    	; 0x9ba <fputc>
 916:	a2 fe       	sbrs	r10, 2
 918:	16 c0       	rjmp	.+44     	; 0x946 <vfprintf+0x35c>
 91a:	a1 fc       	sbrc	r10, 1
 91c:	03 c0       	rjmp	.+6      	; 0x924 <vfprintf+0x33a>
 91e:	88 e7       	ldi	r24, 0x78	; 120
 920:	90 e0       	ldi	r25, 0x00	; 0
 922:	02 c0       	rjmp	.+4      	; 0x928 <vfprintf+0x33e>
 924:	88 e5       	ldi	r24, 0x58	; 88
 926:	90 e0       	ldi	r25, 0x00	; 0
 928:	b6 01       	movw	r22, r12
 92a:	0c c0       	rjmp	.+24     	; 0x944 <vfprintf+0x35a>
 92c:	8a 2d       	mov	r24, r10
 92e:	86 78       	andi	r24, 0x86	; 134
 930:	51 f0       	breq	.+20     	; 0x946 <vfprintf+0x35c>
 932:	a1 fe       	sbrs	r10, 1
 934:	02 c0       	rjmp	.+4      	; 0x93a <vfprintf+0x350>
 936:	8b e2       	ldi	r24, 0x2B	; 43
 938:	01 c0       	rjmp	.+2      	; 0x93c <vfprintf+0x352>
 93a:	80 e2       	ldi	r24, 0x20	; 32
 93c:	a7 fc       	sbrc	r10, 7
 93e:	8d e2       	ldi	r24, 0x2D	; 45
 940:	b6 01       	movw	r22, r12
 942:	90 e0       	ldi	r25, 0x00	; 0
 944:	3a d0       	rcall	.+116    	; 0x9ba <fputc>
 946:	89 14       	cp	r8, r9
 948:	30 f4       	brcc	.+12     	; 0x956 <vfprintf+0x36c>
 94a:	b6 01       	movw	r22, r12
 94c:	80 e3       	ldi	r24, 0x30	; 48
 94e:	90 e0       	ldi	r25, 0x00	; 0
 950:	34 d0       	rcall	.+104    	; 0x9ba <fputc>
 952:	9a 94       	dec	r9
 954:	f8 cf       	rjmp	.-16     	; 0x946 <vfprintf+0x35c>
 956:	8a 94       	dec	r8
 958:	f3 01       	movw	r30, r6
 95a:	e8 0d       	add	r30, r8
 95c:	f1 1d       	adc	r31, r1
 95e:	80 81       	ld	r24, Z
 960:	b6 01       	movw	r22, r12
 962:	90 e0       	ldi	r25, 0x00	; 0
 964:	2a d0       	rcall	.+84     	; 0x9ba <fputc>
 966:	81 10       	cpse	r8, r1
 968:	f6 cf       	rjmp	.-20     	; 0x956 <vfprintf+0x36c>
 96a:	22 20       	and	r2, r2
 96c:	09 f4       	brne	.+2      	; 0x970 <vfprintf+0x386>
 96e:	4e ce       	rjmp	.-868    	; 0x60c <vfprintf+0x22>
 970:	b6 01       	movw	r22, r12
 972:	80 e2       	ldi	r24, 0x20	; 32
 974:	90 e0       	ldi	r25, 0x00	; 0
 976:	21 d0       	rcall	.+66     	; 0x9ba <fputc>
 978:	2a 94       	dec	r2
 97a:	f7 cf       	rjmp	.-18     	; 0x96a <vfprintf+0x380>
 97c:	f6 01       	movw	r30, r12
 97e:	86 81       	ldd	r24, Z+6	; 0x06
 980:	97 81       	ldd	r25, Z+7	; 0x07
 982:	02 c0       	rjmp	.+4      	; 0x988 <vfprintf+0x39e>
 984:	8f ef       	ldi	r24, 0xFF	; 255
 986:	9f ef       	ldi	r25, 0xFF	; 255
 988:	2b 96       	adiw	r28, 0x0b	; 11
 98a:	e2 e1       	ldi	r30, 0x12	; 18
 98c:	c9 c0       	rjmp	.+402    	; 0xb20 <__epilogue_restores__>

0000098e <strnlen_P>:
 98e:	fc 01       	movw	r30, r24
 990:	05 90       	lpm	r0, Z+
 992:	61 50       	subi	r22, 0x01	; 1
 994:	70 40       	sbci	r23, 0x00	; 0
 996:	01 10       	cpse	r0, r1
 998:	d8 f7       	brcc	.-10     	; 0x990 <strnlen_P+0x2>
 99a:	80 95       	com	r24
 99c:	90 95       	com	r25
 99e:	8e 0f       	add	r24, r30
 9a0:	9f 1f       	adc	r25, r31
 9a2:	08 95       	ret

000009a4 <strnlen>:
 9a4:	fc 01       	movw	r30, r24
 9a6:	61 50       	subi	r22, 0x01	; 1
 9a8:	70 40       	sbci	r23, 0x00	; 0
 9aa:	01 90       	ld	r0, Z+
 9ac:	01 10       	cpse	r0, r1
 9ae:	d8 f7       	brcc	.-10     	; 0x9a6 <strnlen+0x2>
 9b0:	80 95       	com	r24
 9b2:	90 95       	com	r25
 9b4:	8e 0f       	add	r24, r30
 9b6:	9f 1f       	adc	r25, r31
 9b8:	08 95       	ret

000009ba <fputc>:
 9ba:	0f 93       	push	r16
 9bc:	1f 93       	push	r17
 9be:	cf 93       	push	r28
 9c0:	df 93       	push	r29
 9c2:	fb 01       	movw	r30, r22
 9c4:	23 81       	ldd	r18, Z+3	; 0x03
 9c6:	21 fd       	sbrc	r18, 1
 9c8:	03 c0       	rjmp	.+6      	; 0x9d0 <fputc+0x16>
 9ca:	8f ef       	ldi	r24, 0xFF	; 255
 9cc:	9f ef       	ldi	r25, 0xFF	; 255
 9ce:	2c c0       	rjmp	.+88     	; 0xa28 <fputc+0x6e>
 9d0:	22 ff       	sbrs	r18, 2
 9d2:	16 c0       	rjmp	.+44     	; 0xa00 <fputc+0x46>
 9d4:	46 81       	ldd	r20, Z+6	; 0x06
 9d6:	57 81       	ldd	r21, Z+7	; 0x07
 9d8:	24 81       	ldd	r18, Z+4	; 0x04
 9da:	35 81       	ldd	r19, Z+5	; 0x05
 9dc:	42 17       	cp	r20, r18
 9de:	53 07       	cpc	r21, r19
 9e0:	44 f4       	brge	.+16     	; 0x9f2 <fputc+0x38>
 9e2:	a0 81       	ld	r26, Z
 9e4:	b1 81       	ldd	r27, Z+1	; 0x01
 9e6:	9d 01       	movw	r18, r26
 9e8:	2f 5f       	subi	r18, 0xFF	; 255
 9ea:	3f 4f       	sbci	r19, 0xFF	; 255
 9ec:	20 83       	st	Z, r18
 9ee:	31 83       	std	Z+1, r19	; 0x01
 9f0:	8c 93       	st	X, r24
 9f2:	26 81       	ldd	r18, Z+6	; 0x06
 9f4:	37 81       	ldd	r19, Z+7	; 0x07
 9f6:	2f 5f       	subi	r18, 0xFF	; 255
 9f8:	3f 4f       	sbci	r19, 0xFF	; 255
 9fa:	26 83       	std	Z+6, r18	; 0x06
 9fc:	37 83       	std	Z+7, r19	; 0x07
 9fe:	14 c0       	rjmp	.+40     	; 0xa28 <fputc+0x6e>
 a00:	8b 01       	movw	r16, r22
 a02:	ec 01       	movw	r28, r24
 a04:	fb 01       	movw	r30, r22
 a06:	00 84       	ldd	r0, Z+8	; 0x08
 a08:	f1 85       	ldd	r31, Z+9	; 0x09
 a0a:	e0 2d       	mov	r30, r0
 a0c:	09 95       	icall
 a0e:	89 2b       	or	r24, r25
 a10:	e1 f6       	brne	.-72     	; 0x9ca <fputc+0x10>
 a12:	d8 01       	movw	r26, r16
 a14:	16 96       	adiw	r26, 0x06	; 6
 a16:	8d 91       	ld	r24, X+
 a18:	9c 91       	ld	r25, X
 a1a:	17 97       	sbiw	r26, 0x07	; 7
 a1c:	01 96       	adiw	r24, 0x01	; 1
 a1e:	16 96       	adiw	r26, 0x06	; 6
 a20:	8d 93       	st	X+, r24
 a22:	9c 93       	st	X, r25
 a24:	17 97       	sbiw	r26, 0x07	; 7
 a26:	ce 01       	movw	r24, r28
 a28:	df 91       	pop	r29
 a2a:	cf 91       	pop	r28
 a2c:	1f 91       	pop	r17
 a2e:	0f 91       	pop	r16
 a30:	08 95       	ret

00000a32 <__ultoa_invert>:
 a32:	fa 01       	movw	r30, r20
 a34:	aa 27       	eor	r26, r26
 a36:	28 30       	cpi	r18, 0x08	; 8
 a38:	51 f1       	breq	.+84     	; 0xa8e <__ultoa_invert+0x5c>
 a3a:	20 31       	cpi	r18, 0x10	; 16
 a3c:	81 f1       	breq	.+96     	; 0xa9e <__ultoa_invert+0x6c>
 a3e:	e8 94       	clt
 a40:	6f 93       	push	r22
 a42:	6e 7f       	andi	r22, 0xFE	; 254
 a44:	6e 5f       	subi	r22, 0xFE	; 254
 a46:	7f 4f       	sbci	r23, 0xFF	; 255
 a48:	8f 4f       	sbci	r24, 0xFF	; 255
 a4a:	9f 4f       	sbci	r25, 0xFF	; 255
 a4c:	af 4f       	sbci	r26, 0xFF	; 255
 a4e:	b1 e0       	ldi	r27, 0x01	; 1
 a50:	3e d0       	rcall	.+124    	; 0xace <__ultoa_invert+0x9c>
 a52:	b4 e0       	ldi	r27, 0x04	; 4
 a54:	3c d0       	rcall	.+120    	; 0xace <__ultoa_invert+0x9c>
 a56:	67 0f       	add	r22, r23
 a58:	78 1f       	adc	r23, r24
 a5a:	89 1f       	adc	r24, r25
 a5c:	9a 1f       	adc	r25, r26
 a5e:	a1 1d       	adc	r26, r1
 a60:	68 0f       	add	r22, r24
 a62:	79 1f       	adc	r23, r25
 a64:	8a 1f       	adc	r24, r26
 a66:	91 1d       	adc	r25, r1
 a68:	a1 1d       	adc	r26, r1
 a6a:	6a 0f       	add	r22, r26
 a6c:	71 1d       	adc	r23, r1
 a6e:	81 1d       	adc	r24, r1
 a70:	91 1d       	adc	r25, r1
 a72:	a1 1d       	adc	r26, r1
 a74:	20 d0       	rcall	.+64     	; 0xab6 <__ultoa_invert+0x84>
 a76:	09 f4       	brne	.+2      	; 0xa7a <__ultoa_invert+0x48>
 a78:	68 94       	set
 a7a:	3f 91       	pop	r19
 a7c:	2a e0       	ldi	r18, 0x0A	; 10
 a7e:	26 9f       	mul	r18, r22
 a80:	11 24       	eor	r1, r1
 a82:	30 19       	sub	r19, r0
 a84:	30 5d       	subi	r19, 0xD0	; 208
 a86:	31 93       	st	Z+, r19
 a88:	de f6       	brtc	.-74     	; 0xa40 <__ultoa_invert+0xe>
 a8a:	cf 01       	movw	r24, r30
 a8c:	08 95       	ret
 a8e:	46 2f       	mov	r20, r22
 a90:	47 70       	andi	r20, 0x07	; 7
 a92:	40 5d       	subi	r20, 0xD0	; 208
 a94:	41 93       	st	Z+, r20
 a96:	b3 e0       	ldi	r27, 0x03	; 3
 a98:	0f d0       	rcall	.+30     	; 0xab8 <__ultoa_invert+0x86>
 a9a:	c9 f7       	brne	.-14     	; 0xa8e <__ultoa_invert+0x5c>
 a9c:	f6 cf       	rjmp	.-20     	; 0xa8a <__ultoa_invert+0x58>
 a9e:	46 2f       	mov	r20, r22
 aa0:	4f 70       	andi	r20, 0x0F	; 15
 aa2:	40 5d       	subi	r20, 0xD0	; 208
 aa4:	4a 33       	cpi	r20, 0x3A	; 58
 aa6:	18 f0       	brcs	.+6      	; 0xaae <__ultoa_invert+0x7c>
 aa8:	49 5d       	subi	r20, 0xD9	; 217
 aaa:	31 fd       	sbrc	r19, 1
 aac:	40 52       	subi	r20, 0x20	; 32
 aae:	41 93       	st	Z+, r20
 ab0:	02 d0       	rcall	.+4      	; 0xab6 <__ultoa_invert+0x84>
 ab2:	a9 f7       	brne	.-22     	; 0xa9e <__ultoa_invert+0x6c>
 ab4:	ea cf       	rjmp	.-44     	; 0xa8a <__ultoa_invert+0x58>
 ab6:	b4 e0       	ldi	r27, 0x04	; 4
 ab8:	a6 95       	lsr	r26
 aba:	97 95       	ror	r25
 abc:	87 95       	ror	r24
 abe:	77 95       	ror	r23
 ac0:	67 95       	ror	r22
 ac2:	ba 95       	dec	r27
 ac4:	c9 f7       	brne	.-14     	; 0xab8 <__ultoa_invert+0x86>
 ac6:	00 97       	sbiw	r24, 0x00	; 0
 ac8:	61 05       	cpc	r22, r1
 aca:	71 05       	cpc	r23, r1
 acc:	08 95       	ret
 ace:	9b 01       	movw	r18, r22
 ad0:	ac 01       	movw	r20, r24
 ad2:	0a 2e       	mov	r0, r26
 ad4:	06 94       	lsr	r0
 ad6:	57 95       	ror	r21
 ad8:	47 95       	ror	r20
 ada:	37 95       	ror	r19
 adc:	27 95       	ror	r18
 ade:	ba 95       	dec	r27
 ae0:	c9 f7       	brne	.-14     	; 0xad4 <__ultoa_invert+0xa2>
 ae2:	62 0f       	add	r22, r18
 ae4:	73 1f       	adc	r23, r19
 ae6:	84 1f       	adc	r24, r20
 ae8:	95 1f       	adc	r25, r21
 aea:	a0 1d       	adc	r26, r0
 aec:	08 95       	ret

00000aee <__prologue_saves__>:
 aee:	2f 92       	push	r2
 af0:	3f 92       	push	r3
 af2:	4f 92       	push	r4
 af4:	5f 92       	push	r5
 af6:	6f 92       	push	r6
 af8:	7f 92       	push	r7
 afa:	8f 92       	push	r8
 afc:	9f 92       	push	r9
 afe:	af 92       	push	r10
 b00:	bf 92       	push	r11
 b02:	cf 92       	push	r12
 b04:	df 92       	push	r13
 b06:	ef 92       	push	r14
 b08:	ff 92       	push	r15
 b0a:	0f 93       	push	r16
 b0c:	1f 93       	push	r17
 b0e:	cf 93       	push	r28
 b10:	df 93       	push	r29
 b12:	cd b7       	in	r28, 0x3d	; 61
 b14:	de b7       	in	r29, 0x3e	; 62
 b16:	ca 1b       	sub	r28, r26
 b18:	db 0b       	sbc	r29, r27
 b1a:	cd bf       	out	0x3d, r28	; 61
 b1c:	de bf       	out	0x3e, r29	; 62
 b1e:	09 94       	ijmp

00000b20 <__epilogue_restores__>:
 b20:	2a 88       	ldd	r2, Y+18	; 0x12
 b22:	39 88       	ldd	r3, Y+17	; 0x11
 b24:	48 88       	ldd	r4, Y+16	; 0x10
 b26:	5f 84       	ldd	r5, Y+15	; 0x0f
 b28:	6e 84       	ldd	r6, Y+14	; 0x0e
 b2a:	7d 84       	ldd	r7, Y+13	; 0x0d
 b2c:	8c 84       	ldd	r8, Y+12	; 0x0c
 b2e:	9b 84       	ldd	r9, Y+11	; 0x0b
 b30:	aa 84       	ldd	r10, Y+10	; 0x0a
 b32:	b9 84       	ldd	r11, Y+9	; 0x09
 b34:	c8 84       	ldd	r12, Y+8	; 0x08
 b36:	df 80       	ldd	r13, Y+7	; 0x07
 b38:	ee 80       	ldd	r14, Y+6	; 0x06
 b3a:	fd 80       	ldd	r15, Y+5	; 0x05
 b3c:	0c 81       	ldd	r16, Y+4	; 0x04
 b3e:	1b 81       	ldd	r17, Y+3	; 0x03
 b40:	aa 81       	ldd	r26, Y+2	; 0x02
 b42:	b9 81       	ldd	r27, Y+1	; 0x01
 b44:	ce 0f       	add	r28, r30
 b46:	d1 1d       	adc	r29, r1
 b48:	cd bf       	out	0x3d, r28	; 61
 b4a:	de bf       	out	0x3e, r29	; 62
 b4c:	ed 01       	movw	r28, r26
 b4e:	08 95       	ret

00000b50 <_exit>:
 b50:	f8 94       	cli

00000b52 <__stop_program>:
 b52:	ff cf       	rjmp	.-2      	; 0xb52 <__stop_program>
