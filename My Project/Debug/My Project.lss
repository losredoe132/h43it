
My Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803800  00803800  0000018a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000136  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000018a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001bc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000001fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001bd8  00000000  00000000  00000224  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000018b7  00000000  00000000  00001dfc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000031e  00000000  00000000  000036b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000058  00000000  00000000  000039d4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000d47  00000000  00000000  00003a2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000070  00000000  00000000  00004773  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  000047e3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__vector_3>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  70:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	cd bf       	out	0x3d, r28	; 61
  84:	df e3       	ldi	r29, 0x3F	; 63
  86:	de bf       	out	0x3e, r29	; 62

00000088 <__do_copy_data>:
  88:	18 e3       	ldi	r17, 0x38	; 56
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b8 e3       	ldi	r27, 0x38	; 56
  8e:	e6 e3       	ldi	r30, 0x36	; 54
  90:	f1 e0       	ldi	r31, 0x01	; 1
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	a0 30       	cpi	r26, 0x00	; 0
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	28 e3       	ldi	r18, 0x38	; 56
  a0:	a0 e0       	ldi	r26, 0x00	; 0
  a2:	b8 e3       	ldi	r27, 0x38	; 56
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	a0 30       	cpi	r26, 0x00	; 0
  aa:	b2 07       	cpc	r27, r18
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 5d 00 	call	0xba	; 0xba <main>
  b2:	0c 94 99 00 	jmp	0x132	; 0x132 <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <main>:
int main() {

	// LED setup


	PORTA.DIRSET=0b00000100;
  ba:	e0 e0       	ldi	r30, 0x00	; 0
  bc:	f4 e0       	ldi	r31, 0x04	; 4
  be:	84 e0       	ldi	r24, 0x04	; 4
  c0:	81 83       	std	Z+1, r24	; 0x01
	PORTB.DIRSET=0b00000001;
  c2:	a0 e2       	ldi	r26, 0x20	; 32
  c4:	b4 e0       	ldi	r27, 0x04	; 4
  c6:	81 e0       	ldi	r24, 0x01	; 1
  c8:	11 96       	adiw	r26, 0x01	; 1
  ca:	8c 93       	st	X, r24
  cc:	11 97       	sbiw	r26, 0x01	; 1

	// Button setup

	PORTA.DIRCLR = btn_pin; // Set button as input
  ce:	90 e4       	ldi	r25, 0x40	; 64
  d0:	92 83       	std	Z+2, r25	; 0x02

	PORTA.PIN6CTRL = PORT_ISC_FALLING_gc | PORT_PULLUPEN_bm; // Enable pull-up resistor
  d2:	9b e0       	ldi	r25, 0x0B	; 11
  d4:	96 8b       	std	Z+22, r25	; 0x16

	

	sei(); // Set global interrupts
  d6:	78 94       	sei
	PORTA.OUT = 0b00000000;
  d8:	14 82       	std	Z+4, r1	; 0x04
	PORTB.OUT = 0b00000001;
  da:	14 96       	adiw	r26, 0x04	; 4
  dc:	8c 93       	st	X, r24
  de:	ff cf       	rjmp	.-2      	; 0xde <main+0x24>

000000e0 <__vector_3>:

	}


}
ISR(PORTA_PORT_vect) {
  e0:	1f 92       	push	r1
  e2:	0f 92       	push	r0
  e4:	0f b6       	in	r0, 0x3f	; 63
  e6:	0f 92       	push	r0
  e8:	11 24       	eor	r1, r1
  ea:	2f 93       	push	r18
  ec:	8f 93       	push	r24
  ee:	9f 93       	push	r25
  f0:	ef 93       	push	r30
  f2:	ff 93       	push	r31

	PORTA.OUTTGL = led_pin; // toggle led
  f4:	84 e0       	ldi	r24, 0x04	; 4
  f6:	80 93 07 04 	sts	0x0407, r24	; 0x800407 <__RODATA_PM_OFFSET__+0x7f8407>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  fa:	2a e6       	ldi	r18, 0x6A	; 106
  fc:	84 e0       	ldi	r24, 0x04	; 4
  fe:	91 e0       	ldi	r25, 0x01	; 1
 100:	21 50       	subi	r18, 0x01	; 1
 102:	80 40       	sbci	r24, 0x00	; 0
 104:	90 40       	sbci	r25, 0x00	; 0
 106:	e1 f7       	brne	.-8      	; 0x100 <__EEPROM_REGION_LENGTH__>
 108:	00 c0       	rjmp	.+0      	; 0x10a <__EEPROM_REGION_LENGTH__+0xa>
	_delay_ms(100);
	while (~PORTA.IN& btn_pin){
 10a:	e0 e0       	ldi	r30, 0x00	; 0
 10c:	f4 e0       	ldi	r31, 0x04	; 4
 10e:	80 85       	ldd	r24, Z+8	; 0x08
 110:	86 ff       	sbrs	r24, 6
 112:	fd cf       	rjmp	.-6      	; 0x10e <__EEPROM_REGION_LENGTH__+0xe>
		
	}
	PORTA.INTFLAGS |= btn_pin; // Clear interrupt flag
 114:	e0 e0       	ldi	r30, 0x00	; 0
 116:	f4 e0       	ldi	r31, 0x04	; 4
 118:	81 85       	ldd	r24, Z+9	; 0x09
 11a:	80 64       	ori	r24, 0x40	; 64
 11c:	81 87       	std	Z+9, r24	; 0x09

 11e:	ff 91       	pop	r31
 120:	ef 91       	pop	r30
 122:	9f 91       	pop	r25
 124:	8f 91       	pop	r24
 126:	2f 91       	pop	r18
 128:	0f 90       	pop	r0
 12a:	0f be       	out	0x3f, r0	; 63
 12c:	0f 90       	pop	r0
 12e:	1f 90       	pop	r1
 130:	18 95       	reti

00000132 <_exit>:
 132:	f8 94       	cli

00000134 <__stop_program>:
 134:	ff cf       	rjmp	.-2      	; 0x134 <__stop_program>
